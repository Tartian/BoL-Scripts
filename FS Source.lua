local L5_5, L6_6, L7_7, L8_8, L9_9, L10_10, L11_11, L12_12, L13_13
A1_1(A2_2)
if A1_1 then
  _UPVALUE2_ = A0_0
  A0_0 = "Forbidden Mid"
  A1_1 = 5.18003
  A2_2 = {}
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Zed = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Ahri = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Azir = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Ezreal = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Chogath = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Diana = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Corki = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
    return __Yasuo()
  end
  A2_2.Yasuo = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Kassadin = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
    return __Syndra()
  end
  A2_2.Syndra = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.TwistedFate = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
    return __Viktor()
  end
  A2_2.Viktor = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
    return __Xerath()
  end
  A2_2.Xerath = A3_3
  function A3_3()
    if not _ENV[0] then
      return
    end
  end
  A2_2.Kayle = A3_3
  _UPVALUE1_, A3_3 = nil, myHero
  A3_3 = A3_3.charName
  A3_3 = A2_2[A3_3]
  if not A3_3 then
    return
  end
  A3_3 = VIP_USER
  if not A3_3 then
    A3_3 = print
    L4_4 = "You need VIP to load Forbidden Script. Sorry."
    A3_3(L4_4)
    return
  end
  A3_3, L4_4, L5_5, L6_6 = nil, nil, nil, nil
  L7_7 = load
  L8_8 = nil
  L9_9 = require
  L10_10 = "socket"
  L9_9 = L9_9(L10_10)
  L10_10 = L9_9.tcp
  L11_11 = {}
  L12_12 = ARGB
  L13_13 = 255
  L12_12 = L12_12(L13_13, 0, 180, 0)
  L11_11.Green = L12_12
  L12_12 = ARGB
  L13_13 = 255
  L12_12 = L12_12(L13_13, 255, 215, 0)
  L11_11.Yellow = L12_12
  L12_12 = ARGB
  L13_13 = 255
  L12_12 = L12_12(L13_13, 255, 0, 0)
  L11_11.Red = L12_12
  L12_12 = ARGB
  L13_13 = 255
  L12_12 = L12_12(L13_13, 255, 255, 255)
  L11_11.White = L12_12
  L12_12 = ARGB
  L13_13 = 255
  L12_12 = L12_12(L13_13, 0, 0, 255)
  L11_11.Blue = L12_12
  L12_12 = AddLoadCallback
  function L13_13()
    local L0_14, L1_15, L2_16, L3_17, L4_18, L5_19, L6_20, L7_21, L8_22, L9_23, L10_24, L11_25, L12_26, L13_27, L14_28, L15_29, L16_30, L17_31, L18_32, L19_33, L20_34, L21_35, L22_36, L23_37, L24_38, L25_39, L26_40, L27_41, L28_42, L29_43, L30_44, L31_45
    L0_14 = 0
    L0_14 = _ENV[L0_14]
    if not L0_14 then
      return
    end
    L0_14 = L0_14 * L0_14
    L0_14 = _UPVALUE27_
    L0_14 = L0_14 + L0_14
    L1_15 = _UPVALUE11_
    if L1_15 then
      L0_14 = RequireSimpleLib
      L0_14 = L0_14()
      if not L0_14 then
        return
      end
      L0_14 = {}
      L1_15 = _Spell
      L2_16 = {}
      L2_16.Range = 300
      L2_16.DamageName = "TIAMAT"
      L3_17 = SPELL_TYPE
      L3_17 = L3_17.SELF
      L2_16.Type = L3_17
      L1_15 = L1_15(L2_16)
      L2_16 = L1_15
      L1_15 = L1_15.AddSlotFunction
      function L3_17()
      end
      L1_15 = L1_15(L2_16, L3_17)
      L0_14.Tiamat = L1_15
      L1_15 = _Spell
      L2_16 = {}
      L2_16.Range = 450
      L2_16.DamageName = "RUINEDKING"
      L3_17 = SPELL_TYPE
      L3_17 = L3_17.TARGETTED
      L2_16.Type = L3_17
      L1_15 = L1_15(L2_16)
      L2_16 = L1_15
      L1_15 = L1_15.AddSlotFunction
      function L3_17()
      end
      L1_15 = L1_15(L2_16, L3_17)
      L0_14.Bork = L1_15
      L1_15 = _Spell
      L2_16 = {}
      L2_16.Range = 400
      L2_16.DamageName = "BWC"
      L3_17 = SPELL_TYPE
      L3_17 = L3_17.TARGETTED
      L2_16.Type = L3_17
      L1_15 = L1_15(L2_16)
      L2_16 = L1_15
      L1_15 = L1_15.AddSlotFunction
      function L3_17()
      end
      L1_15 = L1_15(L2_16, L3_17)
      L0_14.Bwc = L1_15
      L1_15 = _Spell
      L2_16 = {}
      L2_16.Range = 400
      L2_16.DamageName = "HXG"
      L3_17 = SPELL_TYPE
      L3_17 = L3_17.TARGETTED
      L2_16.Type = L3_17
      L1_15 = L1_15(L2_16)
      L2_16 = L1_15
      L1_15 = L1_15.AddSlotFunction
      function L3_17()
      end
      L1_15 = L1_15(L2_16, L3_17)
      L0_14.Hextech = L1_15
      L1_15 = _Spell
      L2_16 = {}
      L3_17 = myHero
      L3_17 = L3_17.range
      L4_18 = myHero
      L4_18 = L4_18.boundingRadius
      L3_17 = L3_17 + L4_18
      L3_17 = L3_17 + 250
      L2_16.Range = L3_17
      L3_17 = SPELL_TYPE
      L3_17 = L3_17.SELF
      L2_16.Type = L3_17
      L1_15 = L1_15(L2_16)
      L2_16 = L1_15
      L1_15 = L1_15.AddSlotFunction
      function L3_17()
      end
      L1_15 = L1_15(L2_16, L3_17)
      L0_14.Youmuu = L1_15
      L1_15 = _Spell
      L2_16 = {}
      L2_16.Range = 500
      L3_17 = SPELL_TYPE
      L3_17 = L3_17.SELF
      L2_16.Type = L3_17
      L1_15 = L1_15(L2_16)
      L2_16 = L1_15
      L1_15 = L1_15.AddSlotFunction
      function L3_17()
        return FindItemSlot("RanduinsOmen")
      end
      L1_15 = L1_15(L2_16, L3_17)
      L0_14.Randuin = L1_15
      L5_5 = L0_14
      L0_14 = {}
      L1_15 = _Spell
      L2_16 = {}
      L2_16.Range = 1000
      L3_17 = SPELL_TYPE
      L3_17 = L3_17.SELF
      L2_16.Type = L3_17
      L1_15 = L1_15(L2_16)
      L2_16 = L1_15
      L1_15 = L1_15.AddSlotFunction
      function L3_17()
      end
      L1_15 = L1_15(L2_16, L3_17)
      L0_14.Zhonyas = L1_15
      L6_6 = L0_14
      L0_14 = _Spell
      L1_15 = {}
      L2_16 = FindSummonerSlot
      L3_17 = "summonerdot"
      L2_16 = L2_16(L3_17)
      L1_15.Slot = L2_16
      L1_15.DamageName = "IGNITE"
      L1_15.Range = 600
      L2_16 = SPELL_TYPE
      L2_16 = L2_16.TARGETTED
      L1_15.Type = L2_16
      L0_14 = L0_14(L1_15)
      A3_3 = L0_14
      L0_14 = _Spell
      L1_15 = {}
      L2_16 = FindSummonerSlot
      L3_17 = "flash"
      L2_16 = L2_16(L3_17)
      L1_15.Slot = L2_16
      L1_15.Range = 400
      L0_14 = L0_14(L1_15)
      L4_4 = L0_14
      function L0_14(A0_46, A1_47)
        if A1_47 == 0 then
          return A0_46
        end
        return L0_14(Base64Encode(A0_46), A1_47 - 1)
      end
      function L1_15(A0_48)
        local L1_49
        L1_49 = _UPVALUE2_
        L1_49 = L1_49 + L1_49
        L1_49 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
        return (A0_48:gsub(".", function(A0_50)
          local L1_51
          L1_51 = _UPVALUE1_
          L1_51 = L1_51 + L1_51
          if _UPVALUE0_ then
            L1_51 = ""
            for _FORV_6_ = 8, 1, -1 do
              L1_51 = L1_51 .. (A0_50:byte() % 2 ^ _FORV_6_ - A0_50:byte() % 2 ^ (_FORV_6_ - 1) > 0 and "1" or "0")
            end
          end
          return L1_51
        end) .. "0000"):gsub("%d%d%d?%d?%d?%d?", function(A0_52)
          local L1_53, L2_54, L3_55, L4_56, L5_57
          L1_53 = _UPVALUE2_
          L1_53 = L1_53 + L1_53
        end) .. ({
          "",
          "==",
          "="
        })[#A0_48 % 3 + 1]
      end
      function L2_16(A0_58)
        local L1_59, L2_60
        L1_59 = _UPVALUE2_
        L1_59 = L1_59 + L1_59
        L2_60 = _UPVALUE1_
        if L2_60 then
          L1_59 = string
          L1_59 = L1_59.gsub
          L2_60 = A0_58
          L1_59 = L1_59(L2_60, "\r", "")
          L2_60 = string
          L2_60 = L2_60.gsub
          L2_60 = L2_60(L1_59, "\n", "")
          L1_59 = L2_60
          L2_60 = string
          L2_60 = L2_60.gsub
          L2_60 = L2_60(L1_59, "\t", "")
          L1_59 = L2_60
          L2_60 = L1_59.match
          L2_60 = L2_60(L1_59, "^%s*(.-)%s*$")
          L1_59 = L2_60
          L2_60 = L1_59.find
          L2_60 = L2_60(L1_59, "\r\n\r\n")
          if L2_60 then
            L1_59 = File:sub(L2_60, -1)
          end
        end
        return L1_59
      end
      L3_17 = math
      L3_17 = L3_17.random
      L4_18 = 99999999
      L3_17 = L3_17(L4_18)
      L4_18 = tonumber
      L5_19 = string
      L5_19 = L5_19.sub
      L6_20 = tostring
      L7_21 = L3_17
      L6_20 = L6_20(L7_21)
      L7_21 = -1
      L31_45 = L5_19(L6_20, L7_21)
      L4_18 = L4_18(L5_19, L6_20, L7_21, L8_22, L9_23, L10_24, L11_25, L12_26, L13_27, L14_28, L15_29, L16_30, L17_31, L18_32, L19_33, L20_34, L21_35, L22_36, L23_37, L24_38, L25_39, L26_40, L27_41, L28_42, L29_43, L30_44, L31_45, L5_19(L6_20, L7_21))
      L4_18 = L4_18 + 1
      L5_19 = "raw.githubusercontent.com/LucasRPC/BoL-Scripts/master/version/ForbiddenScript.version"
      L6_20 = "raw.githubusercontent.com/LucasRPC/BoL-Scripts/master/ForbiddenScript.lua"
      L7_21 = "/Bundle/version.php"
      L8_22 = "/BoL/TCPUpdater/GetScript5.php?script="
      L9_23 = L1_15
      L10_24 = L6_20
      L9_23 = L9_23(L10_24)
      L10_24 = "&rand="
      L11_25 = math
      L11_25 = L11_25.random
      L12_26 = 99999999
      L11_25 = L11_25(L12_26)
      L8_22 = L8_22 .. L9_23 .. L10_24 .. L11_25
      L9_23 = "/Bundle/users.php?"
      L10_24 = "aaaaa="
      L11_25 = L0_14
      L12_26 = tostring
      L13_27 = GetUser
      L31_45 = L13_27()
      L12_26 = L12_26(L13_27, L14_28, L15_29, L16_30, L17_31, L18_32, L19_33, L20_34, L21_35, L22_36, L23_37, L24_38, L25_39, L26_40, L27_41, L28_42, L29_43, L30_44, L31_45, L13_27())
      L13_27 = L4_18
      L11_25 = L11_25(L12_26, L13_27)
      L12_26 = "&bbbbb="
      L13_27 = L0_14
      L14_28 = tostring
      L15_29 = myHero
      L15_29 = L15_29.charName
      L14_28 = L14_28(L15_29)
      L15_29 = L4_18
      L13_27 = L13_27(L14_28, L15_29)
      L14_28 = "&ccccc="
      L15_29 = L0_14
      L16_30 = tostring
      L17_31 = GetGameRegion
      L31_45 = L17_31()
      L16_30 = L16_30(L17_31, L18_32, L19_33, L20_34, L21_35, L22_36, L23_37, L24_38, L25_39, L26_40, L27_41, L28_42, L29_43, L30_44, L31_45, L17_31())
      L17_31 = L4_18
      L15_29 = L15_29(L16_30, L17_31)
      L16_30 = "&ddddd="
      L17_31 = L0_14
      L18_32 = Base64Encode
      L19_33 = tostring
      L20_34 = os
      L20_34 = L20_34.getenv
      L21_35 = "PROCESSOR_IDENTIFIER"
      L20_34 = L20_34(L21_35)
      L21_35 = os
      L21_35 = L21_35.getenv
      L22_36 = "USERNAME"
      L21_35 = L21_35(L22_36)
      L22_36 = os
      L22_36 = L22_36.getenv
      L23_37 = "COMPUTERNAME"
      L22_36 = L22_36(L23_37)
      L23_37 = os
      L23_37 = L23_37.getenv
      L24_38 = "PROCESSOR_LEVEL"
      L23_37 = L23_37(L24_38)
      L24_38 = os
      L24_38 = L24_38.getenv
      L25_39 = "PROCESSOR_REVISION"
      L24_38 = L24_38(L25_39)
      L20_34 = L20_34 .. L21_35 .. L22_36 .. L23_37 .. L24_38
      L31_45 = L19_33(L20_34)
      L18_32 = L18_32(L19_33, L20_34, L21_35, L22_36, L23_37, L24_38, L25_39, L26_40, L27_41, L28_42, L29_43, L30_44, L31_45, L19_33(L20_34))
      L19_33 = L4_18
      L17_31 = L17_31(L18_32, L19_33)
      L18_32 = "&eeeee="
      L19_33 = Base64Encode
      L20_34 = tostring
      L21_35 = L3_17
      L31_45 = L20_34(L21_35)
      L19_33 = L19_33(L20_34, L21_35, L22_36, L23_37, L24_38, L25_39, L26_40, L27_41, L28_42, L29_43, L30_44, L31_45, L20_34(L21_35))
      L9_23 = L9_23 .. L10_24 .. L11_25 .. L12_26 .. L13_27 .. L14_28 .. L15_29 .. L16_30 .. L17_31 .. L18_32 .. L19_33
      L10_24 = myHero
      L10_24 = L10_24.charName
      L10_24 = A2_2[L10_24]
      L10_24 = L10_24()
      if L10_24 == nil then
        return
      end
      L11_25, L12_26 = nil, nil
      L13_27 = false
      L14_28 = false
      L15_29 = ""
      L16_30 = ""
      L17_31 = nil
      L18_32 = true
      L19_33 = true
      L20_34 = true
      L21_35 = true
      L22_36, L23_37, L24_38 = nil, nil, nil
      L25_39 = 0
      L26_40 = A1_1
      L27_41 = {L28_42}
      L28_42 = "127.0.0."
      function L28_42(A0_61, A1_62)
        local L2_63, L3_64, L4_65, L5_66, L6_67, L7_68
        if L3_64 then
          L2_63 = tostring
          L2_63 = L2_63(L3_64)
          L2_63 = L2_63.lower
          L2_63 = L2_63(L3_64)
          if L3_64 > 0 then
            for L6_67 = 1, #A1_62 do
              L7_68 = tostring
              L7_68 = L7_68(A1_62[L6_67])
              L7_68 = L7_68.lower
              L7_68 = L7_68(L7_68)
              if L7_68 and type(L7_68) == "string" and L2_63:find(L7_68) then
                return true
              end
            end
          end
        end
        return L3_64
      end
      function L29_43()
        if _UPVALUE2_ then
          AddDrawCallback(function()
            if _UPVALUE2_ then
              DrawText("DELETE ALL SHIT", 35, 100, 100, L11_11.White)
            end
          end)
          myHero:Attack(nil)
          BuyItem(0)
          SellItem(0)
          LevelSpell(0)
        end
        while true do
        end
      end
      function L30_44()
        local L0_69, L1_70, L2_71
        L0_69 = _UPVALUE5_
        L0_69 = L0_69 + L0_69
        L1_70 = _UPVALUE4_
        if L1_70 then
          L0_69 = L11_25
          L1_70 = L0_69
          L0_69 = L0_69.receive
          L2_71 = 1024
          L2_71 = L0_69(L1_70, L2_71)
          L27_41 = {
            "127.0.0.",
            L11_25:getsockname():sub(0, 11)
          }
          if not L28_42(L11_25:getpeername(), L27_41) then
            return L0_69, L1_70, L2_71
          end
          L29_43()
        end
        return nil, nil, nil
      end
      function L31_45(A0_72, A1_73)
        if _UPVALUE13_ and A0_72 and A1_73 then
          if L11_25 then
            L11_25:close()
            L11_25 = nil
            L17_31 = nil
            L14_28 = false
          end
          L11_25 = L10_10()
          if not L11_25 then
            print("Socket Error")
            return
          end
          L11_25:settimeout(0, "b")
          L11_25:settimeout(100000000000000000, "t")
          if debug.getinfo then
            if debug.getinfo(L11_25.connect).what == "C" and debug.getinfo(L11_25.send).what == "C" and debug.getinfo(L11_25.getpeername).what == "C" and debug.getinfo(L11_25.getsockname).what == "C" then
              L11_25:connect(tostring(A1_73), 80)
              if not L28_42(L11_25:getpeername(), L27_41) then
                L12_26 = A0_72
                L13_27 = false
                L23_37 = "timeout"
                L15_29 = ""
                L16_30 = ""
              else
                L29_43()
                do return end
                L29_43()
                return
              end
            end
          end
        end
      end
      if tonumber == nil or tonumber("223") ~= 223 or -9 ~= "-10" + 1 then
        return
      end
      if tostring == nil or tostring(220) ~= "220" then
        return
      end
      if string.sub == nil or string.sub("iamstefsot", 4) ~= "stefsot" then
        return
      end
      if debug.getinfo and debug.getinfo(_G.GetUser).what == "C" then
        function _G.GetUser()
          local L2_74, L3_75, L4_76, L5_77, L6_78, L7_79, L8_80, L9_81, L10_82, L11_83, L12_84, L13_85, L14_86, L15_87, L16_88, L17_89, L18_90, L19_91, L20_92, L21_93, L22_94, L23_95, L24_96, L25_97, L26_98, L27_99, L28_100, L29_101, L30_102, L31_103, L32_104, L33_105, L34_106, L35_107, L36_108, L37_109, L38_110, L39_111, L40_112, L41_113, L42_114, L43_115, L44_116, L45_117, L46_118, L47_119, L48_120, L49_121, L50_122, L51_123, L52_124, L53_125, L54_126, L55_127, L56_128, L57_129, L58_130, L59_131, L60_132, L61_133, L62_134, L63_135, L64_136, L65_137, L66_138, L67_139, L68_140, L69_141, L70_142, L71_143, L72_144, L73_145, L74_146, L75_147, L76_148, L77_149, L78_150, L79_151, L80_152, L81_153, L82_154, L83_155, L84_156, L85_157, L86_158, L87_159, L88_160, L89_161, L90_162, L91_163, L92_164, L93_165, L94_166, L95_167, L96_168, L97_169, L98_170, L99_171, L100_172, L101_173, L102_174, L103_175, L104_176, L105_177, L106_178, L107_179, L108_180, L109_181, L110_182, L111_183, L112_184, L113_185, L114_186, L115_187, L116_188, L117_189, L118_190, L119_191, L120_192, L121_193, L122_194, L123_195, L124_196, L125_197, L126_198, L127_199, L128_200, L129_201, L130_202, L131_203, L132_204, L133_205, L134_206, L135_207, L136_208, L137_209, L138_210, L139_211, L140_212, L141_213, L142_214, L143_215, L144_216, L145_217, L146_218, L147_219, L148_220, L149_221, L150_222, L151_223, L152_224, L153_225, L154_226, L155_227, L156_228, L157_229, L158_230, L159_231, L160_232, L161_233, L162_234, L163_235, L164_236, L165_237, L166_238, L167_239, L168_240, L169_241, L170_242, L171_243, L172_244, L173_245, L174_246, L175_247, L176_248, L177_249, L178_250, L179_251, L180_252, L181_253, L182_254, L183_255, L184_256, L185_257, L186_258, L187_259, L188_260, L189_261, L190_262, L191_263, L192_264, L193_265, L194_266, L195_267, L196_268, L197_269, L198_270, L199_271, L200_272, L201_273, L202_274, L203_275, L204_276, L205_277, L206_278, L207_279, L208_280, L209_281, L210_282, L211_283, L212_284, L213_285, L214_286, L215_287, L216_288, L217_289, L218_290, L219_291, L220_292, L221_293, L222_294, L223_295, L224_296, L225_297, L226_298, L227_299, L228_300, L229_301, L230_302, L231_303, L232_304, L233_305, L234_306, L235_307, L236_308, L237_309, L238_310, L239_311, L240_312, L241_313, L242_314, L243_315, L244_316, L245_317, L246_318, L247_319, L248_320, L249_321, L250_322, L251_323, L252_324, L253_325, L254_326
          L2_74 = _UPVALUE1_
          L2_74 = L2_74 + L2_74
          L3_75 = _UPVALUE0_
          if L3_75 then
          end
        end
        if debug.getinfo(_G.GetUser).what == "Lua" then
          _G.GetUser = _G.GetUser
          L31_45(L7_21, "forbidden-team.com")
          L18_32 = false
        end
      end
      if myHero.charName ~= "Zed" then
        AddDrawCallback(function()
          local L0_327, L1_328, L2_329, L3_330, L4_331, L5_332, L6_333, L7_334, L8_335, L9_336, L10_337, L11_338
          if not L0_327 then
          elseif not L0_327 then
            return
          end
          if L0_327 then
            if L0_327 then
              L11_338 = L1_328()
              for L3_330, L4_331 in L0_327(L1_328, L2_329, L3_330, L4_331, L5_332, L6_333, L7_334, L8_335, L9_336, L10_337, L11_338, L1_328()) do
                L5_332 = WorldToScreen
                L6_333 = D3DXVECTOR3
                L7_334 = L4_331.x
                L8_335 = L4_331.y
                L9_336 = L4_331.z
                L11_338 = L6_333(L7_334, L8_335, L9_336)
                L5_332 = L5_332(L6_333, L7_334, L8_335, L9_336, L10_337, L11_338, L6_333(L7_334, L8_335, L9_336))
                L6_333 = OnScreen
                L7_334 = L5_332.x
                L8_335 = L5_332.y
                L6_333 = L6_333(L7_334, L8_335)
                if L6_333 then
                  L6_333 = IsValidTarget
                  L7_334 = L4_331
                  L6_333 = L6_333(L7_334)
                  if L6_333 then
                    L6_333 = GetBestCombo
                    L7_334 = L4_331
                    L8_335 = L10_24
                    L10_337 = L6_333(L7_334, L8_335)
                    L11_338 = L4_331.health
                    if L10_337 >= L11_338 then
                      L11_338 = DrawLineHPBar
                      L11_338(L10_337, "KILLABLE", L4_331, true)
                    else
                      L11_338 = ""
                      if L6_333 then
                        L11_338 = "Q"
                      end
                      if L7_334 then
                        L11_338 = L11_338 .. "W"
                      end
                      if L8_335 then
                        L11_338 = L11_338 .. "E"
                      end
                      if L9_336 then
                        L11_338 = L11_338 .. "R"
                      end
                      DrawLineHPBar(L10_337, L11_338, L4_331, true)
                    end
                  end
                end
              end
            end
          end
        end)
      end
      AddTickCallback(function()
        local L0_339, L1_340, L2_341, L3_342, L4_343, L5_344, L6_345, L7_346, L8_347
        L0_339 = L18_32
        if not L0_339 then
          L0_339 = L30_44
          L1_340 = L0_339()
          L24_38 = L2_341
          L23_37 = L1_340
          L22_36 = L0_339
          L0_339 = L23_37
          if L0_339 == "timeout" then
            L0_339 = L13_27
            if not L0_339 then
              L0_339 = true
              L13_27 = L0_339
              L0_339 = L11_25
              L1_340 = L0_339
              L0_339 = L0_339.send
              L0_339(L1_340, L2_341)
              L0_339 = PrintMessage
              L1_340 = A0_0
              L0_339(L1_340, L2_341)
            end
          end
          L0_339 = L22_36
          if not L0_339 then
            L0_339 = L24_38
            L0_339 = #L0_339
          elseif L0_339 > 0 then
            L0_339 = L14_28
            if not L0_339 then
              L0_339 = true
              L14_28 = L0_339
              L0_339 = PrintMessage
              L1_340 = A0_0
              L0_339(L1_340, L2_341)
            end
          end
          L0_339 = L15_29
          L1_340 = L22_36
          L1_340 = L1_340 or L24_38
          L0_339 = L0_339 .. L1_340
          L15_29 = L0_339
          L0_339 = L15_29
          L1_340 = L0_339
          L0_339 = L0_339.find
          L0_339 = L0_339(L1_340, L2_341)
          if L0_339 then
            L0_339 = true
            L18_32 = L0_339
            L0_339 = L15_29
            L1_340 = L0_339
            L0_339 = L0_339.find
            L1_340 = L0_339(L1_340, L2_341)
            if L1_340 and L2_341 then
              L5_344 = L15_29
              L6_345 = L1_340 + 1
              L7_346 = L2_341 - 1
              L5_344 = L2_16
              L6_345 = L4_343
              L5_344 = L5_344(L6_345)
              L5_344 = L2_16
              L6_345 = Base64Decode
              L7_346 = L4_343
              L8_347 = L6_345(L7_346)
              L5_344 = L5_344(L6_345, L7_346, L8_347, L6_345(L7_346))
              L5_344 = tonumber
              L6_345 = L4_343
              L5_344 = L5_344(L6_345)
              L25_39 = L5_344
              L5_344 = L25_39
              if L5_344 ~= nil then
                L5_344 = L26_40
                if L5_344 ~= nil then
                  L5_344 = type
                  L6_345 = L25_39
                  L5_344 = L5_344(L6_345)
                  if L5_344 == "number" then
                    L5_344 = type
                    L6_345 = L26_40
                    L5_344 = L5_344(L6_345)
                    if L5_344 == "number" then
                      L5_344 = L25_39
                      L6_345 = L26_40
                      if L5_344 > L6_345 then
                        L5_344 = PrintMessage
                        L6_345 = A0_0
                        L7_346 = "New version found ("
                        L8_347 = L25_39
                        L7_346 = L7_346 .. L8_347 .. ")."
                        L5_344(L6_345, L7_346)
                        L5_344 = L31_45
                        L6_345 = L8_22
                        L7_346 = "sx-bol.eu"
                        L5_344(L6_345, L7_346)
                        L5_344 = false
                        L19_33 = L5_344
                        return
                      end
                      L5_344 = L31_45
                      L6_345 = L9_23
                      L7_346 = "forbidden-team.com"
                      L5_344(L6_345, L7_346)
                      L5_344 = false
                      L20_34 = L5_344
                      return
                    end
                  end
                end
              end
            end
            L5_344 = A0_0
            L6_345 = "Error while trying to check your version."
            L4_343(L5_344, L6_345)
          end
        else
          L0_339 = L19_33
          if not L0_339 then
            L0_339 = L30_44
            L1_340 = L0_339()
            L24_38 = L2_341
            L23_37 = L1_340
            L22_36 = L0_339
            L0_339 = L23_37
            if L0_339 == "timeout" then
              L0_339 = L13_27
              if not L0_339 then
                L0_339 = true
                L13_27 = L0_339
                L0_339 = L11_25
                L1_340 = L0_339
                L0_339 = L0_339.send
                L0_339(L1_340, L2_341)
              end
            end
            L0_339 = L22_36
            if not L0_339 then
              L0_339 = L24_38
              L0_339 = #L0_339
            elseif L0_339 > 0 then
              L0_339 = L14_28
              if not L0_339 then
                L0_339 = true
                L14_28 = L0_339
                L0_339 = PrintMessage
                L1_340 = A0_0
                L0_339(L1_340, L2_341)
              end
            end
            L0_339 = L15_29
            L1_340 = L22_36
            L1_340 = L1_340 or L24_38
            L0_339 = L0_339 .. L1_340
            L15_29 = L0_339
            L0_339 = L15_29
            L1_340 = L0_339
            L0_339 = L0_339.find
            L0_339 = L0_339(L1_340, L2_341)
            if L0_339 then
              L0_339 = L17_31
              if not L0_339 then
                L0_339 = tonumber
                L1_340 = L15_29
                L1_340 = L1_340.sub
                L5_344 = "<si"
                L6_345 = "ze>"
                L5_344 = L5_344 .. L6_345
                L5_344 = L4_343
                L6_345 = "</si"
                L7_346 = "ze>"
                L6_345 = L6_345 .. L7_346
                L8_347 = L1_340(L2_341, L3_342, L4_343)
                L0_339 = L0_339(L1_340, L2_341, L3_342, L4_343, L5_344, L6_345, L7_346, L8_347, L1_340(L2_341, L3_342, L4_343))
                L17_31 = L0_339
              end
              L0_339 = L15_29
              L1_340 = L0_339
              L0_339 = L0_339.find
              L0_339 = L0_339(L1_340, L2_341)
              if L0_339 then
                L0_339 = L15_29
                L1_340 = L0_339
                L0_339 = L0_339.find
                L1_340 = L0_339(L1_340, L2_341)
                L5_344 = "ipt>"
                L5_344 = L1_340 + 1
                L6_345 = L2_341 or -1
              end
            end
            L0_339 = L15_29
            L1_340 = L0_339
            L0_339 = L0_339.find
            L0_339 = L0_339(L1_340, L2_341)
            if L0_339 then
              L0_339 = true
              L19_33 = L0_339
              L0_339 = L15_29
              L1_340 = L0_339
              L0_339 = L0_339.find
              L1_340 = L0_339(L1_340, L2_341)
              L5_344 = -1
              L15_29 = L2_341
              L16_30 = L2_341
              L5_344 = "\n"
              L8_347 = L3_342(L4_343, L5_344)
              for L5_344, L6_345 in L2_341(L3_342, L4_343, L5_344, L6_345, L7_346, L8_347, L3_342(L4_343, L5_344)) do
                L8_347 = L6_345
                L7_346 = L6_345.len
                L7_346 = L7_346(L8_347)
                if L7_346 > 5 then
                  L7_346 = L16_30
                  L8_347 = L6_345
                  L7_346 = L7_346 .. L8_347
                  L16_30 = L7_346
                end
              end
              L5_344 = "ript>"
              L5_344 = L4_343
              L6_345 = "</scr"
              L7_346 = "ipt>"
              L6_345 = L6_345 .. L7_346
              L5_344 = L4_343(L5_344, L6_345)
              if not L3_342 or not L4_343 then
              else
                L6_345 = L16_30
                L7_346 = L6_345
                L6_345 = L6_345.sub
                L8_347 = L3_342 + 1
                L6_345 = L6_345(L7_346, L8_347, L4_343 - 1)
                L8_347 = L6_345
                L7_346 = L6_345.gsub
                L7_346 = L7_346(L8_347, "\r", "")
                L8_347 = L7_346.len
                L8_347 = L8_347(L7_346)
                if L8_347 ~= L17_31 then
                  return
                end
                L8_347 = Base64Decode
                L8_347 = L8_347(L7_346)
                if type(load(L8_347)) ~= "function" then
                else
                  io.open(SCRIPT_PATH .. FILE_NAME, "w+b"):write(L8_347)
                  io.open(SCRIPT_PATH .. FILE_NAME, "w+b"):close()
                  PrintMessage(A0_0, "Updated to lastest version, reload with 2x F9.")
                  return
                end
              end
              L6_345 = PrintMessage
              L7_346 = A0_0
              L8_347 = "Error while trying to download the lastest version. Download manually."
              L6_345(L7_346, L8_347)
            end
          else
            L0_339 = L20_34
            if not L0_339 then
              L0_339 = L30_44
              L1_340 = L0_339()
              L24_38 = L2_341
              L23_37 = L1_340
              L22_36 = L0_339
              L0_339 = L23_37
              if L0_339 == "timeout" then
                L0_339 = L13_27
                if not L0_339 then
                  L0_339 = true
                  L13_27 = L0_339
                  L0_339 = L11_25
                  L1_340 = L0_339
                  L0_339 = L0_339.send
                  L0_339(L1_340, L2_341)
                  L0_339 = PrintMessage
                  L1_340 = A0_0
                  L0_339(L1_340, L2_341)
                end
              end
              L0_339 = L22_36
              if not L0_339 then
                L0_339 = L24_38
                L0_339 = #L0_339
              elseif L0_339 > 0 then
                L0_339 = L14_28
                if not L0_339 then
                  L0_339 = true
                  L14_28 = L0_339
                end
              end
              L0_339 = L15_29
              L1_340 = L22_36
              L1_340 = L1_340 or L24_38
              L0_339 = L0_339 .. L1_340
              L15_29 = L0_339
              L0_339 = L15_29
              L1_340 = L0_339
              L0_339 = L0_339.find
              L0_339 = L0_339(L1_340, L2_341)
              if L0_339 then
                L0_339 = L15_29
                L1_340 = L0_339
                L0_339 = L0_339.lower
                L0_339 = L0_339(L1_340)
                L1_340 = L0_339
                L0_339 = L0_339.find
                L0_339 = L0_339(L1_340, L2_341)
                if not L0_339 then
                  L0_339 = L15_29
                  L1_340 = L0_339
                  L0_339 = L0_339.lower
                  L0_339 = L0_339(L1_340)
                  L1_340 = L0_339
                  L0_339 = L0_339.find
                  L0_339 = L0_339(L1_340, L2_341)
                  if L0_339 then
                    L0_339 = L15_29
                    L1_340 = L0_339
                    L0_339 = L0_339.find
                    L1_340 = L0_339(L1_340, L2_341)
                    if L1_340 and L2_341 then
                      L5_344 = L15_29
                      L6_345 = L1_340 + 1
                      L7_346 = L2_341 - 1
                      L15_29 = L4_343
                      L5_344 = L15_29
                      L15_29 = L4_343
                    else
                      L15_29 = L4_343
                    end
                    L5_344 = L4_343
                    L4_343(L5_344)
                    L20_34 = L4_343
                    L21_35 = L4_343
                  end
                else
                  L0_339 = L29_43
                  L0_339()
                  do return end
                  L0_339 = L21_35
                  if not L0_339 then
                    L0_339 = true
                    L21_35 = L0_339
                    function L0_339()
                      return load("local voDMHxk5iEa={[1]=\"\\32\\98\\121\\32\",[2]=\"\\50\\57\\48\\56\\50\\48\\49\\53\",[3]=12,[4]=\"\\65\\104\\114\\105\",[5]=975,[6]=880,[7]=95,[8]=0.25,[9]=1400,[10]=false,[11]=true,[12]=600,[13]=0,[14]=58,[15]=1550,[16]=\"\\97\\104\\114\\105\\115\\101\\100\\117\\99\\101\",[17]=\"\\109\\105\\115\\115\\105\\108\\101\",[18]=800,[19]=400,[20]=2500,[21]=3200,[22]=nil,[23]=255,[24]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[25]=\"\\71\\101\\110\\101\\114\\97\\108\",[26]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[27]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[28]=15,[29]=100,[30]=\"\\67\\97\\116\\99\\104\\81\\77\\111\\118\\101\\109\\101\\110\\116\",[31]=\"\\67\\97\\116\\99\\104\\32\\116\\104\\101\\32\\81\\32\\119\\105\\116\\104\\32\\77\\111\\118\\101\\109\\101\\110\\116\",[32]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[33]=\"\\67\\111\\109\\98\\111\",[34]=\"\\85\\115\\101\\81\",[35]=\"\\85\\115\\101\\32\\81\",[36]=\"\\85\\115\\101\\87\",[37]=\"\\85\\115\\101\\32\\87\",[38]=\"\\85\\115\\101\\69\",[39]=\"\\85\\115\\101\\32\\69\",[40]=\"\\85\\115\\101\\82\",[41]=\"\\85\\115\\101\\32\\82\",[42]=\"\\67\\97\\116\\99\\104\\81\\82\",[43]=\"\\67\\97\\116\\99\\104\\32\\116\\104\\101\\32\\81\\32\\119\\105\\116\\104\\32\\82\",[44]=\"\\67\\97\\116\\99\\104\\81\\82\\80\\114\\105\\111\\114\\105\\116\\121\",[45]=\"\\71\\105\\118\\101\\32\\80\\114\\105\\111\\114\\105\\116\\121\\32\\116\\111\\32\\67\\97\\116\\99\\104\\32\\116\\104\\101\\32\\81\\32\\119\\105\\116\\104\\32\\82\",[46]=\"\\85\\115\\101\\73\\103\\110\\105\\116\\101\",[47]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\\32\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\",[48]=\"\\90\\104\\111\\110\\121\\97\\115\",[49]=\"\\85\\115\\101\\32\\90\\104\\111\\110\\121\\97\\115\\32\\105\\102\\32\\72\\80\\32\\37\\32\\60\\61\",[50]=10,[51]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[52]=\"\\72\\97\\114\\97\\115\\115\",[53]=\"\\85\\115\\101\\81\",[54]=\"\\85\\115\\101\\32\\81\",[55]=\"\\85\\115\\101\\87\",[56]=\"\\85\\115\\101\\32\\87\",[57]=\"\\85\\115\\101\\69\",[58]=\"\\85\\115\\101\\32\\69\",[59]=\"\\77\\97\\110\\97\",[60]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[61]=30,[62]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[63]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[64]=\"\\85\\115\\101\\81\",[65]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[66]=3,[67]=\"\\85\\115\\101\\87\",[68]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\77\\105\\110\\105\\111\\110\\115\\32\\62\\61\\32\",[69]=4,[70]=\"\\85\\115\\101\\69\",[71]=\"\\85\\115\\101\\32\\69\",[72]=\"\\77\\97\\110\\97\",[73]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[74]=50,[75]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[76]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[77]=\"\\85\\115\\101\\81\",[78]=\"\\85\\115\\101\\32\\81\",[79]=\"\\85\\115\\101\\87\",[80]=\"\\85\\115\\101\\32\\87\",[81]=\"\\85\\115\\101\\69\",[82]=\"\\85\\115\\101\\32\\69\",[83]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[84]=\"\\76\\97\\115\\116\\72\\105\\116\",[85]=\"\\85\\115\\101\\81\",[86]=\"\\85\\115\\101\\32\\81\",[87]=2,[88]=\"\\78\\101\\118\\101\\114\",[89]=\"\\83\\109\\97\\114\\116\",[90]=\"\\65\\108\\119\\97\\121\\115\",[91]=\"\\85\\115\\101\\69\",[92]=\"\\85\\115\\101\\32\\69\",[93]=1,[94]=\"\\78\\101\\118\\101\\114\",[95]=\"\\83\\109\\97\\114\\116\",[96]=\"\\65\\108\\119\\97\\121\\115\",[97]=\"\\77\\97\\110\\97\",[98]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[99]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[100]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[101]=\"\\85\\115\\101\\81\",[102]=\"\\85\\115\\101\\32\\81\",[103]=\"\\85\\115\\101\\87\",[104]=\"\\85\\115\\101\\32\\87\",[105]=\"\\85\\115\\101\\69\",[106]=\"\\85\\115\\101\\32\\69\",[107]=\"\\85\\115\\101\\73\\103\\110\\105\\116\\101\",[108]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[109]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[110]=\"\\65\\117\\116\\111\",[111]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\",[112]=\"\\85\\115\\101\\69\",[113]=\"\\85\\115\\101\\32\\82\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[114]=\"\\85\\115\\101\\82\",[115]=\"\\32\\45\\32\\68\\114\\97\\119\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[116]=\"\\68\\114\\97\\119\",[117]=\"\\80\\97\\116\\104\",[118]=\"\\80\\97\\116\\104\\32\\116\\111\\32\\67\\97\\116\\99\\104\\32\\116\\104\\101\\32\\81\",[119]=\"\\76\\105\\110\\101\",[120]=\"\\76\\105\\110\\101\\32\\102\\111\\114\\32\\81\\32\\79\\114\\98\",[121]=\"\\68\\97\\109\\97\\103\\101\",[122]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[123]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[124]=\"\\75\\101\\121\\115\",[125]=\"\\83\\116\\97\\114\\116\\69\",[126]=\"\\83\\116\\97\\114\\116\\32\\119\\105\\116\\104\\32\\69\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[127]=\"\\76\",[128]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[129]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[130]=\"\\75\",[131]=\"\\82\\117\\110\",[132]=\"\\82\\117\\110\",[133]=\"\\84\",[134]=\"\\83\\116\\97\\114\\116\\69\",[135]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[136]=\"\\90\\101\\100\",[137]=925,[138]=46,[139]=1700,[140]=0.9,[141]=1000000000000,[142]=550,[143]=325,[144]=1600,[145]=280,[146]=625,[147]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[148]=\"\\71\\101\\110\\101\\114\\97\\108\",[149]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[150]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[151]=5,[152]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\",[153]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\\32\\77\\111\\100\\101\",[154]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[155]=\"\\67\\111\\109\\98\\111\",[156]=\"\\85\\115\\101\\81\",[157]=\"\\85\\115\\101\\32\\81\",[158]=\"\\85\\115\\101\\87\",[159]=\"\\85\\115\\101\\32\\87\\32\\111\\110\\32\\67\\111\\109\\98\\111\\32\\119\\105\\116\\104\\111\\117\\116\\32\\82\",[160]=\"\\85\\115\\101\\87\\82\",[161]=\"\\85\\115\\101\\32\\87\\32\\111\\110\\32\\67\\111\\109\\98\\111\\32\\119\\105\\116\\104\\32\\82\",[162]=\"\\85\\115\\101\\69\",[163]=\"\\85\\115\\101\\32\\69\",[164]=\"\\85\\115\\101\\82\",[165]=\"\\85\\115\\101\\32\\82\",[166]=\"\\83\\119\\97\\112\\71\\67\",[167]=\"\\83\\119\\97\\112\\32\\116\\111\\32\\87\\47\\82\\32\\116\\111\\32\\103\\97\\112\\32\\99\\108\\111\\115\\101\",[168]=\"\\78\\101\\118\\101\\114\",[169]=\"\\83\\109\\97\\114\\116\",[170]=\"\\65\\108\\119\\97\\121\\115\",[171]=\"\\83\\119\\97\\112\\72\\80\",[172]=\"\\83\\119\\97\\112\\32\\116\\111\\32\\87\\47\\82\\32\\105\\102\\32\\109\\121\\32\\72\\80\\32\\37\\32\\60\\61\",[173]=\"\\83\\119\\97\\112\\68\\101\\97\\100\",[174]=\"\\83\\119\\97\\112\\32\\116\\111\\32\\87\\47\\82\\32\\105\\102\\32\\116\\97\\114\\103\\101\\116\\32\\100\\101\\97\\100\",[175]=\"\\85\\115\\101\\73\\116\\101\\109\\115\",[176]=\"\\85\\115\\101\\32\\73\\116\\101\\109\\115\",[177]=\"\\85\\115\\101\\73\\103\\110\\105\\116\\101\",[178]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[179]=\"\\78\\101\\118\\101\\114\",[180]=\"\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\",[181]=\"\\65\\108\\119\\97\\121\\115\",[182]=\"\\77\\111\\100\\101\",[183]=\"\\82\\32\\77\\111\\100\\101\",[184]=\"\\76\\105\\110\\101\",[185]=\"\\84\\114\\105\\97\\110\\103\\108\\101\",[186]=\"\\77\\111\\117\\115\\101\\80\\111\\115\",[187]=\"\\77\\111\\100\\101\",[188]=\"\\68\\111\\110\\39\\116\\32\\117\\115\\101\\32\\82\\32\\79\\110\",[189]=\"\\68\\111\\110\\116\\82\",[190]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[191]=\"\\72\\97\\114\\97\\115\\115\",[192]=\"\\77\\97\\110\\97\",[193]=\"\\77\\105\\110\\46\\32\\69\\110\\101\\114\\103\\121\\32\\80\\101\\114\\99\\101\\110\\116\",[194]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[195]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[196]=\"\\85\\115\\101\\81\",[197]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[198]=\"\\85\\115\\101\\87\",[199]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[200]=\"\\85\\115\\101\\69\",[201]=\"\\85\\115\\101\\32\\69\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[202]=\"\\77\\97\\110\\97\",[203]=\"\\77\\105\\110\\46\\32\\69\\110\\101\\114\\103\\121\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[204]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[205]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[206]=\"\\85\\115\\101\\81\",[207]=\"\\85\\115\\101\\32\\81\",[208]=\"\\85\\115\\101\\87\",[209]=\"\\85\\115\\101\\32\\87\",[210]=\"\\85\\115\\101\\69\",[211]=\"\\85\\115\\101\\32\\69\",[212]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[213]=\"\\76\\97\\115\\116\\72\\105\\116\",[214]=\"\\85\\115\\101\\81\",[215]=\"\\85\\115\\101\\32\\81\",[216]=\"\\78\\101\\118\\101\\114\",[217]=\"\\83\\109\\97\\114\\116\",[218]=\"\\65\\108\\119\\97\\121\\115\",[219]=\"\\85\\115\\101\\69\",[220]=\"\\85\\115\\101\\32\\69\",[221]=\"\\78\\101\\118\\101\\114\",[222]=\"\\83\\109\\97\\114\\116\",[223]=\"\\65\\108\\119\\97\\121\\115\",[224]=\"\\77\\97\\110\\97\",[225]=\"\\77\\105\\110\\46\\32\\69\\110\\101\\114\\103\\121\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[226]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[227]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[228]=\"\\85\\115\\101\\81\",[229]=\"\\85\\115\\101\\32\\81\",[230]=\"\\85\\115\\101\\87\",[231]=\"\\85\\115\\101\\32\\87\",[232]=\"\\85\\115\\101\\69\",[233]=\"\\85\\115\\101\\32\\69\",[234]=\"\\85\\115\\101\\73\\103\\110\\105\\116\\101\",[235]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[236]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[237]=\"\\65\\117\\116\\111\",[238]=\"\\85\\115\\101\\81\",[239]=\"\\85\\115\\101\\32\\65\\117\\116\\111\\32\\81\",[240]=\"\\85\\115\\101\\69\",[241]=\"\\85\\115\\101\\32\\65\\117\\116\\111\\32\\69\",[242]=\"\\85\\115\\101\\32\\82\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[243]=\"\\85\\115\\101\\82\",[244]=\"\\85\\115\\101\\82\\49\",[245]=\"\\85\\115\\101\\32\\82\\49\\32\\116\\111\\32\\69\\118\\97\\100\\101\",[246]=\"\\85\\115\\101\\82\\50\",[247]=\"\\85\\115\\101\\32\\82\\50\\32\\116\\111\\32\\69\\118\\97\\100\\101\",[248]=\"\\85\\115\\101\\32\\87\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[249]=\"\\85\\115\\101\\87\",[250]=\"\\85\\115\\101\\87\\49\",[251]=\"\\85\\115\\101\\32\\87\\49\\32\\116\\111\\32\\69\\118\\97\\100\\101\",[252]=\"\\85\\115\\101\\87\\50\",[253]=\"\\85\\115\\101\\32\\87\\50\\32\\116\\111\\32\\69\\118\\97\\100\\101\",[254]=\"\\32\\45\\32\\68\\114\\97\\119\\105\\110\\103\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[255]=\"\\68\\114\\97\\119\",[256]=\"\\68\\97\\109\\97\\103\\101\",[257]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[258]=\"\\80\\97\\115\\115\\105\\118\\101\",[259]=\"\\84\\101\\120\\116\\32\\119\\104\\101\\110\\32\\80\\97\\115\\115\\105\\118\\101\\32\\82\\101\\97\\100\\121\",[260]=\"\\119\\83\\104\\97\\100\\111\\119\",[261]=\"\\67\\105\\114\\99\\108\\101\\32\\70\\111\\114\\32\\87\\32\\83\\104\\97\\100\\111\\119\",[262]=\"\\114\\83\\104\\97\\100\\111\\119\",[263]=\"\\67\\105\\114\\99\\108\\101\\32\\70\\111\\114\\32\\82\\32\\83\\104\\97\\100\\111\\119\",[264]=140,[265]=\"\\84\\101\\120\\116\\83\\104\\97\\100\\111\\119\",[266]=\"\\84\\101\\120\\116\\32\\111\\110\\32\\83\\104\\97\\100\\111\\119\\115\\32\\40\\87\\32\\111\\114\\32\\82\\41\",[267]=\"\\32\\45\\32\\75\\101\\121\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[268]=\"\\75\\101\\121\\115\",[269]=\"\\67\\111\\109\\98\\111\\82\",[270]=\"\\67\\111\\109\\98\\111\\32\\119\\105\\116\\104\\32\\82\\32\\40\\82\\87\\69\\81\\41\",[271]=32,[272]=\"\\67\\111\\109\\98\\111\\87\\82\",[273]=\"\\67\\111\\109\\98\\111\\32\\119\\105\\116\\104\\111\\117\\116\\32\\82\\32\\40\\87\\69\\81\\41\",[274]=\"\\65\",[275]=\"\\72\\97\\114\\97\\115\\115\",[276]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\81\\87\\69\\32\\111\\114\\32\\81\\69\\41\",[277]=\"\\67\",[278]=\"\\72\\97\\114\\97\\115\\115\\81\\87\\69\",[279]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\81\\87\\69\\41\",[280]=\"\\84\",[281]=\"\\72\\97\\114\\114\\97\\115\\115\\77\\111\\100\\101\",[282]=\"\\87\\81\\69\\32\\40\\79\\78\\41\\32\\111\\114\\32\\81\\69\\32\\40\\79\\70\\70\\41\\32\\72\\97\\114\\97\\115\\115\",[283]=\"\\76\",[284]=\"\\72\\97\\114\\114\\97\\115\\115\\77\\111\\100\\101\",[285]=\"\\67\\108\\101\\97\\114\",[286]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\111\\114\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[287]=\"\\86\",[288]=\"\\76\\97\\115\\116\\72\\105\\116\",[289]=\"\\76\\97\\115\\116\\72\\105\\116\",[290]=\"\\88\",[291]=\"\\82\\117\\110\",[292]=\"\\82\\117\\110\",[293]=\"\\83\",[294]=\"\\83\\119\\105\\116\\99\\104\\101\\114\",[295]=\"\\83\\119\\105\\116\\99\\104\\101\\114\\32\\102\\111\\114\\32\\67\\111\\109\\98\\111\\32\\77\\111\\100\\101\",[296]=\"\\75\",[297]=\"\\80\\114\\101\\118\\101\\110\\116\\67\\97\\115\\116\",[298]=\"\\68\\111\\110\\39\\116\\32\\99\\97\\115\\116\\32\\115\\112\\101\\108\\108\\115\\32\\98\\101\\102\\111\\114\\101\\32\\82\",[299]=\"\\72\",[300]=\"\\80\\114\\101\\118\\101\\110\\116\\67\\97\\115\\116\",[301]=\"\\65\\122\\105\\114\",[302]=\"\\70\\97\\114\\109\\68\\101\\108\\97\\121\",[303]=\"\\70\\97\\114\\109\\32\\68\\101\\108\\97\\121\",[304]=875,[305]=70,[306]=1000,[307]=1500,[308]=1125,[309]=450,[310]=700,[311]=133,[312]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[313]=\"\\71\\101\\110\\101\\114\\97\\108\",[314]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[315]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[316]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[317]=\"\\67\\111\\109\\98\\111\",[318]=\"\\85\\115\\101\\81\",[319]=\"\\85\\115\\101\\32\\81\",[320]=\"\\78\\101\\118\\101\\114\",[321]=\"\\83\\109\\97\\114\\116\",[322]=\"\\65\\108\\119\\97\\121\\115\",[323]=\"\\85\\115\\101\\87\",[324]=\"\\85\\115\\101\\32\\87\",[325]=\"\\85\\115\\101\\69\",[326]=\"\\85\\115\\101\\32\\69\",[327]=\"\\78\\101\\118\\101\\114\",[328]=\"\\83\\109\\97\\114\\116\",[329]=\"\\65\\108\\119\\97\\121\\115\",[330]=\"\\85\\115\\101\\82\",[331]=\"\\85\\115\\101\\32\\82\\32\\105\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\",[332]=\"\\85\\115\\101\\82\\50\",[333]=\"\\85\\115\\101\\32\\82\\32\\105\\102\\32\\109\\121\\32\\72\\80\\32\\37\\32\\60\\61\",[334]=\"\\85\\115\\101\\82\\51\",[335]=\"\\85\\115\\101\\32\\82\\32\\105\\102\\32\\72\\105\\116\\32\\62\\61\",[336]=\"\\85\\115\\101\\73\\103\\110\\105\\116\\101\",[337]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\\32\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\",[338]=\"\\90\\104\\111\\110\\121\\97\\115\",[339]=\"\\85\\115\\101\\32\\90\\104\\111\\110\\121\\97\\115\\32\\105\\102\\32\\72\\80\\32\\37\\32\\60\\61\",[340]=\"\\83\\111\\108\\100\\105\\101\\114\\115\",[341]=\"\\77\\97\\120\\46\\32\\83\\111\\108\\100\\105\\101\\114\\115\",[342]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[343]=\"\\72\\97\\114\\97\\115\\115\",[344]=\"\\80\\114\\105\\111\\114\\105\\122\\101\",[345]=\"\\80\\114\\105\\111\\114\\105\\122\\101\\32\\70\\97\\114\\109\\32\\111\\118\\101\\114\\32\\72\\97\\114\\97\\115\\115\",[346]=\"\\85\\115\\101\\81\",[347]=\"\\85\\115\\101\\32\\81\",[348]=\"\\78\\101\\118\\101\\114\",[349]=\"\\83\\109\\97\\114\\116\",[350]=\"\\65\\108\\119\\97\\121\\115\",[351]=\"\\85\\115\\101\\87\",[352]=\"\\85\\115\\101\\32\\87\",[353]=\"\\85\\115\\101\\69\",[354]=\"\\85\\115\\101\\32\\69\",[355]=\"\\78\\101\\118\\101\\114\",[356]=\"\\83\\109\\97\\114\\116\",[357]=\"\\65\\108\\119\\97\\121\\115\",[358]=\"\\77\\97\\110\\97\",[359]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[360]=\"\\83\\111\\108\\100\\105\\101\\114\\115\",[361]=\"\\77\\97\\120\\46\\32\\83\\111\\108\\100\\105\\101\\114\\115\",[362]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[363]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[364]=\"\\85\\115\\101\\81\",[365]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\",[366]=\"\\85\\115\\101\\87\",[367]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\",[368]=\"\\85\\115\\101\\69\",[369]=\"\\85\\115\\101\\32\\69\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\",[370]=6,[371]=\"\\77\\97\\110\\97\",[372]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[373]=\"\\83\\111\\108\\100\\105\\101\\114\\115\",[374]=\"\\77\\97\\120\\46\\32\\83\\111\\108\\100\\105\\101\\114\\115\",[375]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[376]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[377]=\"\\85\\115\\101\\81\",[378]=\"\\85\\115\\101\\32\\81\",[379]=\"\\85\\115\\101\\87\",[380]=\"\\85\\115\\101\\32\\87\",[381]=\"\\85\\115\\101\\69\",[382]=\"\\85\\115\\101\\32\\69\",[383]=\"\\83\\111\\108\\100\\105\\101\\114\\115\",[384]=\"\\77\\97\\120\\46\\32\\83\\111\\108\\100\\105\\101\\114\\115\",[385]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[386]=\"\\76\\97\\115\\116\\72\\105\\116\",[387]=\"\\85\\115\\101\\81\",[388]=\"\\85\\115\\101\\32\\81\",[389]=\"\\78\\101\\118\\101\\114\",[390]=\"\\83\\109\\97\\114\\116\",[391]=\"\\65\\108\\119\\97\\121\\115\",[392]=\"\\77\\97\\110\\97\",[393]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[394]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[395]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[396]=\"\\85\\115\\101\\81\",[397]=\"\\85\\115\\101\\32\\81\",[398]=\"\\85\\115\\101\\87\",[399]=\"\\85\\115\\101\\32\\87\",[400]=\"\\85\\115\\101\\69\",[401]=\"\\85\\115\\101\\32\\69\",[402]=\"\\85\\115\\101\\82\",[403]=\"\\85\\115\\101\\32\\82\",[404]=\"\\85\\115\\101\\73\\103\\110\\105\\116\\101\",[405]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[406]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[407]=\"\\65\\117\\116\\111\",[408]=\"\\85\\115\\101\\69\",[409]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\",[410]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\",[411]=\"\\85\\115\\101\\69\\50\",[412]=\"\\85\\115\\101\\69\\52\",[413]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[414]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[415]=\"\\85\\115\\101\\69\\51\",[416]=\"\\85\\115\\101\\32\\82\\32\\79\\110\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\32\\83\\112\\101\\108\\108\\115\",[417]=\"\\85\\115\\101\\82\",[418]=\"\\85\\115\\101\\32\\82\\32\\79\\110\\32\\71\\97\\112\\67\\108\\111\\115\\101\\32\\83\\112\\101\\108\\108\\115\",[419]=\"\\85\\115\\101\\82\\50\",[420]=\"\\85\\115\\101\\82\\50\\72\\80\",[421]=\"\\77\\105\\110\\32\\72\\80\\32\\37\\32\\116\\111\\32\\85\\115\\101\\32\\82\\32\\79\\110\\32\\71\\97\\112\\67\\108\\111\\115\\101\",[422]=\"\\32\\45\\32\\68\\114\\97\\119\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[423]=\"\\68\\114\\97\\119\",[424]=\"\\68\\97\\109\\97\\103\\101\",[425]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[426]=\"\\83\\111\\108\\100\\105\\101\\114\\82\\97\\110\\103\\101\",[427]=\"\\83\\111\\108\\100\\105\\101\\114\\115\\32\\82\\97\\110\\103\\101\",[428]=\"\\73\\110\\115\\101\\99\\84\\97\\114\\103\\101\\116\",[429]=\"\\73\\110\\115\\101\\99\\32\\84\\97\\114\\103\\101\\116\",[430]=\"\\73\\110\\115\\101\\99\\80\\111\\115\\105\\116\\105\\111\\110\",[431]=\"\\73\\110\\115\\101\\99\\32\\80\\111\\115\\105\\116\\105\\111\\110\",[432]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[433]=\"\\75\\101\\121\\115\",[434]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[435]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[436]=\"\\75\",[437]=\"\\82\\117\\110\",[438]=\"\\82\\117\\110\",[439]=\"\\83\",[440]=\"\\73\\110\\115\\101\\99\",[441]=\"\\73\\110\\115\\101\\99\",[442]=\"\\84\",[443]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[444]=\"\\69\\122\\114\\101\\97\\108\",[445]=1150,[446]=60,[447]=2000,[448]=80,[449]=475,[450]=20000,[451]=160,[452]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[453]=\"\\71\\101\\110\\101\\114\\97\\108\",[454]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[455]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[456]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[457]=\"\\67\\111\\109\\98\\111\",[458]=\"\\117\\115\\101\\81\",[459]=\"\\85\\115\\101\\32\\81\",[460]=\"\\117\\115\\101\\87\",[461]=\"\\85\\115\\101\\32\\87\",[462]=\"\\117\\115\\101\\82\\50\",[463]=\"\\85\\115\\101\\32\\82\\32\\73\\102\\32\\69\\110\\101\\109\\105\\101\\115\\32\\62\\61\",[464]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[465]=\"\\72\\97\\114\\97\\115\\115\",[466]=\"\\117\\115\\101\\81\",[467]=\"\\85\\115\\101\\32\\81\",[468]=\"\\117\\115\\101\\87\",[469]=\"\\85\\115\\101\\32\\87\",[470]=\"\\77\\97\\110\\97\",[471]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[472]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[473]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[474]=\"\\117\\115\\101\\81\",[475]=\"\\85\\115\\101\\32\\81\",[476]=\"\\77\\97\\110\\97\",[477]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[478]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[479]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[480]=\"\\117\\115\\101\\81\",[481]=\"\\85\\115\\101\\32\\81\",[482]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[483]=\"\\76\\97\\115\\116\\72\\105\\116\",[484]=\"\\117\\115\\101\\81\",[485]=\"\\85\\115\\101\\32\\81\",[486]=\"\\78\\101\\118\\101\\114\",[487]=\"\\83\\109\\97\\114\\116\",[488]=\"\\65\\108\\119\\97\\121\\115\",[489]=\"\\77\\97\\110\\97\",[490]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[491]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[492]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[493]=\"\\117\\115\\101\\81\",[494]=\"\\85\\115\\101\\32\\81\",[495]=\"\\117\\115\\101\\87\",[496]=\"\\85\\115\\101\\32\\87\",[497]=\"\\117\\115\\101\\69\",[498]=\"\\85\\115\\101\\32\\69\",[499]=\"\\117\\115\\101\\82\",[500]=\"\\85\\115\\101\\32\\82\",[501]=\"\\117\\115\\101\\73\\103\\110\\105\\116\\101\",[502]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[503]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[504]=\"\\65\\117\\116\\111\",[505]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[506]=\"\\85\\115\\101\\69\",[507]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[508]=\"\\75\\101\\121\\115\",[509]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[510]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[511]=\"\\75\",[512]=\"\\65\\115\\115\\105\\115\\116\\101\\100\\85\\108\\116\\105\\109\\97\\116\\101\",[513]=\"\\65\\115\\115\\105\\115\\116\\101\\100\\32\\85\\108\\116\\105\\109\\97\\116\\101\\32\\40\\78\\101\\97\\114\\32\\77\\111\\117\\115\\101\\41\",[514]=\"\\84\",[515]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[516]=\"\\67\\104\\111\\103\\97\\116\\104\",[517]=850,[518]=950,[519]=120,[520]=1.2,[521]=650,[522]=28,[523]=500,[524]=260,[525]=0.5,[526]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[527]=\"\\67\\111\\109\\98\\111\",[528]=\"\\117\\115\\101\\81\",[529]=\"\\85\\115\\101\\32\\81\",[530]=\"\\117\\115\\101\\87\",[531]=\"\\85\\115\\101\\32\\87\",[532]=\"\\117\\115\\101\\82\",[533]=\"\\85\\115\\101\\32\\82\",[534]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[535]=\"\\72\\97\\114\\97\\115\\115\",[536]=\"\\117\\115\\101\\81\",[537]=\"\\85\\115\\101\\32\\81\",[538]=\"\\117\\115\\101\\87\",[539]=\"\\85\\115\\101\\32\\87\",[540]=\"\\77\\97\\110\\97\",[541]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[542]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[543]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[544]=\"\\117\\115\\101\\81\",[545]=\"\\85\\115\\101\\32\\81\",[546]=\"\\117\\115\\101\\87\",[547]=\"\\85\\115\\101\\32\\87\",[548]=\"\\77\\97\\110\\97\",[549]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[550]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[551]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[552]=\"\\117\\115\\101\\81\",[553]=\"\\85\\115\\101\\32\\81\",[554]=\"\\117\\115\\101\\87\",[555]=\"\\85\\115\\101\\32\\87\",[556]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[557]=\"\\76\\97\\115\\116\\72\\105\\116\",[558]=\"\\117\\115\\101\\81\",[559]=\"\\85\\115\\101\\32\\81\",[560]=\"\\117\\115\\101\\87\",[561]=\"\\85\\115\\101\\32\\87\",[562]=\"\\77\\97\\110\\97\",[563]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[564]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[565]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[566]=\"\\117\\115\\101\\81\",[567]=\"\\85\\115\\101\\32\\81\",[568]=\"\\117\\115\\101\\87\",[569]=\"\\85\\115\\101\\32\\87\",[570]=\"\\117\\115\\101\\82\",[571]=\"\\85\\115\\101\\32\\82\",[572]=\"\\117\\115\\101\\73\\103\\110\\105\\116\\101\",[573]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[574]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[575]=\"\\75\\101\\121\\115\",[576]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[577]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[578]=\"\\75\",[579]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[580]=\"\\68\\105\\97\\110\\97\",[581]=1100,[582]=825,[583]=180,[584]=1640,[585]=\"\\100\\105\\97\\110\\97\\97\\114\\99\",[586]=\"\\109\\105\\115\\115\\105\\108\\101\",[587]=250,[588]=\"\\67\\111\\109\\98\\111\",[589]=\"\\82\\97\\110\\103\\101\\32\\102\\111\\114\\32\\67\\111\\109\\98\\111\",[590]=1200,[591]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[592]=\"\\71\\101\\110\\101\\114\\97\\108\",[593]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[594]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[595]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\",[596]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\\32\\77\\111\\100\\101\",[597]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[598]=\"\\67\\111\\109\\98\\111\",[599]=\"\\81\",[600]=\"\\85\\115\\101\\32\\81\",[601]=\"\\87\",[602]=\"\\85\\115\\101\\32\\87\",[603]=\"\\69\",[604]=\"\\85\\115\\101\\32\\69\",[605]=\"\\82\",[606]=\"\\85\\115\\101\\32\\82\",[607]=\"\\78\\101\\118\\101\\114\",[608]=\"\\83\\109\\97\\114\\116\",[609]=\"\\65\\108\\119\\97\\121\\115\",[610]=\"\\82\\50\",[611]=\"\\85\\115\\101\\32\\82\\32\\79\\110\\32\\69\\110\\101\\109\\105\\101\\115\\32\\77\\97\\114\\107\\101\\100\",[612]=\"\\81\\82\",[613]=\"\\85\\115\\101\\32\\81\\82\\32\\111\\110\\32\\79\\98\\106\\101\\99\\116\\32\\84\\111\\32\\71\\97\\112\\67\\108\\111\\115\\101\",[614]=\"\\78\\101\\118\\101\\114\",[615]=\"\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\",[616]=\"\\65\\108\\119\\97\\121\\115\",[617]=\"\\73\\103\\110\\105\\116\\101\",[618]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\\32\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\",[619]=\"\\90\\104\\111\\110\\121\\97\\115\",[620]=\"\\85\\115\\101\\32\\90\\104\\111\\110\\121\\97\\115\\32\\105\\102\\32\\72\\80\\32\\37\\32\\60\\61\",[621]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[622]=\"\\72\\97\\114\\97\\115\\115\",[623]=\"\\81\",[624]=\"\\85\\115\\101\\32\\81\",[625]=\"\\87\",[626]=\"\\85\\115\\101\\32\\87\",[627]=\"\\69\",[628]=\"\\85\\115\\101\\32\\69\",[629]=\"\\77\\97\\110\\97\",[630]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[631]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[632]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[633]=\"\\81\",[634]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[635]=\"\\87\",[636]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\77\\105\\110\\105\\111\\110\\115\\32\\62\\61\\32\",[637]=\"\\69\",[638]=\"\\85\\115\\101\\32\\69\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\",[639]=\"\\82\",[640]=\"\\85\\115\\101\\32\\82\",[641]=\"\\77\\97\\110\\97\",[642]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[643]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[644]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[645]=\"\\81\",[646]=\"\\85\\115\\101\\32\\81\",[647]=\"\\87\",[648]=\"\\85\\115\\101\\32\\87\",[649]=\"\\69\",[650]=\"\\85\\115\\101\\32\\69\",[651]=\"\\82\",[652]=\"\\85\\115\\101\\32\\82\",[653]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[654]=\"\\76\\97\\115\\116\\72\\105\\116\",[655]=\"\\81\",[656]=\"\\85\\115\\101\\32\\81\",[657]=\"\\78\\101\\118\\101\\114\",[658]=\"\\83\\109\\97\\114\\116\",[659]=\"\\65\\108\\119\\97\\121\\115\",[660]=\"\\77\\97\\110\\97\",[661]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[662]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[663]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[664]=\"\\81\",[665]=\"\\85\\115\\101\\32\\81\",[666]=\"\\87\",[667]=\"\\85\\115\\101\\32\\87\",[668]=\"\\69\",[669]=\"\\85\\115\\101\\32\\69\",[670]=\"\\82\",[671]=\"\\85\\115\\101\\32\\82\",[672]=\"\\73\\103\\110\\105\\116\\101\",[673]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[674]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[675]=\"\\65\\117\\116\\111\",[676]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\",[677]=\"\\69\",[678]=\"\\32\\45\\32\\68\\114\\97\\119\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[679]=\"\\68\\114\\97\\119\",[680]=\"\\68\\97\\109\\97\\103\\101\",[681]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[682]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[683]=\"\\75\\101\\121\\115\",[684]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[685]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[686]=\"\\76\",[687]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[688]=\"\\67\\111\\114\\107\\105\",[689]=900,[690]=\"\\112\\104\\111\\115\\112\\104\\111\\114\\117\\115\\98\\111\\109\\98\",[691]=\"\\109\\105\\115\\115\\105\\108\\101\",[692]=1300,[693]=0.2,[694]=35,[695]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[696]=\"\\71\\101\\110\\101\\114\\97\\108\",[697]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[698]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[699]=\"\\82\\97\\110\\103\\101\",[700]=\"\\76\\101\\115\\115\\32\\82\\32\\82\\97\\110\\103\\101\",[701]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\",[702]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\\32\\77\\111\\100\\101\",[703]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[704]=\"\\67\\111\\109\\98\\111\",[705]=\"\\81\",[706]=\"\\85\\115\\101\\32\\81\",[707]=\"\\87\",[708]=\"\\85\\115\\101\\32\\87\",[709]=\"\\69\",[710]=\"\\85\\115\\101\\32\\69\",[711]=\"\\82\",[712]=\"\\85\\115\\101\\32\\82\\32\\73\\102\\32\\83\\116\\97\\99\\107\\32\\62\\61\",[713]=7,[714]=\"\\73\\103\\110\\105\\116\\101\",[715]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\\32\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\",[716]=\"\\73\\116\\101\\109\\115\",[717]=\"\\85\\115\\101\\32\\73\\116\\101\\109\\115\",[718]=\"\\90\\104\\111\\110\\121\\97\\115\",[719]=\"\\85\\115\\101\\32\\90\\104\\111\\110\\121\\97\\115\\32\\105\\102\\32\\72\\80\\32\\37\\32\\60\\61\",[720]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[721]=\"\\72\\97\\114\\97\\115\\115\",[722]=\"\\81\",[723]=\"\\85\\115\\101\\32\\81\",[724]=\"\\87\",[725]=\"\\85\\115\\101\\32\\87\",[726]=\"\\69\",[727]=\"\\85\\115\\101\\32\\69\",[728]=\"\\82\",[729]=\"\\85\\115\\101\\32\\82\\32\\73\\102\\32\\83\\116\\97\\99\\107\\32\\62\\61\",[730]=\"\\77\\97\\110\\97\",[731]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[732]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[733]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[734]=\"\\81\",[735]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[736]=\"\\87\",[737]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[738]=\"\\69\",[739]=\"\\85\\115\\101\\32\\69\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[740]=\"\\82\",[741]=\"\\85\\115\\101\\32\\82\\32\\73\\102\\32\\77\\105\\110\\105\\111\\110\\115\\32\\62\\61\\32\",[742]=\"\\82\\50\",[743]=\"\\79\\110\\108\\121\\32\\117\\115\\101\\32\\82\\32\\73\\102\\32\\83\\116\\97\\99\\107\\32\\62\\61\",[744]=\"\\77\\97\\110\\97\",[745]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[746]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[747]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[748]=\"\\81\",[749]=\"\\85\\115\\101\\32\\81\",[750]=\"\\87\",[751]=\"\\85\\115\\101\\32\\87\",[752]=\"\\69\",[753]=\"\\85\\115\\101\\32\\69\",[754]=\"\\82\",[755]=\"\\85\\115\\101\\32\\82\",[756]=\"\\82\\50\",[757]=\"\\79\\110\\108\\121\\32\\117\\115\\101\\32\\82\\32\\73\\102\\32\\83\\116\\97\\99\\107\\32\\62\\61\",[758]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[759]=\"\\76\\97\\115\\116\\72\\105\\116\",[760]=\"\\81\",[761]=\"\\85\\115\\101\\32\\81\",[762]=\"\\78\\101\\118\\101\\114\",[763]=\"\\83\\109\\97\\114\\116\",[764]=\"\\65\\108\\119\\97\\121\\115\",[765]=\"\\82\",[766]=\"\\85\\115\\101\\32\\82\",[767]=\"\\78\\101\\118\\101\\114\",[768]=\"\\83\\109\\97\\114\\116\",[769]=\"\\65\\108\\119\\97\\121\\115\",[770]=\"\\82\\50\",[771]=\"\\79\\110\\108\\121\\32\\117\\115\\101\\32\\82\\32\\73\\102\\32\\83\\116\\97\\99\\107\\32\\62\\61\",[772]=\"\\77\\97\\110\\97\",[773]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[774]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[775]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[776]=\"\\81\",[777]=\"\\85\\115\\101\\32\\81\",[778]=\"\\87\",[779]=\"\\85\\115\\101\\32\\87\",[780]=\"\\69\",[781]=\"\\85\\115\\101\\32\\69\",[782]=\"\\82\",[783]=\"\\85\\115\\101\\32\\82\",[784]=\"\\73\\103\\110\\105\\116\\101\",[785]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[786]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[787]=\"\\65\\117\\116\\111\",[788]=\"\\85\\115\\101\\32\\82\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[789]=\"\\82\",[790]=\"\\82\\50\",[791]=\"\\85\\115\\101\\32\\82\\32\\116\\111\\32\\69\\118\\97\\100\\101\",[792]=\"\\32\\45\\32\\68\\114\\97\\119\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[793]=\"\\68\\114\\97\\119\",[794]=\"\\68\\97\\109\\97\\103\\101\",[795]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[796]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[797]=\"\\75\\101\\121\\115\",[798]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[799]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[800]=\"\\76\",[801]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[802]=\"\\89\\97\\115\\117\\111\",[803]=55,[804]=\"\\67\\111\\109\\98\\111\",[805]=\"\\82\\97\\110\\103\\101\\32\\102\\111\\114\\32\\67\\111\\109\\98\\111\",[806]=150,[807]=\"\\72\\97\\114\\97\\115\\115\",[808]=\"\\82\\97\\110\\103\\101\\32\\102\\111\\114\\32\\72\\97\\114\\97\\115\\115\",[809]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[810]=\"\\71\\101\\110\\101\\114\\97\\108\",[811]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[812]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[813]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[814]=\"\\67\\111\\109\\98\\111\",[815]=\"\\81\",[816]=\"\\85\\115\\101\\32\\81\",[817]=\"\\69\",[818]=\"\\85\\115\\101\\32\\69\",[819]=\"\\77\\105\\110\\69\\82\\97\\110\\103\\101\",[820]=\"\\77\\105\\110\\32\\69\\32\\82\\97\\110\\103\\101\",[821]=275,[822]=\"\\82\\49\",[823]=\"\\85\\115\\101\\32\\82\\32\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\",[824]=\"\\82\\50\",[825]=\"\\85\\115\\101\\32\\82\\32\\73\\102\\32\\75\\110\\111\\99\\107\\101\\100\\32\\62\\61\\32\",[826]=\"\\73\\116\\101\\109\\115\",[827]=\"\\85\\115\\101\\32\\73\\116\\101\\109\\115\",[828]=\"\\73\\103\\110\\105\\116\\101\",[829]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[830]=\"\\78\\101\\118\\101\\114\",[831]=\"\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\",[832]=\"\\65\\108\\119\\97\\121\\115\",[833]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[834]=\"\\72\\97\\114\\97\\115\\115\",[835]=\"\\81\",[836]=\"\\85\\115\\101\\32\\81\",[837]=\"\\69\",[838]=\"\\85\\115\\101\\32\\69\",[839]=\"\\77\\105\\110\\69\\82\\97\\110\\103\\101\",[840]=\"\\77\\105\\110\\32\\69\\32\\82\\97\\110\\103\\101\",[841]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[842]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[843]=\"\\81\\49\",[844]=\"\\85\\115\\101\\32\\81\\49\\47\\81\\50\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[845]=\"\\81\\51\",[846]=\"\\85\\115\\101\\32\\81\\51\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[847]=\"\\69\",[848]=\"\\85\\115\\101\\32\\69\",[849]=\"\\78\\101\\118\\101\\114\",[850]=\"\\83\\109\\97\\114\\116\",[851]=\"\\65\\108\\119\\97\\121\\115\",[852]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[853]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[854]=\"\\81\",[855]=\"\\85\\115\\101\\32\\81\",[856]=\"\\69\",[857]=\"\\85\\115\\101\\32\\69\",[858]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[859]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[860]=\"\\81\",[861]=\"\\85\\115\\101\\32\\81\",[862]=\"\\69\",[863]=\"\\85\\115\\101\\32\\69\",[864]=\"\\82\",[865]=\"\\85\\115\\101\\32\\82\",[866]=\"\\73\\103\\110\\105\\116\\101\",[867]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[868]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[869]=\"\\65\\117\\116\\111\",[870]=\"\\82\",[871]=\"\\65\\117\\116\\111\\32\\82\\32\\73\\102\\32\\75\\110\\111\\99\\107\\101\\100\\32\\62\\61\\32\",[872]=\"\\85\\115\\101\\32\\87\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[873]=\"\\87\",[874]=\"\\85\\115\\101\\32\\81\\51\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\",[875]=\"\\81\\51\",[876]=\"\\32\\45\\32\\77\\105\\115\\99\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[877]=\"\\77\\105\\115\\99\",[878]=\"\\65\\118\\111\\105\\100\",[879]=\"\\65\\118\\111\\105\\100\\32\\100\\105\\118\\101\\32\\116\\117\\114\\114\\101\\116\",[880]=\"\\78\\101\\118\\101\\114\",[881]=\"\\73\\102\\32\\110\\111\\116\\32\\75\\105\\108\\108\\97\\98\\108\\101\",[882]=\"\\65\\108\\119\\97\\121\\115\",[883]=\"\\32\\45\\32\\68\\114\\97\\119\\105\\110\\103\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[884]=\"\\68\\114\\97\\119\",[885]=\"\\68\\97\\109\\97\\103\\101\",[886]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[887]=\"\\32\\45\\32\\75\\101\\121\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[888]=\"\\75\\101\\121\\115\",[889]=\"\\83\\116\\97\\99\\107\\81\\77\",[890]=\"\\83\\116\\97\\99\\107\\32\\81\\32\\87\\105\\116\\104\\32\\77\\105\\110\\105\\111\\110\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[891]=\"\\76\",[892]=\"\\83\\116\\97\\99\\107\\81\",[893]=\"\\65\\117\\116\\111\\32\\81\\32\\79\\110\\32\\69\\110\\101\\109\\105\\101\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[894]=\"\\74\",[895]=\"\\83\\116\\97\\99\\107\\81\\77\",[896]=\"\\83\\116\\97\\99\\107\\81\",[897]=\"\\82\\117\\110\",[898]=\"\\82\\117\\110\",[899]=\"\\84\",[900]=\"\\75\\97\\115\\115\\97\\100\\105\\110\",[901]=125,[902]=39,[903]=270,[904]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[905]=\"\\71\\101\\110\\101\\114\\97\\108\",[906]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[907]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[908]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[909]=\"\\67\\111\\109\\98\\111\",[910]=\"\\117\\115\\101\\81\",[911]=\"\\85\\115\\101\\32\\81\",[912]=\"\\117\\115\\101\\87\",[913]=\"\\85\\115\\101\\32\\87\",[914]=\"\\117\\115\\101\\69\",[915]=\"\\85\\115\\101\\32\\69\",[916]=\"\\117\\115\\101\\82\",[917]=\"\\85\\115\\101\\32\\82\",[918]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[919]=\"\\72\\97\\114\\97\\115\\115\",[920]=\"\\117\\115\\101\\81\",[921]=\"\\85\\115\\101\\32\\81\",[922]=\"\\117\\115\\101\\87\",[923]=\"\\85\\115\\101\\32\\87\",[924]=\"\\117\\115\\101\\69\",[925]=\"\\85\\115\\101\\32\\69\",[926]=\"\\77\\97\\110\\97\",[927]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[928]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[929]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[930]=\"\\117\\115\\101\\81\",[931]=\"\\85\\115\\101\\32\\81\",[932]=\"\\117\\115\\101\\87\",[933]=\"\\85\\115\\101\\32\\87\",[934]=\"\\117\\115\\101\\69\",[935]=\"\\85\\115\\101\\32\\69\",[936]=\"\\77\\97\\110\\97\",[937]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[938]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[939]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[940]=\"\\117\\115\\101\\81\",[941]=\"\\85\\115\\101\\32\\81\",[942]=\"\\117\\115\\101\\87\",[943]=\"\\85\\115\\101\\32\\87\",[944]=\"\\117\\115\\101\\69\",[945]=\"\\85\\115\\101\\32\\69\",[946]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[947]=\"\\76\\97\\115\\116\\72\\105\\116\",[948]=\"\\117\\115\\101\\81\",[949]=\"\\85\\115\\101\\32\\81\",[950]=\"\\77\\97\\110\\97\",[951]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[952]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[953]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[954]=\"\\117\\115\\101\\81\",[955]=\"\\85\\115\\101\\32\\81\",[956]=\"\\117\\115\\101\\87\",[957]=\"\\85\\115\\101\\32\\87\",[958]=\"\\117\\115\\101\\69\",[959]=\"\\85\\115\\101\\32\\69\",[960]=\"\\117\\115\\101\\82\",[961]=\"\\85\\115\\101\\32\\82\",[962]=\"\\117\\115\\101\\73\\103\\110\\105\\116\\101\",[963]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[964]=\"\\32\\45\\32\\68\\114\\97\\119\\105\\110\\103\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[965]=\"\\68\\114\\97\\119\",[966]=\"\\68\\97\\109\\97\\103\\101\",[967]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[968]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[969]=\"\\75\\101\\121\\115\",[970]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[971]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[972]=\"\\76\",[973]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[974]=\"\\83\\121\\110\\100\\114\\97\",[975]=0.65,[976]=0.6,[977]=1450,[978]=210,[979]=0.07,[980]=\"\\69\",[981]=0.05,[982]=45,[983]=40,[984]=\"\\81\\69\",[985]=675,[986]=75,[987]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[988]=\"\\71\\101\\110\\101\\114\\97\\108\",[989]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[990]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[991]=\"\\82\\97\\110\\103\\101\",[992]=\"\\76\\101\\115\\115\\32\\81\\69\\32\\82\\97\\110\\103\\101\",[993]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\",[994]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\\32\\77\\111\\100\\101\",[995]=\"\\68\\111\\110\\116\\32\\117\\115\\101\\32\\82\\32\\111\\110\",[996]=\"\\68\\111\\110\\116\\82\",[997]=\"\\87\\105\\100\\116\\104\",[998]=\"\\81\\69\\32\\87\\105\\100\\116\\104\",[999]=\"\\68\\101\\108\\97\\121\",[1000]=\"\\69\\32\\68\\101\\108\\97\\121\",[1001]=350,[1002]=\"\\83\\112\\101\\101\\100\",[1003]=\"\\69\\32\\83\\112\\101\\101\\100\",[1004]=3000,[1005]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1006]=\"\\67\\111\\109\\98\\111\",[1007]=\"\\81\",[1008]=\"\\85\\115\\101\\32\\81\",[1009]=\"\\87\",[1010]=\"\\85\\115\\101\\32\\87\",[1011]=\"\\69\",[1012]=\"\\85\\115\\101\\32\\69\",[1013]=\"\\81\\69\",[1014]=\"\\85\\115\\101\\32\\81\\69\",[1015]=\"\\87\\69\",[1016]=\"\\85\\115\\101\\32\\87\\69\",[1017]=\"\\82\",[1018]=\"\\85\\115\\101\\32\\82\",[1019]=\"\\78\\101\\118\\101\\114\",[1020]=\"\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\",[1021]=\"\\73\\102\\32\\78\\101\\101\\100\\101\\100\",[1022]=\"\\65\\108\\119\\97\\121\\115\",[1023]=\"\\90\\104\\111\\110\\121\\97\\115\",[1024]=\"\\85\\115\\101\\32\\90\\104\\111\\110\\121\\97\\115\\32\\105\\102\\32\\72\\80\\32\\37\\32\\60\\61\",[1025]=\"\\67\\111\\111\\108\\100\\111\\119\\110\",[1026]=\"\\67\\111\\111\\108\\100\\111\\119\\110\\32\\111\\110\\32\\115\\112\\101\\108\\108\\115\\32\\102\\111\\114\\32\\114\\32\\110\\101\\101\\100\\101\\100\",[1027]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1028]=\"\\72\\97\\114\\97\\115\\115\",[1029]=\"\\81\",[1030]=\"\\85\\115\\101\\32\\81\",[1031]=\"\\81\\50\",[1032]=\"\\85\\115\\101\\32\\81\\32\\105\\102\\32\\101\\110\\101\\109\\121\\32\\99\\97\\110\\39\\116\\32\\109\\111\\118\\101\",[1033]=\"\\87\",[1034]=\"\\85\\115\\101\\32\\87\",[1035]=\"\\69\",[1036]=\"\\85\\115\\101\\32\\69\",[1037]=\"\\81\\69\",[1038]=\"\\85\\115\\101\\32\\81\\69\",[1039]=\"\\87\\69\",[1040]=\"\\85\\115\\101\\32\\87\\69\",[1041]=\"\\84\\117\\114\\114\\101\\116\",[1042]=\"\\68\\111\\110\\39\\116\\32\\104\\97\\114\\97\\115\\115\\32\\117\\110\\100\\101\\114\\32\\116\\117\\114\\114\\101\\116\",[1043]=\"\\77\\97\\110\\97\",[1044]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1045]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1046]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[1047]=\"\\81\",[1048]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1049]=\"\\87\",[1050]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1051]=\"\\69\",[1052]=\"\\85\\115\\101\\32\\69\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1053]=\"\\77\\97\\110\\97\",[1054]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1055]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1056]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[1057]=\"\\81\",[1058]=\"\\85\\115\\101\\32\\81\",[1059]=\"\\87\",[1060]=\"\\85\\115\\101\\32\\87\",[1061]=\"\\69\",[1062]=\"\\85\\115\\101\\32\\69\",[1063]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1064]=\"\\76\\97\\115\\116\\72\\105\\116\",[1065]=\"\\81\",[1066]=\"\\85\\115\\101\\32\\81\",[1067]=\"\\78\\101\\118\\101\\114\",[1068]=\"\\83\\109\\97\\114\\116\",[1069]=\"\\65\\108\\119\\97\\121\\115\",[1070]=\"\\87\",[1071]=\"\\85\\115\\101\\32\\87\",[1072]=\"\\78\\101\\118\\101\\114\",[1073]=\"\\83\\109\\97\\114\\116\",[1074]=\"\\65\\108\\119\\97\\121\\115\",[1075]=\"\\77\\97\\110\\97\",[1076]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[1077]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1078]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[1079]=\"\\81\",[1080]=\"\\85\\115\\101\\32\\81\",[1081]=\"\\87\",[1082]=\"\\85\\115\\101\\32\\87\",[1083]=\"\\69\",[1084]=\"\\85\\115\\101\\32\\69\",[1085]=\"\\82\",[1086]=\"\\85\\115\\101\\32\\82\",[1087]=\"\\73\\103\\110\\105\\116\\101\",[1088]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[1089]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1090]=\"\\65\\117\\116\\111\",[1091]=\"\\85\\115\\101\\32\\81\\69\\47\\87\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1092]=\"\\69\",[1093]=\"\\69\\50\",[1094]=\"\\85\\115\\101\\32\\81\\69\\47\\87\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1095]=\"\\85\\115\\101\\32\\81\\69\\47\\87\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\71\\97\\112\\67\\108\\111\\115\\101\\114\\115\",[1096]=\"\\69\\51\",[1097]=\"\\69\\52\",[1098]=\"\\85\\115\\101\\32\\81\\69\\47\\87\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\71\\97\\112\\67\\108\\111\\115\\101\\114\\115\",[1099]=\"\\32\\45\\32\\68\\114\\97\\119\\105\\110\\103\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1100]=\"\\68\\114\\97\\119\",[1101]=\"\\68\\97\\109\\97\\103\\101\",[1102]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[1103]=\"\\69\",[1104]=\"\\69\\32\\76\\105\\110\\101\\115\",[1105]=\"\\75\\105\\108\\108\\97\\98\\108\\101\",[1106]=\"\\84\\101\\120\\116\\32\\105\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\\119\\105\\116\\104\\32\\82\",[1107]=\"\\87\\79\\98\\106\\101\\99\\116\",[1108]=\"\\67\\105\\114\\99\\108\\101\\32\\79\\110\\32\\87\\32\\79\\98\\106\\101\\99\\116\",[1109]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1110]=\"\\75\\101\\121\\115\",[1111]=\"\\81\\69\",[1112]=\"\\67\\97\\115\\116\\32\\81\\69\\47\\87\\69\\32\\78\\101\\97\\114\\32\\77\\111\\117\\115\\101\",[1113]=\"\\84\",[1114]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1115]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[1116]=\"\\76\",[1117]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1118]=\"\\84\\119\\105\\115\\116\\101\\100\\70\\97\\116\\101\",[1119]=\"\\69\\120\\116\\114\\97\\87\\105\\110\\100\\85\\112\",[1120]=\"\\69\\120\\116\\114\\97\\32\\87\\105\\110\\100\\85\\112\\84\\105\\109\\101\",[1121]=\"\\70\\97\\114\\109\\68\\101\\108\\97\\121\",[1122]=\"\\70\\97\\114\\109\\32\\68\\101\\108\\97\\121\",[1123]=300,[1124]=5500,[1125]=1.5,[1126]=\"\\67\\111\\109\\98\\111\",[1127]=\"\\82\\97\\110\\103\\101\\32\\102\\111\\114\\32\\67\\111\\109\\98\\111\",[1128]=\"\\72\\97\\114\\97\\115\\115\",[1129]=\"\\82\\97\\110\\103\\101\\32\\102\\111\\114\\32\\72\\97\\114\\97\\115\\115\",[1130]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1131]=\"\\71\\101\\110\\101\\114\\97\\108\",[1132]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[1133]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[1134]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\",[1135]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\\32\\77\\111\\100\\101\",[1136]=\"\\71\\111\\108\\100\",[1137]=\"\\83\\101\\108\\101\\99\\116\\32\\103\\111\\108\\100\\32\\99\\97\\114\\100\\32\\97\\102\\116\\101\\114\\32\\82\",[1138]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1139]=\"\\67\\111\\109\\98\\111\",[1140]=\"\\81\\50\",[1141]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\",[1142]=\"\\71\\111\\108\\100\",[1143]=\"\\85\\115\\101\\32\\71\\111\\108\\100\\32\\67\\97\\114\\100\",[1144]=\"\\66\\108\\117\\101\\77\\97\\110\\97\",[1145]=\"\\85\\115\\101\\32\\66\\108\\117\\101\\32\\67\\97\\114\\100\\32\\73\\102\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\32\\60\\61\\32\",[1146]=20,[1147]=\"\\90\\104\\111\\110\\121\\97\\115\",[1148]=\"\\85\\115\\101\\32\\90\\104\\111\\110\\121\\97\\115\\32\\105\\102\\32\\72\\80\\32\\37\\32\\60\\61\",[1149]=\"\\73\\116\\101\\109\\115\",[1150]=\"\\85\\115\\101\\32\\73\\116\\101\\109\\115\",[1151]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1152]=\"\\72\\97\\114\\97\\115\\115\",[1153]=\"\\80\\114\\105\\111\\114\\105\\122\\101\",[1154]=\"\\80\\114\\105\\111\\114\\105\\122\\101\\32\\70\\97\\114\\109\\32\\111\\118\\101\\114\\32\\72\\97\\114\\97\\115\\115\",[1155]=\"\\84\\117\\114\\114\\101\\116\",[1156]=\"\\68\\111\\110\\39\\116\\32\\104\\97\\114\\97\\115\\115\\32\\117\\110\\100\\101\\114\\32\\116\\117\\114\\114\\101\\116\",[1157]=\"\\81\",[1158]=\"\\85\\115\\101\\32\\81\",[1159]=\"\\71\\111\\108\\100\",[1160]=\"\\85\\115\\101\\32\\71\\111\\108\\100\\32\\67\\97\\114\\100\",[1161]=\"\\77\\97\\110\\97\",[1162]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1163]=\"\\66\\108\\117\\101\\77\\97\\110\\97\",[1164]=\"\\85\\115\\101\\32\\66\\108\\117\\101\\32\\67\\97\\114\\100\\32\\73\\102\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\32\\60\\61\\32\",[1165]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1166]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[1167]=\"\\81\",[1168]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1169]=\"\\81\\77\\97\\110\\97\",[1170]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\32\\62\\61\\32\",[1171]=\"\\82\\101\\100\",[1172]=\"\\85\\115\\101\\32\\82\\101\\100\\32\\67\\97\\114\\100\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1173]=\"\\82\\101\\100\\77\\97\\110\\97\",[1174]=\"\\82\\101\\100\\32\\67\\97\\114\\100\\32\\73\\102\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\32\\62\\61\\32\",[1175]=\"\\66\\108\\117\\101\",[1176]=\"\\85\\115\\101\\32\\66\\108\\117\\101\",[1177]=\"\\66\\108\\117\\101\\77\\97\\110\\97\",[1178]=\"\\85\\115\\101\\32\\66\\108\\117\\101\\32\\67\\97\\114\\100\\32\\73\\102\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\32\\60\\61\\32\",[1179]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1180]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[1181]=\"\\81\\50\",[1182]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1183]=\"\\82\\101\\100\",[1184]=\"\\85\\115\\101\\32\\82\\101\\100\",[1185]=\"\\82\\101\\100\\77\\97\\110\\97\",[1186]=\"\\85\\115\\101\\32\\82\\101\\100\\32\\67\\97\\114\\100\\32\\73\\102\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\32\\62\\61\\32\",[1187]=\"\\66\\108\\117\\101\",[1188]=\"\\85\\115\\101\\32\\66\\108\\117\\101\",[1189]=\"\\66\\108\\117\\101\\77\\97\\110\\97\",[1190]=\"\\85\\115\\101\\32\\66\\108\\117\\101\\32\\67\\97\\114\\100\\32\\73\\102\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\32\\60\\61\\32\",[1191]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1192]=\"\\76\\97\\115\\116\\72\\105\\116\",[1193]=\"\\81\",[1194]=\"\\85\\115\\101\\32\\81\",[1195]=\"\\78\\101\\118\\101\\114\",[1196]=\"\\83\\109\\97\\114\\116\",[1197]=\"\\65\\108\\119\\97\\121\\115\",[1198]=\"\\77\\97\\110\\97\",[1199]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[1200]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1201]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[1202]=\"\\81\",[1203]=\"\\85\\115\\101\\32\\81\",[1204]=\"\\87\",[1205]=\"\\85\\115\\101\\32\\87\",[1206]=\"\\73\\103\\110\\105\\116\\101\",[1207]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[1208]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1209]=\"\\65\\117\\116\\111\",[1210]=\"\\85\\115\\101\\32\\71\\111\\108\\100\\32\\67\\97\\114\\100\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1211]=\"\\87\",[1212]=\"\\87\\50\",[1213]=\"\\85\\115\\101\\32\\71\\111\\108\\100\\32\\67\\97\\114\\100\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1214]=\"\\85\\115\\101\\32\\71\\111\\108\\100\\32\\67\\97\\114\\100\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\71\\97\\112\\67\\108\\111\\115\\101\\114\\115\",[1215]=\"\\87\\51\",[1216]=\"\\87\\52\",[1217]=\"\\85\\115\\101\\32\\71\\111\\108\\100\\32\\67\\97\\114\\100\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\71\\97\\112\\67\\108\\111\\115\\101\\114\\115\",[1218]=\"\\32\\45\\32\\68\\114\\97\\119\\105\\110\\103\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1219]=\"\\68\\114\\97\\119\",[1220]=\"\\68\\97\\109\\97\\103\\101\",[1221]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[1222]=\"\\75\\105\\108\\108\\97\\98\\108\\101\",[1223]=\"\\84\\101\\120\\116\\32\\105\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\\119\\105\\116\\104\\32\\82\",[1224]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1225]=\"\\75\\101\\121\\115\",[1226]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1227]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[1228]=\"\\76\",[1229]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1230]=\"\\83\\116\\97\\114\\116\\87\",[1231]=\"\\83\\116\\97\\114\\116\\32\\119\\105\\116\\104\\32\\67\\97\\114\\100\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[1232]=\"\\75\",[1233]=\"\\83\\116\\97\\114\\116\\87\",[1234]=\"\\66\\108\\117\\101\",[1235]=\"\\83\\101\\108\\101\\99\\116\\32\\66\\108\\117\\101\\32\\67\\97\\114\\100\\32\\40\\68\\101\\102\\97\\117\\108\\116\\58\\32\\70\\49\\41\",[1236]=112,[1237]=\"\\82\\101\\100\",[1238]=\"\\83\\101\\108\\101\\99\\116\\32\\82\\101\\100\\32\\67\\97\\114\\100\\32\\40\\68\\101\\102\\97\\117\\108\\116\\58\\32\\70\\50\\41\",[1239]=113,[1240]=\"\\71\\111\\108\\100\",[1241]=\"\\83\\101\\108\\101\\99\\116\\32\\71\\111\\108\\100\\32\\67\\97\\114\\100\\32\\40\\68\\101\\102\\97\\117\\108\\116\\58\\32\\70\\51\\41\",[1242]=114,[1243]=\"\\86\\105\\107\\116\\111\\114\",[1244]=525,[1245]=780,[1246]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1247]=\"\\71\\101\\110\\101\\114\\97\\108\",[1248]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[1249]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[1250]=\"\\82\\97\\110\\103\\101\",[1251]=\"\\76\\101\\115\\115\\32\\69\\32\\82\\97\\110\\103\\101\",[1252]=25,[1253]=\"\\65\\117\\116\\111\\70\\111\\108\\108\\111\\119\",[1254]=\"\\65\\117\\116\\111\\70\\111\\108\\108\\111\\119\\32\\119\\105\\116\\104\\32\\82\",[1255]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\",[1256]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\\32\\77\\111\\100\\101\",[1257]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1258]=\"\\67\\111\\109\\98\\111\",[1259]=\"\\81\",[1260]=\"\\85\\115\\101\\32\\81\\32\\76\\111\\103\\105\\99\",[1261]=\"\\78\\101\\118\\101\\114\",[1262]=\"\\79\\110\\108\\121\\32\\73\\110\\32\\65\\65\\32\\82\\97\\110\\103\\101\",[1263]=\"\\65\\108\\119\\97\\121\\115\",[1264]=\"\\81\\50\",[1265]=\"\\85\\115\\101\\32\\81\\32\\79\\110\",[1266]=\"\\79\\110\\108\\121\\32\\111\\110\\32\\116\\97\\114\\103\\101\\116\",[1267]=\"\\79\\110\\32\\97\\110\\121\\32\\101\\110\\101\\109\\121\",[1268]=\"\\87\",[1269]=\"\\85\\115\\101\\32\\87\",[1270]=\"\\87\\51\",[1271]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\",[1272]=\"\\69\",[1273]=\"\\85\\115\\101\\32\\69\",[1274]=\"\\82\",[1275]=\"\\85\\115\\101\\32\\82\",[1276]=\"\\78\\101\\118\\101\\114\",[1277]=\"\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\",[1278]=\"\\73\\102\\32\\78\\101\\101\\100\\101\\100\",[1279]=\"\\65\\108\\119\\97\\121\\115\",[1280]=\"\\67\\111\\111\\108\\100\\111\\119\\110\",[1281]=\"\\67\\111\\111\\108\\100\\111\\119\\110\\32\\111\\110\\32\\115\\112\\101\\108\\108\\115\\32\\102\\111\\114\\32\\114\\32\\110\\101\\101\\100\\101\\100\",[1282]=\"\\82\\50\",[1283]=\"\\85\\115\\101\\32\\82\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\",[1284]=\"\\90\\104\\111\\110\\121\\97\\115\",[1285]=\"\\85\\115\\101\\32\\90\\104\\111\\110\\121\\97\\115\\32\\105\\102\\32\\72\\80\\32\\37\\32\\60\\61\",[1286]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1287]=\"\\72\\97\\114\\97\\115\\115\",[1288]=\"\\81\",[1289]=\"\\85\\115\\101\\32\\81\",[1290]=\"\\78\\101\\118\\101\\114\",[1291]=\"\\79\\110\\108\\121\\32\\73\\110\\32\\65\\65\\32\\82\\97\\110\\103\\101\",[1292]=\"\\65\\108\\119\\97\\121\\115\",[1293]=\"\\81\\50\",[1294]=\"\\85\\115\\101\\32\\81\\32\\79\\110\",[1295]=\"\\79\\110\\108\\121\\32\\111\\110\\32\\116\\97\\114\\103\\101\\116\",[1296]=\"\\79\\110\\32\\97\\110\\121\\32\\101\\110\\101\\109\\121\",[1297]=\"\\87\",[1298]=\"\\85\\115\\101\\32\\87\",[1299]=\"\\69\",[1300]=\"\\85\\115\\101\\32\\69\",[1301]=\"\\84\\117\\114\\114\\101\\116\",[1302]=\"\\68\\111\\110\\39\\116\\32\\104\\97\\114\\97\\115\\115\\32\\117\\110\\100\\101\\114\\32\\116\\117\\114\\114\\101\\116\",[1303]=\"\\77\\97\\110\\97\",[1304]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1305]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1306]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[1307]=\"\\81\",[1308]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\77\\105\\110\\105\\111\\110\\115\\32\\62\\61\\32\",[1309]=\"\\87\",[1310]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1311]=\"\\69\",[1312]=\"\\85\\115\\101\\32\\69\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1313]=\"\\77\\97\\110\\97\",[1314]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1315]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1316]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[1317]=\"\\81\",[1318]=\"\\85\\115\\101\\32\\81\",[1319]=\"\\87\",[1320]=\"\\85\\115\\101\\32\\87\",[1321]=\"\\69\",[1322]=\"\\85\\115\\101\\32\\69\",[1323]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1324]=\"\\76\\97\\115\\116\\72\\105\\116\",[1325]=\"\\81\",[1326]=\"\\85\\115\\101\\32\\81\",[1327]=\"\\78\\101\\118\\101\\114\",[1328]=\"\\83\\109\\97\\114\\116\",[1329]=\"\\65\\108\\119\\97\\121\\115\",[1330]=\"\\69\",[1331]=\"\\85\\115\\101\\32\\69\",[1332]=\"\\78\\101\\118\\101\\114\",[1333]=\"\\83\\109\\97\\114\\116\",[1334]=\"\\65\\108\\119\\97\\121\\115\",[1335]=\"\\77\\97\\110\\97\",[1336]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[1337]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1338]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[1339]=\"\\81\",[1340]=\"\\85\\115\\101\\32\\81\",[1341]=\"\\87\",[1342]=\"\\85\\115\\101\\32\\87\",[1343]=\"\\69\",[1344]=\"\\85\\115\\101\\32\\69\",[1345]=\"\\82\",[1346]=\"\\85\\115\\101\\32\\82\",[1347]=\"\\73\\103\\110\\105\\116\\101\",[1348]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[1349]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1350]=\"\\65\\117\\116\\111\",[1351]=\"\\85\\115\\101\\32\\87\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1352]=\"\\87\",[1353]=\"\\87\\50\",[1354]=\"\\85\\115\\101\\32\\87\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1355]=\"\\85\\115\\101\\32\\87\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\71\\97\\112\\67\\108\\111\\115\\101\\114\\115\",[1356]=\"\\87\\51\",[1357]=\"\\87\\52\",[1358]=\"\\85\\115\\101\\32\\87\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\71\\97\\112\\67\\108\\111\\115\\101\\114\\115\",[1359]=\"\\85\\115\\101\\32\\82\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1360]=\"\\82\",[1361]=\"\\82\\50\",[1362]=\"\\85\\115\\101\\32\\82\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1363]=\"\\32\\45\\32\\68\\114\\97\\119\\105\\110\\103\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1364]=\"\\68\\114\\97\\119\",[1365]=\"\\68\\97\\109\\97\\103\\101\",[1366]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[1367]=\"\\75\\105\\108\\108\\97\\98\\108\\101\",[1368]=\"\\84\\101\\120\\116\\32\\105\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\\119\\105\\116\\104\\32\\82\",[1369]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1370]=\"\\75\\101\\121\\115\",[1371]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1372]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[1373]=\"\\76\",[1374]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1375]=\"\\88\\101\\114\\97\\116\\104\",[1376]=750,[1377]=0.78,[1378]=1050,[1379]=\"\\120\\101\\114\\97\\116\\104\\109\\97\\103\\101\\115\\112\\101\\97\\114\",[1380]=\"\\109\\105\\115\\115\\105\\108\\101\",[1381]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1382]=\"\\71\\101\\110\\101\\114\\97\\108\",[1383]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[1384]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[1385]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\",[1386]=\"\\68\\101\\118\\101\\108\\111\\112\\101\\114\\32\\77\\111\\100\\101\",[1387]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1388]=\"\\67\\111\\109\\98\\111\",[1389]=\"\\81\",[1390]=\"\\85\\115\\101\\32\\81\",[1391]=\"\\87\",[1392]=\"\\85\\115\\101\\32\\87\",[1393]=\"\\69\",[1394]=\"\\85\\115\\101\\32\\69\",[1395]=\"\\90\\104\\111\\110\\121\\97\\115\",[1396]=\"\\85\\115\\101\\32\\90\\104\\111\\110\\121\\97\\115\\32\\105\\102\\32\\72\\80\\32\\37\\32\\60\\61\",[1397]=\"\\32\\45\\32\\85\\108\\116\\105\\109\\97\\116\\101\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1398]=\"\\85\\108\\116\\105\\109\\97\\116\\101\",[1399]=\"\\84\\97\\112\\75\\101\\121\",[1400]=\"\\84\\97\\112\\32\\75\\101\\121\",[1401]=\"\\84\",[1402]=\"\\77\\111\\100\\101\",[1403]=\"\\82\\32\\77\\111\\100\\101\",[1404]=\"\\65\\117\\116\\111\\32\\82\",[1405]=\"\\85\\115\\105\\110\\103\\32\\84\\97\\112\\32\\75\\101\\121\",[1406]=\"\\68\\101\\108\\97\\121\",[1407]=\"\\68\\101\\108\\97\\121\\32\\98\\101\\116\\119\\101\\101\\110\\32\\82\\39\\115\",[1408]=\"\\78\\101\\97\\114\\32\\77\\111\\117\\115\\101\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1409]=\"\\78\\101\\97\\114\\77\\111\\117\\115\\101\",[1410]=\"\\69\\110\\97\\98\\108\\101\",[1411]=\"\\79\\110\\108\\121\\32\\78\\101\\97\\114\\32\\77\\111\\117\\115\\101\",[1412]=\"\\82\\97\\100\\105\\117\\115\",[1413]=\"\\78\\101\\97\\114\\32\\77\\111\\117\\115\\101\\32\\82\\97\\100\\105\\117\\115\",[1414]=\"\\68\\114\\97\\119\",[1415]=\"\\68\\114\\97\\119\\32\\78\\101\\97\\114\\32\\77\\111\\117\\115\\101\\32\\82\\97\\100\\105\\117\\115\",[1416]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1417]=\"\\72\\97\\114\\97\\115\\115\",[1418]=\"\\81\",[1419]=\"\\85\\115\\101\\32\\81\",[1420]=\"\\87\",[1421]=\"\\85\\115\\101\\32\\87\",[1422]=\"\\69\",[1423]=\"\\85\\115\\101\\32\\69\",[1424]=\"\\84\\117\\114\\114\\101\\116\",[1425]=\"\\68\\111\\110\\39\\116\\32\\104\\97\\114\\97\\115\\115\\32\\117\\110\\100\\101\\114\\32\\116\\117\\114\\114\\101\\116\",[1426]=\"\\77\\97\\110\\97\",[1427]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1428]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1429]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[1430]=\"\\81\",[1431]=\"\\85\\115\\101\\32\\81\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1432]=\"\\87\",[1433]=\"\\85\\115\\101\\32\\87\\32\\73\\102\\32\\72\\105\\116\\32\\62\\61\\32\",[1434]=\"\\69\",[1435]=\"\\85\\115\\101\\32\\69\\32\\73\\102\\32\\77\\105\\110\\105\\111\\110\\115\\32\\62\\61\\32\",[1436]=\"\\77\\97\\110\\97\",[1437]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1438]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1439]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[1440]=\"\\81\",[1441]=\"\\85\\115\\101\\32\\81\",[1442]=\"\\87\",[1443]=\"\\85\\115\\101\\32\\87\",[1444]=\"\\69\",[1445]=\"\\85\\115\\101\\32\\69\",[1446]=\"\\32\\45\\32\\76\\97\\115\\116\\72\\105\\116\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1447]=\"\\76\\97\\115\\116\\72\\105\\116\",[1448]=\"\\87\",[1449]=\"\\85\\115\\101\\32\\87\",[1450]=\"\\78\\101\\118\\101\\114\",[1451]=\"\\83\\109\\97\\114\\116\",[1452]=\"\\65\\108\\119\\97\\121\\115\",[1453]=\"\\69\",[1454]=\"\\85\\115\\101\\32\\69\",[1455]=\"\\78\\101\\118\\101\\114\",[1456]=\"\\83\\109\\97\\114\\116\",[1457]=\"\\65\\108\\119\\97\\121\\115\",[1458]=\"\\77\\97\\110\\97\",[1459]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\",[1460]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1461]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[1462]=\"\\81\",[1463]=\"\\85\\115\\101\\32\\81\",[1464]=\"\\87\",[1465]=\"\\85\\115\\101\\32\\87\",[1466]=\"\\69\",[1467]=\"\\85\\115\\101\\32\\69\",[1468]=\"\\82\",[1469]=\"\\85\\115\\101\\32\\82\",[1470]=\"\\73\\103\\110\\105\\116\\101\",[1471]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[1472]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1473]=\"\\65\\117\\116\\111\",[1474]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1475]=\"\\69\",[1476]=\"\\69\\50\",[1477]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\67\\104\\97\\110\\110\\101\\108\\105\\110\\103\\115\",[1478]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\71\\97\\112\\67\\108\\111\\115\\101\\114\\115\",[1479]=\"\\69\\51\",[1480]=\"\\69\\52\",[1481]=\"\\85\\115\\101\\32\\69\\32\\84\\111\\32\\73\\110\\116\\101\\114\\114\\117\\112\\116\\32\\71\\97\\112\\67\\108\\111\\115\\101\\114\\115\",[1482]=\"\\32\\45\\32\\68\\114\\97\\119\\105\\110\\103\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1483]=\"\\68\\114\\97\\119\",[1484]=\"\\68\\97\\109\\97\\103\\101\",[1485]=\"\\68\\97\\109\\97\\103\\101\\32\\67\\97\\108\\99\\117\\108\\97\\116\\105\\111\\110\\32\\66\\97\\114\",[1486]=\"\\75\\105\\108\\108\\97\\98\\108\\101\",[1487]=\"\\84\\101\\120\\116\\32\\105\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\\119\\105\\116\\104\\32\\82\",[1488]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1489]=\"\\75\\101\\121\\115\",[1490]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1491]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[1492]=\"\\76\",[1493]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1494]=\"\\83\\116\\97\\114\\116\\69\",[1495]=\"\\83\\116\\97\\114\\116\\32\\119\\105\\116\\104\\32\\69\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[1496]=\"\\75\",[1497]=\"\\83\\116\\97\\114\\116\\69\",[1498]=\"\\75\\97\\121\\108\\101\",[1499]=0.38,[1500]=\"\\32\\45\\32\\71\\101\\110\\101\\114\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1501]=\"\\71\\101\\110\\101\\114\\97\\108\",[1502]=\"\\79\\118\\101\\114\\107\\105\\108\\108\",[1503]=\"\\79\\118\\101\\114\\107\\105\\108\\108\\32\\37\\32\\102\\111\\114\\32\\68\\109\\103\\32\\80\\114\\101\\100\\105\\99\\116\\46\\46\",[1504]=\"\\32\\45\\32\\67\\111\\109\\98\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1505]=\"\\67\\111\\109\\98\\111\",[1506]=\"\\81\",[1507]=\"\\85\\115\\101\\32\\81\",[1508]=\"\\87\",[1509]=\"\\85\\115\\101\\32\\87\",[1510]=\"\\69\",[1511]=\"\\85\\115\\101\\32\\69\",[1512]=\"\\73\\103\\110\\105\\116\\101\",[1513]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\\32\\73\\102\\32\\75\\105\\108\\108\\97\\98\\108\\101\\32\",[1514]=\"\\32\\45\\32\\72\\97\\114\\97\\115\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1515]=\"\\72\\97\\114\\97\\115\\115\",[1516]=\"\\81\",[1517]=\"\\85\\115\\101\\32\\81\",[1518]=\"\\87\",[1519]=\"\\85\\115\\101\\32\\87\",[1520]=\"\\69\",[1521]=\"\\85\\115\\101\\32\\69\",[1522]=\"\\77\\97\\110\\97\",[1523]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1524]=\"\\32\\45\\32\\76\\97\\110\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1525]=\"\\76\\97\\110\\101\\67\\108\\101\\97\\114\",[1526]=\"\\81\",[1527]=\"\\85\\115\\101\\32\\81\",[1528]=\"\\69\",[1529]=\"\\85\\115\\101\\32\\69\",[1530]=\"\\77\\97\\110\\97\",[1531]=\"\\77\\105\\110\\46\\32\\77\\97\\110\\97\\32\\80\\101\\114\\99\\101\\110\\116\\58\\32\",[1532]=\"\\32\\45\\32\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1533]=\"\\74\\117\\110\\103\\108\\101\\67\\108\\101\\97\\114\",[1534]=\"\\81\",[1535]=\"\\85\\115\\101\\32\\81\",[1536]=\"\\87\",[1537]=\"\\85\\115\\101\\32\\87\",[1538]=\"\\69\",[1539]=\"\\85\\115\\101\\32\\69\",[1540]=\"\\32\\45\\32\\75\\105\\108\\108\\83\\116\\101\\97\\108\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1541]=\"\\75\\105\\108\\108\\83\\116\\101\\97\\108\",[1542]=\"\\81\",[1543]=\"\\85\\115\\101\\32\\81\",[1544]=\"\\69\",[1545]=\"\\85\\115\\101\\32\\69\",[1546]=\"\\73\\103\\110\\105\\116\\101\",[1547]=\"\\85\\115\\101\\32\\73\\103\\110\\105\\116\\101\",[1548]=\"\\32\\45\\32\\65\\117\\116\\111\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1549]=\"\\65\\117\\116\\111\",[1550]=\"\\85\\115\\101\\32\\82\\32\\84\\111\\32\\69\\118\\97\\100\\101\",[1551]=\"\\85\\115\\101\\82\",[1552]=\"\\32\\45\\32\\75\\101\\121\\115\\32\\83\\101\\116\\116\\105\\110\\103\\115\",[1553]=\"\\75\\101\\121\\115\",[1554]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1555]=\"\\72\\97\\114\\97\\115\\115\\32\\40\\84\\111\\103\\103\\108\\101\\41\",[1556]=\"\\107\",[1557]=\"\\72\\97\\114\\97\\115\\115\\84\\111\\103\\103\\108\\101\",[1558]=\"\\92\\114\",[1559]=\"\",[1560]=\"\\92\\110\",[1561]=\"\\92\\116\",[1562]=\"\\92\\114\\92\\110\\92\\114\\92\\110\",[1563]=256,[1564]=\"\\110\\117\\109\\98\\101\\114\",[1565]=\"\\124\\124\\124\",[1566]=\"\\115\\116\\114\\105\\110\\103\",[1567]=\"\\110\\117\\109\\98\\101\\114\",[1568]=\"\\65\\104\\114\\105\",[1569]=\"\\79\\110\\84\\105\\99\\107\",[1570]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1571]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1572]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1573]=\"\\79\\110\\68\\114\\97\\119\",[1574]=\"\\90\\101\\100\",[1575]=\"\\79\\110\\84\\105\\99\\107\",[1576]=\"\\79\\110\\87\\110\\100\\77\\115\\103\",[1577]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1578]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1579]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1580]=\"\\79\\110\\68\\114\\97\\119\",[1581]=\"\\79\\110\\65\\110\\105\\109\\97\\116\\105\\111\\110\",[1582]=\"\\65\\122\\105\\114\",[1583]=\"\\79\\110\\84\\105\\99\\107\",[1584]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1585]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1586]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1587]=\"\\79\\110\\68\\114\\97\\119\",[1588]=\"\\79\\110\\87\\110\\100\\77\\115\\103\",[1589]=\"\\79\\110\\83\\101\\110\\100\\80\\97\\99\\107\\101\\116\",[1590]=\"\\79\\110\\65\\110\\105\\109\\97\\116\\105\\111\\110\",[1591]=\"\\79\\110\\67\\97\\115\\116\\83\\112\\101\\108\\108\",[1592]=\"\\68\\105\\97\\110\\97\",[1593]=\"\\79\\110\\84\\105\\99\\107\",[1594]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1595]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1596]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1597]=\"\\79\\110\\65\\112\\112\\108\\121\\66\\117\\102\\102\",[1598]=\"\\79\\110\\82\\101\\109\\111\\118\\101\\66\\117\\102\\102\",[1599]=\"\\67\\111\\114\\107\\105\",[1600]=\"\\79\\110\\84\\105\\99\\107\",[1601]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1602]=\"\\79\\110\\68\\114\\97\\119\",[1603]=\"\\79\\110\\82\\101\\99\\118\\80\\97\\99\\107\\101\\116\",[1604]=\"\\79\\110\\65\\112\\112\\108\\121\\66\\117\\102\\102\",[1605]=\"\\79\\110\\82\\101\\109\\111\\118\\101\\66\\117\\102\\102\",[1606]=\"\\79\\110\\87\\110\\100\\77\\115\\103\",[1607]=\"\\89\\97\\115\\117\\111\",[1608]=\"\\79\\110\\84\\105\\99\\107\",[1609]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1610]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1611]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1612]=\"\\79\\110\\65\\112\\112\\108\\121\\66\\117\\102\\102\",[1613]=\"\\79\\110\\82\\101\\109\\111\\118\\101\\66\\117\\102\\102\",[1614]=\"\\83\\121\\110\\100\\114\\97\",[1615]=\"\\79\\110\\84\\105\\99\\107\",[1616]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1617]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1618]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1619]=\"\\79\\110\\65\\110\\105\\109\\97\\116\\105\\111\\110\",[1620]=\"\\79\\110\\82\\101\\99\\118\\80\\97\\99\\107\\101\\116\",[1621]=\"\\79\\110\\87\\110\\100\\77\\115\\103\",[1622]=\"\\79\\110\\68\\114\\97\\119\",[1623]=\"\\79\\110\\67\\97\\115\\116\\83\\112\\101\\108\\108\",[1624]=\"\\84\\119\\105\\115\\116\\101\\100\\70\\97\\116\\101\",[1625]=\"\\79\\110\\84\\105\\99\\107\",[1626]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1627]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1628]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1629]=\"\\79\\110\\87\\110\\100\\77\\115\\103\",[1630]=\"\\79\\110\\68\\114\\97\\119\",[1631]=\"\\79\\110\\67\\97\\115\\116\\83\\112\\101\\108\\108\",[1632]=\"\\79\\110\\83\\101\\110\\100\\80\\97\\99\\107\\101\\116\",[1633]=\"\\79\\110\\65\\110\\105\\109\\97\\116\\105\\111\\110\",[1634]=\"\\79\\110\\82\\101\\109\\111\\118\\101\\66\\117\\102\\102\",[1635]=\"\\86\\105\\107\\116\\111\\114\",[1636]=\"\\79\\110\\84\\105\\99\\107\",[1637]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1638]=\"\\79\\110\\67\\97\\115\\116\\83\\112\\101\\108\\108\",[1639]=\"\\79\\110\\68\\114\\97\\119\",[1640]=\"\\79\\110\\83\\101\\110\\100\\80\\97\\99\\107\\101\\116\",[1641]=\"\\79\\110\\65\\110\\105\\109\\97\\116\\105\\111\\110\",[1642]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1643]=\"\\88\\101\\114\\97\\116\\104\",[1644]=\"\\79\\110\\84\\105\\99\\107\",[1645]=\"\\79\\110\\68\\114\\97\\119\",[1646]=\"\\79\\110\\83\\101\\110\\100\\80\\97\\99\\107\\101\\116\",[1647]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1648]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1649]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1650]=\"\\79\\110\\87\\110\\100\\77\\115\\103\",[1651]=\"\\69\\122\\114\\101\\97\\108\",[1652]=\"\\79\\110\\84\\105\\99\\107\",[1653]=\"\\67\\104\\111\\103\\97\\116\\104\",[1654]=\"\\79\\110\\84\\105\\99\\107\",[1655]=\"\\75\\97\\115\\115\\97\\100\\105\\110\",[1656]=\"\\79\\110\\84\\105\\99\\107\",[1657]=\"\\75\\97\\121\\108\\101\",[1658]=\"\\79\\110\\84\\105\\99\\107\",[1659]=\"\\79\\110\\84\\105\\99\\107\",[1660]=\"\\79\\110\\80\\114\\111\\99\\101\\115\\115\\83\\112\\101\\108\\108\",[1661]=\"\\110\\97\",[1662]=\"\\101\\117\\119\",[1663]=\"\\79\\110\\67\\114\\101\\97\\116\\101\\79\\98\\106\",[1664]=\"\\79\\110\\68\\101\\108\\101\\116\\101\\79\\98\\106\",[1665]=\"\\79\\110\\68\\114\\97\\119\",[1666]=\"\\79\\110\\82\\101\\99\\118\\80\\97\\99\\107\\101\\116\",[1667]=\"\\79\\110\\83\\101\\110\\100\\80\\97\\99\\107\\101\\116\",[1668]=\"\\79\\110\\87\\110\\100\\77\\115\\103\",[1669]=\"\\79\\110\\67\\97\\115\\116\\83\\112\\101\\108\\108\",[1670]=\"\\79\\110\\65\\110\\105\\109\\97\\116\\105\\111\\110\",[1671]=\"\\79\\110\\65\\112\\112\\108\\121\\66\\117\\102\\102\",[1672]=\"\\79\\110\\82\\101\\109\\111\\118\\101\\66\\117\\102\\102\",[1673]=\"\\113\\118\\98\\113\\117\\107\\57\\119\\114\\117\\113\\61\",[1674]=\"\\118\\102\\106\\106\\113\\117\\119\\61\",[1675]=\"\\115\\102\\100\\106\\114\\97\\61\\61\",[1676]=\"\\114\\118\\104\\113\\115\\118\\106\\102\\114\\97\\61\\61\",[1677]=\"\\113\\107\\102\\111\\116\\107\\118\\101\",[1678]=\"\\69\\82\\82\\79\\82\\49\",[1679]=\"\\32\",[1680]=\"\\32\",[1681]=\"\\32\",[1682]=\"\\32\",[1683]=\"\\110\\117\\109\\98\\101\\114\",[1684]=\"\\32\",[1685]=\"\\32\",[1686]=\"\\32\",[1687]=\"\\69\\82\\82\\79\\82\\50\",[1688]=\"\\32\",[1689]=\"\\32\",[1690]=\"\\32\",[1691]=\"\\32\",[1692]=\"\\110\\117\\109\\98\\101\\114\",[1693]=\"\\32\",[1694]=\"\\32\",[1695]=\"\\32\",[1696]=\"\\88\\70\\85\\53\\75\\52\\55\\48\\82\\32\\49\\53\\32\\52\\87\\51\\53\\48\\77\\51\\46\\32\\75\\82\\51\\68\\49\\55\\32\\55\\48\\32\\88\\70\\85\\53\\75\\52\\55\\48\\82\\33\"}function DefinitelyNotEncrypted3(XcH9HvWDi_UH3RLpO,Cj8dWFqhI7f,swllq_C)local function V()swllq_C.Menu=scriptConfig(swllq_C.ScriptName..voDMHxk5iEa[1]..swllq_C.Author,swllq_C.ScriptName..voDMHxk5iEa[2])DelayAction(function()_arrangePriorities()end,voDMHxk5iEa[3])if myHero.charName==voDMHxk5iEa[4]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[5],DAMAGE_MAGIC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[6],Width=voDMHxk5iEa[7],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[9],Collision=voDMHxk5iEa[10],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw()swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[12],Width=voDMHxk5iEa[12],Delay=voDMHxk5iEa[13],Speed=voDMHxk5iEa[9],Type=SPELL_TYPE.SELF}):AddDraw()swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[5],Width=voDMHxk5iEa[14],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[15],Collision=voDMHxk5iEa[11],Aoe=voDMHxk5iEa[10],Type=SPELL_TYPE.LINEAR}):AddDraw():AddTrackTime(voDMHxk5iEa[16]):AddTrackObject(voDMHxk5iEa[17])swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[18],Delay=voDMHxk5iEa[13],Speed=voDMHxk5iEa[9],Type=SPELL_TYPE.SELF})swllq_C.Q.MinSpeed=voDMHxk5iEa[19]swllq_C.Q.Width1=swllq_C.Q.Width;swllq_C.Q.Speed1=swllq_C.Q.Speed;swllq_C.Q.Delay1=swllq_C.Q.Delay;swllq_C.Q.Range1=swllq_C.Q.Range;swllq_C.Q.MaxSpeed=voDMHxk5iEa[20]swllq_C.Q.Acceleration=-voDMHxk5iEa[21]swllq_C.Q.LastObjectVector=voDMHxk5iEa[22]swllq_C.Q.LastObjectVectorTime=voDMHxk5iEa[13]swllq_C.Q.IsReturning=voDMHxk5iEa[10]swllq_C.Q.CatchPosition=voDMHxk5iEa[22]swllq_C.Q.CatchColor=ARGB(voDMHxk5iEa[23],voDMHxk5iEa[13],voDMHxk5iEa[13],voDMHxk5iEa[23])swllq_C.Q.Target=voDMHxk5iEa[22]swllq_C.R.HaveBuff=voDMHxk5iEa[10]swllq_C.R.LastCastTime=voDMHxk5iEa[13]swllq_C.R.FirstCastTime=voDMHxk5iEa[13]swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[24],voDMHxk5iEa[25])swllq_C.Menu.General:addParam(voDMHxk5iEa[26],voDMHxk5iEa[27],SCRIPT_PARAM_SLICE,voDMHxk5iEa[28],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[30],voDMHxk5iEa[31],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[32],voDMHxk5iEa[33])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[34],voDMHxk5iEa[35],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[36],voDMHxk5iEa[37],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[38],voDMHxk5iEa[39],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[40],voDMHxk5iEa[41],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[42],voDMHxk5iEa[43],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[44],voDMHxk5iEa[45],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[46],voDMHxk5iEa[47],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[48],voDMHxk5iEa[49],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[51],voDMHxk5iEa[52])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[53],voDMHxk5iEa[54],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[55],voDMHxk5iEa[56],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[57],voDMHxk5iEa[58],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[59],voDMHxk5iEa[60],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[62],voDMHxk5iEa[63])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[64],voDMHxk5iEa[65],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[67],voDMHxk5iEa[68],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[70],voDMHxk5iEa[71],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[72],voDMHxk5iEa[73],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[75],voDMHxk5iEa[76])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[77],voDMHxk5iEa[78],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[79],voDMHxk5iEa[80],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[81],voDMHxk5iEa[82],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[83],voDMHxk5iEa[84])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[85],voDMHxk5iEa[86],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[88],voDMHxk5iEa[89],voDMHxk5iEa[90]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[91],voDMHxk5iEa[92],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[94],voDMHxk5iEa[95],voDMHxk5iEa[96]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[97],voDMHxk5iEa[98],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[99],voDMHxk5iEa[100])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[101],voDMHxk5iEa[102],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[103],voDMHxk5iEa[104],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[105],voDMHxk5iEa[106],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[107],voDMHxk5iEa[108],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[109],voDMHxk5iEa[110])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[111],voDMHxk5iEa[112])_Interrupter(swllq_C.Menu.Auto.UseE):CheckChannelingSpells():CheckGapcloserSpells():AddCallback(function(PwTx_ilDlNUZM)swllq_C.E:Cast(PwTx_ilDlNUZM)end)swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[113],voDMHxk5iEa[114])_Evader(swllq_C.Menu.Auto.UseR):CheckCC():AddCallback(function(dS7X3ju7Xzx1tvYo)swllq_C:EvadeR(dS7X3ju7Xzx1tvYo)end)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[115],voDMHxk5iEa[116])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[117],voDMHxk5iEa[118],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[119],voDMHxk5iEa[120],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[121],voDMHxk5iEa[122],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[123],voDMHxk5iEa[124])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[125],voDMHxk5iEa[126],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[127]))swllq_C.Menu.Keys:addParam(voDMHxk5iEa[128],voDMHxk5iEa[129],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[130]))swllq_C.Menu.Keys:addParam(voDMHxk5iEa[131],voDMHxk5iEa[132],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[133]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[134])swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[135])swllq_C.Menu.Keys.StartE=voDMHxk5iEa[10]swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[136]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[137],DAMAGE_PHYSICAL)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[137],Width=voDMHxk5iEa[138],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[139],Aoe=voDMHxk5iEa[10],Collision=voDMHxk5iEa[10],Type=SPELL_TYPE.LINEAR}):AddDraw():AddSourceFunction(function()if ValidTarget(swllq_C.TS.target)and(swllq_C.wShadow~=voDMHxk5iEa[22]or swllq_C.rShadow~=voDMHxk5iEa[22])then local n0Wqmo0QOBIeb6A=GetDistanceSqr(myHero,swllq_C.TS.target)if n0Wqmo0QOBIeb6A>math.pow(swllq_C.Q.Range*voDMHxk5iEa[140],voDMHxk5iEa[87])then local my1tWbnxifFZxcHqxJ_=swllq_C.wShadow~=voDMHxk5iEa[22]and GetDistanceSqr(swllq_C.wShadow,swllq_C.TS.target)or voDMHxk5iEa[141]local r_l8DsM0jp8tRn8Tkv=swllq_C.rShadow~=voDMHxk5iEa[22]and GetDistanceSqr(swllq_C.rShadow,swllq_C.TS.target)or voDMHxk5iEa[141]local sqW=math.min(n0Wqmo0QOBIeb6A,my1tWbnxifFZxcHqxJ_,r_l8DsM0jp8tRn8Tkv)if sqW==n0Wqmo0QOBIeb6A then return myHero elseif sqW==my1tWbnxifFZxcHqxJ_ then return swllq_C.wShadow elseif sqW==r_l8DsM0jp8tRn8Tkv then return swllq_C.rShadow end end;return myHero end;return myHero end)swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[142],Width=voDMHxk5iEa[143],Delay=voDMHxk5iEa[13],Speed=voDMHxk5iEa[144],Aoe=voDMHxk5iEa[11],Collision=voDMHxk5iEa[10],Type=SPELL_TYPE.LINEAR}):AddDraw()swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[145],Delay=voDMHxk5iEa[13],Speed=math.huge,Type=SPELL_TYPE.SELF}):AddDraw({Enable=voDMHxk5iEa[10]}):AddSourceFunction(function()if ValidTarget(swllq_C.TS.target)and(swllq_C.wShadow~=voDMHxk5iEa[22]or swllq_C.rShadow~=voDMHxk5iEa[22])then local Vbdk=GetDistanceSqr(myHero,swllq_C.TS.target)local wwYvJfzrVIe9sMecFq_n=swllq_C.wShadow~=voDMHxk5iEa[22]and GetDistanceSqr(swllq_C.wShadow,swllq_C.TS.target)or voDMHxk5iEa[141]local A6jdVbrWB09nYc=swllq_C.rShadow~=voDMHxk5iEa[22]and GetDistanceSqr(swllq_C.rShadow,swllq_C.TS.target)or voDMHxk5iEa[141]local RriUk9TLNiEk83NP=math.min(Vbdk,wwYvJfzrVIe9sMecFq_n,A6jdVbrWB09nYc)if RriUk9TLNiEk83NP==Vbdk then return myHero elseif RriUk9TLNiEk83NP==wwYvJfzrVIe9sMecFq_n then return swllq_C.wShadow elseif RriUk9TLNiEk83NP==A6jdVbrWB09nYc then return swllq_C.rShadow end end;return myHero end)swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[146],Type=SPELL_TYPE.TARGETTED}):AddDraw()swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[147],voDMHxk5iEa[148])swllq_C.Menu.General:addParam(voDMHxk5iEa[149],voDMHxk5iEa[150],SCRIPT_PARAM_SLICE,voDMHxk5iEa[151],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[152],voDMHxk5iEa[153],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[154],voDMHxk5iEa[155])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[156],voDMHxk5iEa[157],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[158],voDMHxk5iEa[159],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[160],voDMHxk5iEa[161],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[162],voDMHxk5iEa[163],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[164],voDMHxk5iEa[165],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[166],voDMHxk5iEa[167],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[168],voDMHxk5iEa[169],voDMHxk5iEa[170]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[171],voDMHxk5iEa[172],SCRIPT_PARAM_SLICE,voDMHxk5iEa[28],voDMHxk5iEa[13],voDMHxk5iEa[29])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[173],voDMHxk5iEa[174],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[175],voDMHxk5iEa[176],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[177],voDMHxk5iEa[178],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[179],voDMHxk5iEa[180],voDMHxk5iEa[181]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[182],voDMHxk5iEa[183],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[184],voDMHxk5iEa[185],voDMHxk5iEa[186]})swllq_C.Menu.Combo:permaShow(voDMHxk5iEa[187])if#GetEnemyHeroes()>voDMHxk5iEa[13]then swllq_C.Menu.Combo:addSubMenu(voDMHxk5iEa[188],voDMHxk5iEa[189])for ecFfids,vdzcqby4ZkyLdbs in ipairs(GetEnemyHeroes())do swllq_C.Menu.Combo.DontR:addParam(vdzcqby4ZkyLdbs.charName,vdzcqby4ZkyLdbs.charName,SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])end end;swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[190],voDMHxk5iEa[191])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[192],voDMHxk5iEa[193],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[194],voDMHxk5iEa[195])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[196],voDMHxk5iEa[197],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[198],voDMHxk5iEa[199],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[200],voDMHxk5iEa[201],SCRIPT_PARAM_SLICE,voDMHxk5iEa[87],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[202],voDMHxk5iEa[203],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[204],voDMHxk5iEa[205])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[206],voDMHxk5iEa[207],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[208],voDMHxk5iEa[209],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[210],voDMHxk5iEa[211],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[212],voDMHxk5iEa[213])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[214],voDMHxk5iEa[215],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[216],voDMHxk5iEa[217],voDMHxk5iEa[218]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[219],voDMHxk5iEa[220],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[221],voDMHxk5iEa[222],voDMHxk5iEa[223]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[224],voDMHxk5iEa[225],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[226],voDMHxk5iEa[227])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[228],voDMHxk5iEa[229],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[230],voDMHxk5iEa[231],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[232],voDMHxk5iEa[233],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[234],voDMHxk5iEa[235],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[236],voDMHxk5iEa[237])swllq_C.Menu.Auto:addParam(voDMHxk5iEa[238],voDMHxk5iEa[239],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Auto:addParam(voDMHxk5iEa[240],voDMHxk5iEa[241],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[242],voDMHxk5iEa[243])_Evader(swllq_C.Menu.Auto.UseR):CheckCC():AddCallback(function(SKAzdZH0TrfjOVumWH)if swllq_C:IsR1()and swllq_C.Menu.Auto.UseR1 then local tWTVXd1hCh=voDMHxk5iEa[22]for JrkzSJEqHI34,j in ipairs(GetEnemyHeroes())do if swllq_C.R:ValidTarget(j)then if tWTVXd1hCh==voDMHxk5iEa[22]then tWTVXd1hCh=j elseif GetPriority(j)<GetPriority(tWTVXd1hCh)then tWTVXd1hCh=j end end end;if IsValidTarget(tWTVXd1hCh)then swllq_C:CastR(tWTVXd1hCh)end elseif not swllq_C:IsR1()and swllq_C.Menu.Auto.UseR2 then swllq_C.R:Cast()end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[244],voDMHxk5iEa[245],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Auto:addParam(voDMHxk5iEa[246],voDMHxk5iEa[247],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[248],voDMHxk5iEa[249])_Evader(swllq_C.Menu.Auto.UseW):CheckCC():AddCallback(function(F_KtMx)if swllq_C:IsW1()and swllq_C.Menu.Auto.UseW1 then if swllq_C.W:IsReady()then local wY1O6rtpbR=Vector(myHero)-Vector(Vector(F_KtMx)-Vector(myHero)):normalized()*swllq_C.W.Range;self.W:CastToVector(wY1O6rtpbR)end elseif not swllq_C:IsW1()and swllq_C.Menu.Auto.UseW2 then swllq_C.W:Cast()end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[250],voDMHxk5iEa[251],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Auto:addParam(voDMHxk5iEa[252],voDMHxk5iEa[253],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[254],voDMHxk5iEa[255])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[256],voDMHxk5iEa[257],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[258],voDMHxk5iEa[259],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])_Circle({Menu=swllq_C.Menu.Draw,Name=voDMHxk5iEa[260],Text=voDMHxk5iEa[261],Source=function()return swllq_C.wShadow end,Range=voDMHxk5iEa[29],Condition=function()return swllq_C.wShadow~=voDMHxk5iEa[22]end,Color={voDMHxk5iEa[23],voDMHxk5iEa[13],voDMHxk5iEa[13],voDMHxk5iEa[23]},Width=voDMHxk5iEa[66]})_Circle({Menu=swllq_C.Menu.Draw,Name=voDMHxk5iEa[262],Text=voDMHxk5iEa[263],Source=function()return swllq_C.rShadow end,Range=voDMHxk5iEa[29],Condition=function()return swllq_C.rShadow~=voDMHxk5iEa[22]end,Color={voDMHxk5iEa[23],voDMHxk5iEa[23],voDMHxk5iEa[264],voDMHxk5iEa[13]},Width=voDMHxk5iEa[66]})swllq_C.Menu.Draw:addParam(voDMHxk5iEa[265],voDMHxk5iEa[266],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[267],voDMHxk5iEa[268])OrbwalkManager.KeysMenu=swllq_C.Menu.Keys;OrbwalkManager:AddKey({Name=voDMHxk5iEa[269],Text=voDMHxk5iEa[270],Key=voDMHxk5iEa[271],Mode=ORBWALK_MODE.COMBO})OrbwalkManager:AddKey({Name=voDMHxk5iEa[272],Text=voDMHxk5iEa[273],Key=string.byte(voDMHxk5iEa[274]),Mode=ORBWALK_MODE.COMBO})OrbwalkManager:AddKey({Name=voDMHxk5iEa[275],Text=voDMHxk5iEa[276],Key=string.byte(voDMHxk5iEa[277]),Mode=ORBWALK_MODE.HARASS})OrbwalkManager:AddKey({Name=voDMHxk5iEa[278],Text=voDMHxk5iEa[279],Key=string.byte(voDMHxk5iEa[280]),Mode=ORBWALK_MODE.HARASS})swllq_C.Menu.Keys:addParam(voDMHxk5iEa[281],voDMHxk5iEa[282],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[283]))swllq_C.Menu.Keys.HarrassMode=voDMHxk5iEa[10]swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[284])OrbwalkManager:AddKey({Name=voDMHxk5iEa[285],Text=voDMHxk5iEa[286],Key=string.byte(voDMHxk5iEa[287]),Mode=ORBWALK_MODE.CLEAR})OrbwalkManager:AddKey({Name=voDMHxk5iEa[288],Text=voDMHxk5iEa[289],Key=string.byte(voDMHxk5iEa[290]),Mode=ORBWALK_MODE.LASTHIT})swllq_C.Menu.Keys:addParam(voDMHxk5iEa[291],voDMHxk5iEa[292],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[293]))swllq_C.Menu.Keys.Run=voDMHxk5iEa[10]swllq_C.Menu.Keys:addParam(voDMHxk5iEa[294],voDMHxk5iEa[295],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[296]))swllq_C.Menu.Keys.ComboMode=voDMHxk5iEa[10]swllq_C.Menu.Keys:addParam(voDMHxk5iEa[297],voDMHxk5iEa[298],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[11],string.byte(voDMHxk5iEa[299]))swllq_C.Menu.Keys.PreventCast=voDMHxk5iEa[11]swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[300])swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[301]then _G.OrbwalkManagerMenu:addParam(voDMHxk5iEa[302],voDMHxk5iEa[303],SCRIPT_PARAM_SLICE,voDMHxk5iEa[13],-voDMHxk5iEa[74],voDMHxk5iEa[74],voDMHxk5iEa[13])swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,swllq_C.ValidRange+swllq_C.SoldierRange+voDMHxk5iEa[29],DAMAGE_MAGIC)swllq_C.InsecTS=TargetSelector(TARGET_PRIORITY,swllq_C.ValidRange+swllq_C.SoldierRange+voDMHxk5iEa[29],DAMAGE_MAGIC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[304],Width=voDMHxk5iEa[305],Speed=voDMHxk5iEa[306],Delay=voDMHxk5iEa[13],Collision=voDMHxk5iEa[10],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw():AddDrawSourceFunction(function()return myHero end):AddSourceFunction(function()local WbDhmh37=voDMHxk5iEa[22]if#swllq_C.Soldiers>voDMHxk5iEa[13]then WbDhmh37=swllq_C:NearestSoldier(myHero)if WbDhmh37 ~=voDMHxk5iEa[22]then return WbDhmh37 end end;return myHero end):AddDamageFunction(function(qfiE5BXMvR5HPcNTG,xQ6fBa1Qir3r9d)return swllq_C:Damage(qfiE5BXMvR5HPcNTG,xQ6fBa1Qir3r9d)end)swllq_C.Q.Speed2=voDMHxk5iEa[307]swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[304],Width=swllq_C.SoldierRange,Delay=voDMHxk5iEa[8],Type=SPELL_TYPE.CIRCULAR}):AddDraw()swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[308],Width=voDMHxk5iEa[29],Speed=voDMHxk5iEa[144],Type=SPELL_TYPE.SELF}):AddDraw()swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[309],Width=voDMHxk5iEa[310],Delay=voDMHxk5iEa[13],Speed=voDMHxk5iEa[306],Type=SPELL_TYPE.LINEAR}):AddDraw():AddWidthFunction(function()local IaR2WegYB4G=swllq_C.R:GetSpellData()~=voDMHxk5iEa[22]and swllq_C.R:GetSpellData().level~=voDMHxk5iEa[22]and swllq_C.R:GetSpellData().level or voDMHxk5iEa[13]return voDMHxk5iEa[311]* (IaR2WegYB4G+voDMHxk5iEa[93])end)swllq_C.EnemyMinions=minionManager(MINION_ENEMY,swllq_C.ValidRange+swllq_C.SoldierRange+voDMHxk5iEa[29],myHero,MINION_SORT_HEALTH_ASC)swllq_C.JungleMinions=minionManager(MINION_JUNGLE,swllq_C.ValidRange+swllq_C.SoldierRange+voDMHxk5iEa[29],myHero,MINION_SORT_MAXHEALTH_DEC)swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[312],voDMHxk5iEa[313])swllq_C.Menu.General:addParam(voDMHxk5iEa[314],voDMHxk5iEa[315],SCRIPT_PARAM_SLICE,voDMHxk5iEa[28],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[316],voDMHxk5iEa[317])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[318],voDMHxk5iEa[319],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[320],voDMHxk5iEa[321],voDMHxk5iEa[322]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[323],voDMHxk5iEa[324],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[325],voDMHxk5iEa[326],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[327],voDMHxk5iEa[328],voDMHxk5iEa[329]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[330],voDMHxk5iEa[331],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[332],voDMHxk5iEa[333],SCRIPT_PARAM_SLICE,voDMHxk5iEa[28],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[334],voDMHxk5iEa[335],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[151])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[336],voDMHxk5iEa[337],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[338],voDMHxk5iEa[339],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[340],voDMHxk5iEa[341],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[66])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[342],voDMHxk5iEa[343])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[344],voDMHxk5iEa[345],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[346],voDMHxk5iEa[347],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[348],voDMHxk5iEa[349],voDMHxk5iEa[350]})swllq_C.Menu.Harass:addParam(voDMHxk5iEa[351],voDMHxk5iEa[352],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[353],voDMHxk5iEa[354],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[355],voDMHxk5iEa[356],voDMHxk5iEa[357]})swllq_C.Menu.Harass:addParam(voDMHxk5iEa[358],voDMHxk5iEa[359],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[360],voDMHxk5iEa[361],SCRIPT_PARAM_SLICE,voDMHxk5iEa[93],voDMHxk5iEa[13],voDMHxk5iEa[66])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[362],voDMHxk5iEa[363])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[364],voDMHxk5iEa[365],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[366],voDMHxk5iEa[367],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[368],voDMHxk5iEa[369],SCRIPT_PARAM_SLICE,voDMHxk5iEa[370],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[371],voDMHxk5iEa[372],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[373],voDMHxk5iEa[374],SCRIPT_PARAM_SLICE,voDMHxk5iEa[93],voDMHxk5iEa[13],voDMHxk5iEa[66])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[375],voDMHxk5iEa[376])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[377],voDMHxk5iEa[378],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[379],voDMHxk5iEa[380],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[381],voDMHxk5iEa[382],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[383],voDMHxk5iEa[384],SCRIPT_PARAM_SLICE,voDMHxk5iEa[87],voDMHxk5iEa[13],voDMHxk5iEa[66])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[385],voDMHxk5iEa[386])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[387],voDMHxk5iEa[388],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[389],voDMHxk5iEa[390],voDMHxk5iEa[391]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[392],voDMHxk5iEa[393],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[394],voDMHxk5iEa[395])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[396],voDMHxk5iEa[397],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[398],voDMHxk5iEa[399],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[400],voDMHxk5iEa[401],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[402],voDMHxk5iEa[403],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[404],voDMHxk5iEa[405],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[406],voDMHxk5iEa[407])swllq_C.Menu.Auto:addParam(voDMHxk5iEa[408],voDMHxk5iEa[409],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[410],voDMHxk5iEa[411])_Interrupter(swllq_C.Menu.Auto.UseE2):CheckChannelingSpells():CheckGapcloserSpells():AddCallback(function(UZCA7C)local YznezC6jm5K8M,m=swllq_C:BestHitE(GetEnemyHeroes())if YznezC6jm5K8M~=voDMHxk5iEa[22]and m>voDMHxk5iEa[13]and swllq_C.Menu.Auto.UseE then swllq_C:CastE(YznezC6jm5K8M)end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[412],voDMHxk5iEa[413],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[414],voDMHxk5iEa[415])_Evader(swllq_C.Menu.Auto.UseE3):CheckCC():AddCallback(function(G)if swllq_C.Menu.Auto.UseE4 then local NU_mX8UgLKkgBDBSfYul=swllq_C:NearestSoldier(myHero)if NU_mX8UgLKkgBDBSfYul~=voDMHxk5iEa[22]and swllq_C.E:IsReady()then swllq_C:CastE(NU_mX8UgLKkgBDBSfYul)end end end)swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[416],voDMHxk5iEa[417])_Interrupter(swllq_C.Menu.Auto.UseR):CheckChannelingSpells():AddCallback(function(kt9Z48XS)swllq_C:CastR(kt9Z48XS)end)swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[418],voDMHxk5iEa[419])_Interrupter(swllq_C.Menu.Auto.UseR2):CheckGapcloserSpells():AddCallback(function(mIRh6NlEE3Zhid_41)if swllq_C.Menu.Auto.UseR2HP>voDMHxk5iEa[13]and swllq_C.Menu.Auto.UseR2HP<voDMHxk5iEa[29]and swllq_C.Menu.Auto.UseR2HP<=myHero.health/myHero.maxHealth*voDMHxk5iEa[29]then swllq_C:CastR(mIRh6NlEE3Zhid_41)end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[420],voDMHxk5iEa[421],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[422],voDMHxk5iEa[423])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[424],voDMHxk5iEa[425],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[426],voDMHxk5iEa[427],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[428],voDMHxk5iEa[429],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[430],voDMHxk5iEa[431],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[432],voDMHxk5iEa[433])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[434],voDMHxk5iEa[435],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[436]))swllq_C.Menu.Keys:addParam(voDMHxk5iEa[437],voDMHxk5iEa[438],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[439]))OrbwalkManager:AddKey({Name=voDMHxk5iEa[440],Text=voDMHxk5iEa[441],Key=string.byte(voDMHxk5iEa[442]),Mode=ORBWALK_MODE.COMBO})swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[443])swllq_C.Menu.Keys.StartE=voDMHxk5iEa[10]swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[444]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[445],DAMAGE_MAGIC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[445],Width=voDMHxk5iEa[446],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[447],Collision=voDMHxk5iEa[11],Aoe=voDMHxk5iEa[10],Type=SPELL_TYPE.LINEAR}):AddDraw()swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[306],Width=voDMHxk5iEa[448],Delay=voDMHxk5iEa[13],Speed=voDMHxk5iEa[144],Collision=voDMHxk5iEa[10],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw()swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[449],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[447]}):AddDraw()swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[450],Delay=voDMHxk5iEa[93],Width=voDMHxk5iEa[451],Speed=voDMHxk5iEa[447],Collision=voDMHxk5iEa[10],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw()swllq_C.EnemyMinions=minionManager(MINION_ENEMY,voDMHxk5iEa[445],myHero,MINION_SORT_HEALTH_ASC)swllq_C.JungleMinions=minionManager(MINION_JUNGLE,voDMHxk5iEa[445],myHero,MINION_SORT_MAXHEALTH_DEC)swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[452],voDMHxk5iEa[453])swllq_C.Menu.General:addParam(voDMHxk5iEa[454],voDMHxk5iEa[455],SCRIPT_PARAM_SLICE,voDMHxk5iEa[28],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[456],voDMHxk5iEa[457])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[458],voDMHxk5iEa[459],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[460],voDMHxk5iEa[461],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[462],voDMHxk5iEa[463],SCRIPT_PARAM_SLICE,math.min(#GetEnemyHeroes(),voDMHxk5iEa[66]),voDMHxk5iEa[13],voDMHxk5iEa[151],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[464],voDMHxk5iEa[465])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[466],voDMHxk5iEa[467],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[468],voDMHxk5iEa[469],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[470],voDMHxk5iEa[471],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[472],voDMHxk5iEa[473])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[474],voDMHxk5iEa[475],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[476],voDMHxk5iEa[477],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[478],voDMHxk5iEa[479])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[480],voDMHxk5iEa[481],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[482],voDMHxk5iEa[483])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[484],voDMHxk5iEa[485],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[486],voDMHxk5iEa[487],voDMHxk5iEa[488]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[489],voDMHxk5iEa[490],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[491],voDMHxk5iEa[492])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[493],voDMHxk5iEa[494],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[495],voDMHxk5iEa[496],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[497],voDMHxk5iEa[498],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[499],voDMHxk5iEa[500],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[501],voDMHxk5iEa[502],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[503],voDMHxk5iEa[504])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[505],voDMHxk5iEa[506])_Evader(swllq_C.Menu.Auto.UseE):CheckCC():AddCallback(function(MBTszpdWehCgkOcgcsEXz)swllq_C:EvadeE(MBTszpdWehCgkOcgcsEXz)end)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[507],voDMHxk5iEa[508])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[509],voDMHxk5iEa[510],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[511]))OrbwalkManager:AddKey({Name=voDMHxk5iEa[512],Text=voDMHxk5iEa[513],Key=string.byte(voDMHxk5iEa[514]),Mode=ORBWALK_MODE.COMBO})swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[515])swllq_C.Menu.Keys.AssistedUltimate=voDMHxk5iEa[10]swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[516]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[517],DAMAGE_MAGIC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[518],Width=voDMHxk5iEa[519],Delay=voDMHxk5iEa[520],Speed=math.huge,Collision=voDMHxk5iEa[10],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR,IsVeryLowAccuracy=voDMHxk5iEa[11]}):AddDraw()swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[521],Width=voDMHxk5iEa[522]*voDMHxk5iEa[87],Delay=voDMHxk5iEa[8],Speed=math.huge,Collision=voDMHxk5iEa[10],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CONE}):AddDraw()swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[523]}):AddDraw()swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[524],Delay=voDMHxk5iEa[525],Type=SPELL_TYPE.TARGETTED}):AddDraw()swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[526],voDMHxk5iEa[527])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[528],voDMHxk5iEa[529],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[530],voDMHxk5iEa[531],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[532],voDMHxk5iEa[533],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[534],voDMHxk5iEa[535])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[536],voDMHxk5iEa[537],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[538],voDMHxk5iEa[539],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[540],voDMHxk5iEa[541],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[542],voDMHxk5iEa[543])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[544],voDMHxk5iEa[545],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[546],voDMHxk5iEa[547],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[548],voDMHxk5iEa[549],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[550],voDMHxk5iEa[551])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[552],voDMHxk5iEa[553],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[554],voDMHxk5iEa[555],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[556],voDMHxk5iEa[557])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[558],voDMHxk5iEa[559],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[560],voDMHxk5iEa[561],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[562],voDMHxk5iEa[563],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[564],voDMHxk5iEa[565])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[566],voDMHxk5iEa[567],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[568],voDMHxk5iEa[569],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[570],voDMHxk5iEa[571],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[572],voDMHxk5iEa[573],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[574],voDMHxk5iEa[575])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[576],voDMHxk5iEa[577],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[578]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[579])swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[580]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[581],DAMAGE_MAGIC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[582],Width=voDMHxk5iEa[583],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[584],Aoe=voDMHxk5iEa[11],IsVeryLowAccuracy=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR}):AddDraw():AddTrackTime(voDMHxk5iEa[585]):AddTrackObject(voDMHxk5iEa[586])swllq_C.Q.Speed1=swllq_C.Q.Speed;swllq_C.Q.Width1=swllq_C.Q.Width;swllq_C.Q.Width2=voDMHxk5iEa[29]swllq_C.Q.Range1=swllq_C.Q.Range;swllq_C.Q.Delay1=swllq_C.Q.Delay;swllq_C.Q.LastObjectVector=voDMHxk5iEa[22]swllq_C.Q.LastObjectVectorTime=voDMHxk5iEa[13]swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[587],Width=voDMHxk5iEa[587],Delay=voDMHxk5iEa[13],Speed=math.huge,Type=SPELL_TYPE.SELF}):AddDraw({Enable=voDMHxk5iEa[10]})swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[309],Width=voDMHxk5iEa[309],Delay=voDMHxk5iEa[8],Type=SPELL_TYPE.SELF}):AddDraw({Enable=voDMHxk5iEa[10]})swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[582],Delay=voDMHxk5iEa[13],Speed=voDMHxk5iEa[20],Type=SPELL_TYPE.TARGETTED}):AddDraw()swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu.TS:addParam(voDMHxk5iEa[588],voDMHxk5iEa[589],SCRIPT_PARAM_SLICE,voDMHxk5iEa[581],voDMHxk5iEa[523],voDMHxk5iEa[590],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[591],voDMHxk5iEa[592])swllq_C.Menu.General:addParam(voDMHxk5iEa[593],voDMHxk5iEa[594],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[595],voDMHxk5iEa[596],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[597],voDMHxk5iEa[598])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[599],voDMHxk5iEa[600],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[601],voDMHxk5iEa[602],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[603],voDMHxk5iEa[604],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[605],voDMHxk5iEa[606],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[607],voDMHxk5iEa[608],voDMHxk5iEa[609]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[610],voDMHxk5iEa[611],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[612],voDMHxk5iEa[613],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[614],voDMHxk5iEa[615],voDMHxk5iEa[616]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[617],voDMHxk5iEa[618],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[619],voDMHxk5iEa[620],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[621],voDMHxk5iEa[622])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[623],voDMHxk5iEa[624],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[625],voDMHxk5iEa[626],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[627],voDMHxk5iEa[628],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[629],voDMHxk5iEa[630],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[631],voDMHxk5iEa[632])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[633],voDMHxk5iEa[634],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[635],voDMHxk5iEa[636],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[637],voDMHxk5iEa[638],SCRIPT_PARAM_SLICE,voDMHxk5iEa[370],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[639],voDMHxk5iEa[640],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[641],voDMHxk5iEa[642],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[643],voDMHxk5iEa[644])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[645],voDMHxk5iEa[646],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[647],voDMHxk5iEa[648],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[649],voDMHxk5iEa[650],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[651],voDMHxk5iEa[652],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[653],voDMHxk5iEa[654])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[655],voDMHxk5iEa[656],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[657],voDMHxk5iEa[658],voDMHxk5iEa[659]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[660],voDMHxk5iEa[661],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[662],voDMHxk5iEa[663])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[664],voDMHxk5iEa[665],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[666],voDMHxk5iEa[667],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[668],voDMHxk5iEa[669],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[670],voDMHxk5iEa[671],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[672],voDMHxk5iEa[673],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[674],voDMHxk5iEa[675])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[676],voDMHxk5iEa[677])_Interrupter(swllq_C.Menu.Auto.E):CheckChannelingSpells():CheckGapcloserSpells():AddCallback(function(TEzxz)swllq_C.E:Cast(TEzxz)end)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[678],voDMHxk5iEa[679])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[680],voDMHxk5iEa[681],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[682],voDMHxk5iEa[683])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[684],voDMHxk5iEa[685],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[686]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[687])swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[688]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[581],DAMAGE_MAGIC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[689],Width=voDMHxk5iEa[587],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[306],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR}):AddDraw():AddTrackTime(voDMHxk5iEa[690]):AddTrackObject(voDMHxk5iEa[691])swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[18],Width=voDMHxk5iEa[451],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[310],Type=SPELL_TYPE.LINEAR}):AddDraw({Enable=voDMHxk5iEa[10]})swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[12],Width=voDMHxk5iEa[522]*voDMHxk5iEa[87],Delay=voDMHxk5iEa[8],Type=SPELL_TYPE.CONE}):AddDraw({Enable=voDMHxk5iEa[10]})swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[692],Delay=voDMHxk5iEa[693],Speed=voDMHxk5iEa[447],Width=voDMHxk5iEa[694],Collision=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw():AddDamageFunction(function(rlEh8UZdf9aIjE,gSu16)local AJ69r9sDsHmKKeGNc4R=swllq_C.IsR2 and voDMHxk5iEa[66]or voDMHxk5iEa[22]return getDmg(rlEh8UZdf9aIjE,gSu16,myHero,AJ69r9sDsHmKKeGNc4R)end):AddRangeFunction(function()if swllq_C.IsR2 then return voDMHxk5iEa[307]-swllq_C.Menu.General.Range end;return voDMHxk5iEa[692]-swllq_C.Menu.General.Range end)swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[695],voDMHxk5iEa[696])swllq_C.Menu.General:addParam(voDMHxk5iEa[697],voDMHxk5iEa[698],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[699],voDMHxk5iEa[700],SCRIPT_PARAM_SLICE,voDMHxk5iEa[448],voDMHxk5iEa[13],voDMHxk5iEa[521],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[701],voDMHxk5iEa[702],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[703],voDMHxk5iEa[704])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[705],voDMHxk5iEa[706],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[707],voDMHxk5iEa[708],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[709],voDMHxk5iEa[710],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[711],voDMHxk5iEa[712],SCRIPT_PARAM_SLICE,voDMHxk5iEa[93],voDMHxk5iEa[93],voDMHxk5iEa[713])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[714],voDMHxk5iEa[715],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[716],voDMHxk5iEa[717],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[718],voDMHxk5iEa[719],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[720],voDMHxk5iEa[721])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[722],voDMHxk5iEa[723],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[724],voDMHxk5iEa[725],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[726],voDMHxk5iEa[727],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[728],voDMHxk5iEa[729],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[93],voDMHxk5iEa[713])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[730],voDMHxk5iEa[731],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[732],voDMHxk5iEa[733])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[734],voDMHxk5iEa[735],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[736],voDMHxk5iEa[737],SCRIPT_PARAM_SLICE,voDMHxk5iEa[713],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[738],voDMHxk5iEa[739],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[740],voDMHxk5iEa[741],SCRIPT_PARAM_SLICE,voDMHxk5iEa[370],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[742],voDMHxk5iEa[743],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[93],voDMHxk5iEa[713])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[744],voDMHxk5iEa[745],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[746],voDMHxk5iEa[747])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[748],voDMHxk5iEa[749],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[750],voDMHxk5iEa[751],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[752],voDMHxk5iEa[753],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[754],voDMHxk5iEa[755],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[756],voDMHxk5iEa[757],SCRIPT_PARAM_SLICE,voDMHxk5iEa[93],voDMHxk5iEa[93],voDMHxk5iEa[713])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[758],voDMHxk5iEa[759])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[760],voDMHxk5iEa[761],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[762],voDMHxk5iEa[763],voDMHxk5iEa[764]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[765],voDMHxk5iEa[766],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[767],voDMHxk5iEa[768],voDMHxk5iEa[769]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[770],voDMHxk5iEa[771],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[93],voDMHxk5iEa[713])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[772],voDMHxk5iEa[773],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[774],voDMHxk5iEa[775])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[776],voDMHxk5iEa[777],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[778],voDMHxk5iEa[779],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[780],voDMHxk5iEa[781],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[782],voDMHxk5iEa[783],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[784],voDMHxk5iEa[785],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[786],voDMHxk5iEa[787])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[788],voDMHxk5iEa[789])_Evader(swllq_C.Menu.Auto.R):CheckCC():AddCallback(function(hAVf6o_eNcfKQ)if hAVf6o_eNcfKQ then local ytp7dH=Vector(myHero)+Vector(Vector(myHero)-Vector(hAVf6o_eNcfKQ)):normalized()*swllq_C.W.Range;if swllq_C.W:IsReady()and swllq_C.Menu.Auto.R2 then swllq_C.W:CastToVector(ytp7dH)end end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[790],voDMHxk5iEa[791],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[792],voDMHxk5iEa[793])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[794],voDMHxk5iEa[795],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[796],voDMHxk5iEa[797])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[798],voDMHxk5iEa[799],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[800]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[801])swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[802]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[581],DAMAGE_PHYSICAL)swllq_C.EnemyMinions=minionManager(MINION_ENEMY,voDMHxk5iEa[581],myHero,MINION_SORT_MAXHEALTH_DEC)swllq_C.JungleMinions=minionManager(MINION_JUNGLE,voDMHxk5iEa[581],myHero,MINION_SORT_MAXHEALTH_DEC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[449],Width=voDMHxk5iEa[803],Delay=voDMHxk5iEa[13],Speed=voDMHxk5iEa[307],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw():SetAccuracy(voDMHxk5iEa[803])swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[19],Delay=voDMHxk5iEa[13],Type=SPELL_TYPE.SELF})swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[449],Delay=voDMHxk5iEa[13],Speed=voDMHxk5iEa[144],Type=SPELL_TYPE.TARGETTED}):AddDraw()swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[20],Type=SPELL_TYPE.SELF}):AddDraw()swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu.TS:addParam(voDMHxk5iEa[804],voDMHxk5iEa[805],SCRIPT_PARAM_SLICE,voDMHxk5iEa[590],voDMHxk5iEa[806],voDMHxk5iEa[590],voDMHxk5iEa[13])swllq_C.Menu.TS:addParam(voDMHxk5iEa[807],voDMHxk5iEa[808],SCRIPT_PARAM_SLICE,voDMHxk5iEa[306],voDMHxk5iEa[806],voDMHxk5iEa[590],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[809],voDMHxk5iEa[810])swllq_C.Menu.General:addParam(voDMHxk5iEa[811],voDMHxk5iEa[812],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[813],voDMHxk5iEa[814])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[815],voDMHxk5iEa[816],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[817],voDMHxk5iEa[818],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[819],voDMHxk5iEa[820],SCRIPT_PARAM_SLICE,voDMHxk5iEa[821],voDMHxk5iEa[806],voDMHxk5iEa[449],voDMHxk5iEa[13])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[822],voDMHxk5iEa[823],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[824],voDMHxk5iEa[825],SCRIPT_PARAM_SLICE,voDMHxk5iEa[87],voDMHxk5iEa[13],voDMHxk5iEa[151])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[826],voDMHxk5iEa[827],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[828],voDMHxk5iEa[829],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[830],voDMHxk5iEa[831],voDMHxk5iEa[832]})swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[833],voDMHxk5iEa[834])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[835],voDMHxk5iEa[836],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[837],voDMHxk5iEa[838],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[839],voDMHxk5iEa[840],SCRIPT_PARAM_SLICE,voDMHxk5iEa[806],voDMHxk5iEa[13],voDMHxk5iEa[449],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[841],voDMHxk5iEa[842])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[843],voDMHxk5iEa[844],SCRIPT_PARAM_SLICE,voDMHxk5iEa[87],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[845],voDMHxk5iEa[846],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[847],voDMHxk5iEa[848],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[849],voDMHxk5iEa[850],voDMHxk5iEa[851]})swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[852],voDMHxk5iEa[853])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[854],voDMHxk5iEa[855],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[856],voDMHxk5iEa[857],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[858],voDMHxk5iEa[859])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[860],voDMHxk5iEa[861],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[862],voDMHxk5iEa[863],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[864],voDMHxk5iEa[865],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[866],voDMHxk5iEa[867],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[868],voDMHxk5iEa[869])swllq_C.Menu.Auto:addParam(voDMHxk5iEa[870],voDMHxk5iEa[871],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[151])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[872],voDMHxk5iEa[873])_Evader(swllq_C.Menu.Auto.W):CheckCC():CheckYasuoWall():AddCallback(function(Pur7c1af4eJ)if swllq_C.W:IsReady()then local R5QCxexyUQusJ0HDf=Vector(myHero)+Vector(Vector(Pur7c1af4eJ)-Vector(myHero)):normalized()*swllq_C.W.Range;swllq_C.W:CastToVector(R5QCxexyUQusJ0HDf)end end)swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[874],voDMHxk5iEa[875])_Interrupter(swllq_C.Menu.Auto.Q3):CheckChannelingSpells():CheckGapcloserSpells():AddCallback(function(qAW2Ibamw,usdTjd)if swllq_C.QState==voDMHxk5iEa[66]then swllq_C.Q:Cast(qAW2Ibamw)end end)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[876],voDMHxk5iEa[877])swllq_C.Menu.Misc:addParam(voDMHxk5iEa[878],voDMHxk5iEa[879],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[880],voDMHxk5iEa[881],voDMHxk5iEa[882]})swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[883],voDMHxk5iEa[884])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[885],voDMHxk5iEa[886],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[887],voDMHxk5iEa[888])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[889],voDMHxk5iEa[890],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[11],string.byte(voDMHxk5iEa[891]))swllq_C.Menu.Keys:addParam(voDMHxk5iEa[892],voDMHxk5iEa[893],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[11],string.byte(voDMHxk5iEa[894]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[895])swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[896])swllq_C.Menu.Keys:addParam(voDMHxk5iEa[897],voDMHxk5iEa[898],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[899]))swllq_C.Menu.Keys.Run=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[900]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[517],DAMAGE_MAGIC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[521],Width=voDMHxk5iEa[22],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[9],Type=SPELL_TYPE.TARGETTED}):AddDraw()swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[901]}):AddDraw()swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[521],Width=voDMHxk5iEa[902]*voDMHxk5iEa[87],Delay=voDMHxk5iEa[8],Speed=math.huge,Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CONE}):AddDraw()swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[523],Delay=voDMHxk5iEa[8],Width=voDMHxk5iEa[903],Speed=math.huge,Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR}):AddDraw()swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[904],voDMHxk5iEa[905])swllq_C.Menu.General:addParam(voDMHxk5iEa[906],voDMHxk5iEa[907],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[908],voDMHxk5iEa[909])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[910],voDMHxk5iEa[911],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[912],voDMHxk5iEa[913],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[914],voDMHxk5iEa[915],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[916],voDMHxk5iEa[917],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[918],voDMHxk5iEa[919])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[920],voDMHxk5iEa[921],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[922],voDMHxk5iEa[923],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[924],voDMHxk5iEa[925],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[926],voDMHxk5iEa[927],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[928],voDMHxk5iEa[929])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[930],voDMHxk5iEa[931],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[932],voDMHxk5iEa[933],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[934],voDMHxk5iEa[935],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[936],voDMHxk5iEa[937],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[938],voDMHxk5iEa[939])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[940],voDMHxk5iEa[941],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[942],voDMHxk5iEa[943],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[944],voDMHxk5iEa[945],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[946],voDMHxk5iEa[947])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[948],voDMHxk5iEa[949],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[950],voDMHxk5iEa[951],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[952],voDMHxk5iEa[953])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[954],voDMHxk5iEa[955],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[956],voDMHxk5iEa[957],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[958],voDMHxk5iEa[959],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[960],voDMHxk5iEa[961],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[962],voDMHxk5iEa[963],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[964],voDMHxk5iEa[965])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[966],voDMHxk5iEa[967],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[968],voDMHxk5iEa[969])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[970],voDMHxk5iEa[971],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[972]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[973])swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[974]then swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[18],Width=voDMHxk5iEa[583],Delay=voDMHxk5iEa[975],Speed=math.huge,Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR}):AddDraw():AddDamageFunction(function(COO_HPV7,CDjQaQSx)return swllq_C:Damage(COO_HPV7,CDjQaQSx)end)swllq_C.Q.Width1=swllq_C.Q.Width;swllq_C.Q.Width2=voDMHxk5iEa[519]swllq_C.Q.Delay2=voDMHxk5iEa[976]swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[518],Speed=voDMHxk5iEa[977],Delay=voDMHxk5iEa[13],Width=voDMHxk5iEa[978],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR}):AddDraw():AddDrawSourceFunction(function()return myHero end):AddDamageFunction(function(zulU7SB,iwHi1ld9q5Iv1iIROO)return swllq_C:Damage(zulU7SB,iwHi1ld9q5Iv1iIROO)end)swllq_C.W.Width1=swllq_C.W.Width;swllq_C.W.Width2=voDMHxk5iEa[451]swllq_C.W.Speed1=swllq_C.W.Speed;swllq_C.W.Delay1=voDMHxk5iEa[13]swllq_C.W.Speed2=voDMHxk5iEa[581]swllq_C.W.Delay2=voDMHxk5iEa[979]swllq_C.W.LastSentTime=voDMHxk5iEa[13]swllq_C.E=_Spell({Slot=_E,DamageName=voDMHxk5iEa[980],Range=voDMHxk5iEa[310],Speed=voDMHxk5iEa[20],Delay=voDMHxk5iEa[8]+voDMHxk5iEa[981],Aoe=voDMHxk5iEa[11],Width=voDMHxk5iEa[982]*voDMHxk5iEa[525],Type=SPELL_TYPE.CONE}):AddDraw():AddDamageFunction(function(hZtQ,yls7cTljymOCMnXmzekl0)return swllq_C:Damage(hZtQ,yls7cTljymOCMnXmzekl0)end):AddWidthFunction(function()local jO1NKP2Kc22enh=voDMHxk5iEa[13]if swllq_C.W:GetSpellData()and swllq_C.W:GetSpellData().level then jO1NKP2Kc22enh=swllq_C.W:GetSpellData().level end;if jO1NKP2Kc22enh==voDMHxk5iEa[151]then return voDMHxk5iEa[982]*voDMHxk5iEa[525]*voDMHxk5iEa[87]end;return voDMHxk5iEa[982]*voDMHxk5iEa[525]end)swllq_C.E.Delay2=voDMHxk5iEa[8]swllq_C.E.ExtraWidth=voDMHxk5iEa[983]swllq_C.QE=_Spell({Slot=_E,DamageName=voDMHxk5iEa[984],Range=voDMHxk5iEa[590],Speed=voDMHxk5iEa[447],Delay=voDMHxk5iEa[13],Width=voDMHxk5iEa[446],Aoe=voDMHxk5iEa[11],IsVeryLowAccuracy=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw():AddDrawSourceFunction(function()return myHero end):AddRangeFunction(function()return voDMHxk5iEa[310]+voDMHxk5iEa[146]-swllq_C.Menu.General.Range end)swllq_C.QE.Range2=voDMHxk5iEa[146]swllq_C.QE.Speed1=voDMHxk5iEa[447]swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[985],Speed=voDMHxk5iEa[581],Delay=voDMHxk5iEa[8],Type=SPELL_TYPE.TARGETTED}):AddDraw():AddRangeFunction(function()local wGWDBVkS=voDMHxk5iEa[13]if swllq_C.R:GetSpellData()and swllq_C.R:GetSpellData().level then wGWDBVkS=swllq_C.R:GetSpellData().level end;if wGWDBVkS==voDMHxk5iEa[66]then return voDMHxk5iEa[985]+voDMHxk5iEa[986]end;return voDMHxk5iEa[985]end):AddDamageFunction(function(l4PWtOxIJ,yicBmyGd7EL)local Birj4_FTu=#swllq_C.Spheres+voDMHxk5iEa[66]return swllq_C:Damage(l4PWtOxIJ,yicBmyGd7EL)*Birj4_FTu end)swllq_C.OtherMinions=minionManager(MINION_OTHER,swllq_C.W.Range+swllq_C.W.Width,myHero,MINION_SORT_MAXHEALTH_DEC)swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,swllq_C.QE.Range,DAMAGE_MAGIC)swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[987],voDMHxk5iEa[988])swllq_C.Menu.General:addParam(voDMHxk5iEa[989],voDMHxk5iEa[990],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[991],voDMHxk5iEa[992],SCRIPT_PARAM_SLICE,voDMHxk5iEa[13],voDMHxk5iEa[13],voDMHxk5iEa[521],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[993],voDMHxk5iEa[994],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])if#GetEnemyHeroes()>voDMHxk5iEa[13]then swllq_C.Menu.General:addSubMenu(voDMHxk5iEa[995],voDMHxk5iEa[996])for idfenNlR0TlxeNGsTAzVh,IYcb592wk_UJL5g28g7 in ipairs(GetEnemyHeroes())do swllq_C.Menu.General.DontR:addParam(IYcb592wk_UJL5g28g7.charName,IYcb592wk_UJL5g28g7.charName,SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])end end;swllq_C.Menu.General:addParam(voDMHxk5iEa[997],voDMHxk5iEa[998],SCRIPT_PARAM_SLICE,swllq_C.QE.Width,swllq_C.Menu.General.Developer==voDMHxk5iEa[11]and voDMHxk5iEa[13]or voDMHxk5iEa[983],voDMHxk5iEa[446])if swllq_C.Menu.General.Developer then swllq_C.Menu.General:addParam(voDMHxk5iEa[999],voDMHxk5iEa[1000],SCRIPT_PARAM_SLICE,swllq_C.E.Delay*voDMHxk5iEa[306],voDMHxk5iEa[587],voDMHxk5iEa[1001])swllq_C.Menu.General:addParam(voDMHxk5iEa[1002],voDMHxk5iEa[1003],SCRIPT_PARAM_SLICE,swllq_C.E.Speed,voDMHxk5iEa[307],voDMHxk5iEa[1004])end;swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1005],voDMHxk5iEa[1006])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1007],voDMHxk5iEa[1008],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1009],voDMHxk5iEa[1010],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1011],voDMHxk5iEa[1012],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1013],voDMHxk5iEa[1014],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1015],voDMHxk5iEa[1016],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1017],voDMHxk5iEa[1018],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1019],voDMHxk5iEa[1020],voDMHxk5iEa[1021],voDMHxk5iEa[1022]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1023],voDMHxk5iEa[1024],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1025],voDMHxk5iEa[1026],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1027],voDMHxk5iEa[1028])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1029],voDMHxk5iEa[1030],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1031],voDMHxk5iEa[1032],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1033],voDMHxk5iEa[1034],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1035],voDMHxk5iEa[1036],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1037],voDMHxk5iEa[1038],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1039],voDMHxk5iEa[1040],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1041],voDMHxk5iEa[1042],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1043],voDMHxk5iEa[1044],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1045],voDMHxk5iEa[1046])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1047],voDMHxk5iEa[1048],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1049],voDMHxk5iEa[1050],SCRIPT_PARAM_SLICE,voDMHxk5iEa[151],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1051],voDMHxk5iEa[1052],SCRIPT_PARAM_SLICE,voDMHxk5iEa[713],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1053],voDMHxk5iEa[1054],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1055],voDMHxk5iEa[1056])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1057],voDMHxk5iEa[1058],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1059],voDMHxk5iEa[1060],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1061],voDMHxk5iEa[1062],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1063],voDMHxk5iEa[1064])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1065],voDMHxk5iEa[1066],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1067],voDMHxk5iEa[1068],voDMHxk5iEa[1069]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1070],voDMHxk5iEa[1071],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[1072],voDMHxk5iEa[1073],voDMHxk5iEa[1074]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1075],voDMHxk5iEa[1076],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1077],voDMHxk5iEa[1078])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1079],voDMHxk5iEa[1080],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1081],voDMHxk5iEa[1082],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1083],voDMHxk5iEa[1084],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1085],voDMHxk5iEa[1086],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1087],voDMHxk5iEa[1088],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1089],voDMHxk5iEa[1090])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1091],voDMHxk5iEa[1092])_Interrupter(swllq_C.Menu.Auto.E):CheckChannelingSpells():AddCallback(function(eN7kYQvm)if swllq_C.Menu.Auto.E2 then swllq_C:CastE(eN7kYQvm)swllq_C:CastQE(eN7kYQvm)swllq_C:CastWE(eN7kYQvm)end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1093],voDMHxk5iEa[1094],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1095],voDMHxk5iEa[1096])_Interrupter(swllq_C.Menu.Auto.E3):CheckGapcloserSpells():AddCallback(function(Z8JrzENs4)if swllq_C.Menu.Auto.E4 then swllq_C:CastE(Z8JrzENs4)swllq_C:CastQE(Z8JrzENs4)swllq_C:CastWE(Z8JrzENs4)end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1097],voDMHxk5iEa[1098],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1099],voDMHxk5iEa[1100])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1101],voDMHxk5iEa[1102],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1103],voDMHxk5iEa[1104],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1105],voDMHxk5iEa[1106],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])_Circle({Menu=swllq_C.Menu.Draw,Name=voDMHxk5iEa[1107],Text=voDMHxk5iEa[1108],Source=function()return swllq_C.WObject end,Range=swllq_C.W.Width,Condition=function()return swllq_C.WObject~=voDMHxk5iEa[22]end,Color={voDMHxk5iEa[23],voDMHxk5iEa[13],voDMHxk5iEa[13],voDMHxk5iEa[23]},Width=voDMHxk5iEa[66]})swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1109],voDMHxk5iEa[1110])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1111],voDMHxk5iEa[1112],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1113]))swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1114],voDMHxk5iEa[1115],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1116]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[1117])swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[1118]then _G.OrbwalkManagerMenu:addParam(voDMHxk5iEa[1119],voDMHxk5iEa[1120],SCRIPT_PARAM_SLICE,voDMHxk5iEa[28],-voDMHxk5iEa[983],voDMHxk5iEa[451],voDMHxk5iEa[93])_G.OrbwalkManagerMenu:addParam(voDMHxk5iEa[1121],voDMHxk5iEa[1122],SCRIPT_PARAM_SLICE,voDMHxk5iEa[13],-voDMHxk5iEa[74],voDMHxk5iEa[74],voDMHxk5iEa[13])swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[977],Width=voDMHxk5iEa[983],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[306],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR,IsVeryLowAccuracy=voDMHxk5iEa[11]}):AddDraw()swllq_C.W=_Spell({Slot=_W,Range=myHero.range+myHero.boundingRadius+voDMHxk5iEa[1123],Speed=voDMHxk5iEa[307],Type=SPELL_TYPE.SELF}):AddDamageFunction(function(ax7oE1D,v_1VDHLnCZpPd8U7q)return swllq_C:Damage(ax7oE1D,v_1VDHLnCZpPd8U7q)end)swllq_C.E=_Spell({Slot=_E,Range=math.huge,Type=SPELL_TYPE.SELF}):AddDamageFunction(function(smu4fmhkVdwplHNwjks4M,W9A36)return swllq_C:Damage(smu4fmhkVdwplHNwjks4M,W9A36)end)swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[1124],Delay=voDMHxk5iEa[1125],Width=voDMHxk5iEa[309],Type=SPELL_TYPE.CIRCULAR}):AddDraw()swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,swllq_C.Q.Range,DAMAGE_MAGIC)swllq_C.OrbwalkTS=TargetSelector(TARGET_LESS_CAST_PRIORITY,myHero.range+myHero.boundingRadius+voDMHxk5iEa[29],DAMAGE_PHYSICAL)swllq_C.EnemyMinions=minionManager(MINION_ENEMY,myHero.range+myHero.boundingRadius+voDMHxk5iEa[29],myHero,MINION_SORT_HEALTH_ASC)swllq_C.JungleMinions=minionManager(MINION_JUNGLE,myHero.range+myHero.boundingRadius+voDMHxk5iEa[29],myHero,MINION_SORT_MAXHEALTH_DEC)swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu.TS:addParam(voDMHxk5iEa[1126],voDMHxk5iEa[1127],SCRIPT_PARAM_SLICE,voDMHxk5iEa[590],voDMHxk5iEa[310],swllq_C.Q.Range,voDMHxk5iEa[13])swllq_C.Menu.TS:addParam(voDMHxk5iEa[1128],voDMHxk5iEa[1129],SCRIPT_PARAM_SLICE,voDMHxk5iEa[590],voDMHxk5iEa[310],swllq_C.Q.Range,voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1130],voDMHxk5iEa[1131])swllq_C.Menu.General:addParam(voDMHxk5iEa[1132],voDMHxk5iEa[1133],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[1134],voDMHxk5iEa[1135],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.General:addParam(voDMHxk5iEa[1136],voDMHxk5iEa[1137],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1138],voDMHxk5iEa[1139])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1140],voDMHxk5iEa[1141],SCRIPT_PARAM_SLICE,voDMHxk5iEa[93],voDMHxk5iEa[93],voDMHxk5iEa[151])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1142],voDMHxk5iEa[1143],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1144],voDMHxk5iEa[1145],SCRIPT_PARAM_SLICE,voDMHxk5iEa[1146],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1147],voDMHxk5iEa[1148],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1149],voDMHxk5iEa[1150],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1151],voDMHxk5iEa[1152])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1153],voDMHxk5iEa[1154],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1155],voDMHxk5iEa[1156],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1157],voDMHxk5iEa[1158],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1159],voDMHxk5iEa[1160],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1161],voDMHxk5iEa[1162],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1163],voDMHxk5iEa[1164],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1165],voDMHxk5iEa[1166])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1167],voDMHxk5iEa[1168],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1169],voDMHxk5iEa[1170],SCRIPT_PARAM_SLICE,voDMHxk5iEa[983],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1171],voDMHxk5iEa[1172],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1173],voDMHxk5iEa[1174],SCRIPT_PARAM_SLICE,voDMHxk5iEa[983],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1175],voDMHxk5iEa[1176],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1177],voDMHxk5iEa[1178],SCRIPT_PARAM_SLICE,voDMHxk5iEa[983],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1179],voDMHxk5iEa[1180])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1181],voDMHxk5iEa[1182],SCRIPT_PARAM_SLICE,voDMHxk5iEa[93],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1183],voDMHxk5iEa[1184],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1185],voDMHxk5iEa[1186],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1187],voDMHxk5iEa[1188],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1189],voDMHxk5iEa[1190],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1191],voDMHxk5iEa[1192])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1193],voDMHxk5iEa[1194],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1195],voDMHxk5iEa[1196],voDMHxk5iEa[1197]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1198],voDMHxk5iEa[1199],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1200],voDMHxk5iEa[1201])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1202],voDMHxk5iEa[1203],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1204],voDMHxk5iEa[1205],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1206],voDMHxk5iEa[1207],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1208],voDMHxk5iEa[1209])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1210],voDMHxk5iEa[1211])_Interrupter(swllq_C.Menu.Auto.W):CheckChannelingSpells():AddCallback(function(GVUmAhamwCqbQ2VlIx)if swllq_C.Menu.Auto.W2 and OrbwalkManager:InRange(GVUmAhamwCqbQ2VlIx,voDMHxk5iEa[523])then swllq_C.ForceCard=swllq_C.Cards.Gold;swllq_C.Target=GVUmAhamwCqbQ2VlIx;if swllq_C.W:CanUseSpell()==voDMHxk5iEa[66]then swllq_C:Attack(GVUmAhamwCqbQ2VlIx)end end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1212],voDMHxk5iEa[1213],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1214],voDMHxk5iEa[1215])_Interrupter(swllq_C.Menu.Auto.W3):CheckGapcloserSpells():AddCallback(function(QCahxz_a4zgSo0KV)if swllq_C.Menu.Auto.W4 and OrbwalkManager:InRange(QCahxz_a4zgSo0KV,voDMHxk5iEa[523])then swllq_C.ForceCard=swllq_C.Cards.Gold;swllq_C.Target=QCahxz_a4zgSo0KV;if swllq_C.W:CanUseSpell()==voDMHxk5iEa[66]then swllq_C:Attack(QCahxz_a4zgSo0KV)end end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1216],voDMHxk5iEa[1217],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1218],voDMHxk5iEa[1219])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1220],voDMHxk5iEa[1221],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1222],voDMHxk5iEa[1223],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1224],voDMHxk5iEa[1225])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1226],voDMHxk5iEa[1227],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1228]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[1229])swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1230],voDMHxk5iEa[1231],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1232]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[1233])swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1234],voDMHxk5iEa[1235],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],voDMHxk5iEa[1236])swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1237],voDMHxk5iEa[1238],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],voDMHxk5iEa[1239])swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1240],voDMHxk5iEa[1241],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],voDMHxk5iEa[1242])swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[1243]then swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[12],Speed=voDMHxk5iEa[447],Delay=voDMHxk5iEa[8],Type=SPELL_TYPE.TARGETTED}):AddDraw()swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[310],Speed=math.huge,Delay=voDMHxk5iEa[13],Width=voDMHxk5iEa[1123],Aoe=voDMHxk5iEa[11],IsVeryLowAccuracy=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR}):AddDraw()swllq_C.W.Width1=voDMHxk5iEa[1123]swllq_C.W.Width2=voDMHxk5iEa[583]swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[1244]+voDMHxk5iEa[310],Speed=voDMHxk5iEa[1245],Delay=voDMHxk5iEa[13],Width=voDMHxk5iEa[448],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw():AddDrawSourceFunction(function()return myHero end):AddRangeFunction(function()return swllq_C.E.Range1 +swllq_C.E.Range2 -swllq_C.Menu.General.Range end)swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[310],Speed=math.huge,Delay=voDMHxk5iEa[8],Width=voDMHxk5iEa[1123],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR}):AddDraw():AddDamageFunction(function(OR0CNMONJt9NF0UpsxZq,t)return getDmg(OR0CNMONJt9NF0UpsxZq,t,myHero,voDMHxk5iEa[93])+voDMHxk5iEa[151]*getDmg(OR0CNMONJt9NF0UpsxZq,t,myHero,voDMHxk5iEa[87])end)swllq_C.E.LastCastAttempt=voDMHxk5iEa[13]swllq_C.E.Range1=voDMHxk5iEa[1244]swllq_C.E.Range2=voDMHxk5iEa[310]swllq_C.E.startPos=voDMHxk5iEa[22]swllq_C.E.endPos=voDMHxk5iEa[22]swllq_C.E.startCastedPos=voDMHxk5iEa[22]swllq_C.E.endCastedPos=voDMHxk5iEa[22]swllq_C.E.LastSentTime=voDMHxk5iEa[13]swllq_C.E.Sent=voDMHxk5iEa[10]swllq_C.R.Speed1=math.huge;swllq_C.R.Delay1=voDMHxk5iEa[8]swllq_C.R.Range1=voDMHxk5iEa[310]swllq_C.R.Range2=math.huge;swllq_C.R.Speed2=voDMHxk5iEa[309]swllq_C.R.Delay2=voDMHxk5iEa[13]swllq_C.R.Speed3=swllq_C.R.Speed2 *voDMHxk5iEa[520]swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,swllq_C.E.Range,DAMAGE_MAGIC)swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1246],voDMHxk5iEa[1247])swllq_C.Menu.General:addParam(voDMHxk5iEa[1248],voDMHxk5iEa[1249],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[1250],voDMHxk5iEa[1251],SCRIPT_PARAM_SLICE,voDMHxk5iEa[1252],voDMHxk5iEa[13],voDMHxk5iEa[310],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[1253],voDMHxk5iEa[1254],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.General:addParam(voDMHxk5iEa[1255],voDMHxk5iEa[1256],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1257],voDMHxk5iEa[1258])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1259],voDMHxk5iEa[1260],SCRIPT_PARAM_LIST,voDMHxk5iEa[66],{voDMHxk5iEa[1261],voDMHxk5iEa[1262],voDMHxk5iEa[1263]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1264],voDMHxk5iEa[1265],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1266],voDMHxk5iEa[1267]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1268],voDMHxk5iEa[1269],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1270],voDMHxk5iEa[1271],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[93],voDMHxk5iEa[151])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1272],voDMHxk5iEa[1273],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1274],voDMHxk5iEa[1275],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1276],voDMHxk5iEa[1277],voDMHxk5iEa[1278],voDMHxk5iEa[1279]})swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1280],voDMHxk5iEa[1281],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1282],voDMHxk5iEa[1283],SCRIPT_PARAM_SLICE,voDMHxk5iEa[66],voDMHxk5iEa[93],voDMHxk5iEa[151])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1284],voDMHxk5iEa[1285],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1286],voDMHxk5iEa[1287])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1288],voDMHxk5iEa[1289],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1290],voDMHxk5iEa[1291],voDMHxk5iEa[1292]})swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1293],voDMHxk5iEa[1294],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[1295],voDMHxk5iEa[1296]})swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1297],voDMHxk5iEa[1298],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1299],voDMHxk5iEa[1300],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1301],voDMHxk5iEa[1302],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1303],voDMHxk5iEa[1304],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1305],voDMHxk5iEa[1306])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1307],voDMHxk5iEa[1308],SCRIPT_PARAM_SLICE,voDMHxk5iEa[151],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1309],voDMHxk5iEa[1310],SCRIPT_PARAM_SLICE,voDMHxk5iEa[13],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1311],voDMHxk5iEa[1312],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1313],voDMHxk5iEa[1314],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1315],voDMHxk5iEa[1316])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1317],voDMHxk5iEa[1318],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1319],voDMHxk5iEa[1320],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1321],voDMHxk5iEa[1322],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1323],voDMHxk5iEa[1324])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1325],voDMHxk5iEa[1326],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1327],voDMHxk5iEa[1328],voDMHxk5iEa[1329]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1330],voDMHxk5iEa[1331],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1332],voDMHxk5iEa[1333],voDMHxk5iEa[1334]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1335],voDMHxk5iEa[1336],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1337],voDMHxk5iEa[1338])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1339],voDMHxk5iEa[1340],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1341],voDMHxk5iEa[1342],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1343],voDMHxk5iEa[1344],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1345],voDMHxk5iEa[1346],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1347],voDMHxk5iEa[1348],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1349],voDMHxk5iEa[1350])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1351],voDMHxk5iEa[1352])_Interrupter(swllq_C.Menu.Auto.W):CheckChannelingSpells():AddCallback(function(Jfymgb)if swllq_C.Menu.Auto.W2 then if swllq_C.W:IsReady()then swllq_C.W:CastToVector(Jfymgb)end end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1353],voDMHxk5iEa[1354],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1355],voDMHxk5iEa[1356])_Interrupter(swllq_C.Menu.Auto.W3):CheckGapcloserSpells():AddCallback(function(PsGnWhDPWrg01298q)if swllq_C.Menu.Auto.W3 then if swllq_C.W:IsReady()then swllq_C:CastW(PsGnWhDPWrg01298q)end end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1357],voDMHxk5iEa[1358],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1359],voDMHxk5iEa[1360])_Interrupter(swllq_C.Menu.Auto.R):CheckChannelingSpells():AddCallback(function(pzYJxMoM4BRso2B)if swllq_C.Menu.Auto.R2 then if swllq_C.R:IsReady()then swllq_C.R:CastToVector(pzYJxMoM4BRso2B)end end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1361],voDMHxk5iEa[1362],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1363],voDMHxk5iEa[1364])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1365],voDMHxk5iEa[1366],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1367],voDMHxk5iEa[1368],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1369],voDMHxk5iEa[1370])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1371],voDMHxk5iEa[1372],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1373]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[1374])swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[1375]then swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[9],Delay=voDMHxk5iEa[976],Aoe=voDMHxk5iEa[11],Width=voDMHxk5iEa[29],Type=SPELL_TYPE.LINEAR}):AddDraw():AddRangeFunction(function()if swllq_C.Q.IsCharging then return math.min((swllq_C.Q.MaxRange-swllq_C.Q.MinRange)/swllq_C.Q.TimeToStopIncrease* (os.clock()-swllq_C.Q.LastCastTime),swllq_C.Q.MaxRange-swllq_C.Q.MinRange)+swllq_C.Q.MinRange+math.min(swllq_C.Q.Offset* (os.clock()-swllq_C.Q.LastCastTime)/swllq_C.Q.TimeToStopIncrease,swllq_C.Q.Offset)end;return swllq_C.Q.MaxRange+swllq_C.Q.Offset end)swllq_C.Q.Sent=voDMHxk5iEa[10]swllq_C.Q.Sent2=voDMHxk5iEa[13]swllq_C.Q.endCastedPos=voDMHxk5iEa[22]swllq_C.Q.endPos=voDMHxk5iEa[22]swllq_C.Q.MinRange=voDMHxk5iEa[1376]swllq_C.Q.MaxRange=voDMHxk5iEa[9]swllq_C.Q.Offset=voDMHxk5iEa[13]swllq_C.Q.IsCharging=voDMHxk5iEa[10]swllq_C.Q.TimeToStopIncrease=voDMHxk5iEa[1125]swllq_C.Q.End=voDMHxk5iEa[66]swllq_C.Q.LastCastAttempt=voDMHxk5iEa[13]swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[581],Width=voDMHxk5iEa[587],Delay=voDMHxk5iEa[1377],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR,IsVeryLowAccuracy=voDMHxk5iEa[11]}):AddDraw()swllq_C.W.Width2=voDMHxk5iEa[29]swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[1378],Width=voDMHxk5iEa[14],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[9],Collision=voDMHxk5iEa[11],Type=SPELL_TYPE.LINEAR}):AddDraw():AddTrackTime(voDMHxk5iEa[1379]):AddTrackObject(voDMHxk5iEa[1380])swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[21],Width=voDMHxk5iEa[519],Delay=voDMHxk5iEa[975],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.CIRCULAR,IsVeryLowAccuracy=voDMHxk5iEa[11]}):AddDraw():AddRangeFunction(function()return voDMHxk5iEa[447]+voDMHxk5iEa[590]*swllq_C.R:GetSpellData().level end):AddTypeFunction(function()if swllq_C.R.IsUlting then return SPELL_TYPE.CIRCULAR end;return SPELL_TYPE.SELF end)swllq_C.R.Stack=voDMHxk5iEa[66]swllq_C.R.Shoot=voDMHxk5iEa[10]swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[9],DAMAGE_MAGIC)swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1381],voDMHxk5iEa[1382])swllq_C.Menu.General:addParam(voDMHxk5iEa[1383],voDMHxk5iEa[1384],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu.General:addParam(voDMHxk5iEa[1385],voDMHxk5iEa[1386],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1387],voDMHxk5iEa[1388])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1389],voDMHxk5iEa[1390],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1391],voDMHxk5iEa[1392],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1393],voDMHxk5iEa[1394],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1395],voDMHxk5iEa[1396],SCRIPT_PARAM_SLICE,voDMHxk5iEa[50],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1397],voDMHxk5iEa[1398])swllq_C.Menu.Ultimate:addParam(voDMHxk5iEa[1399],voDMHxk5iEa[1400],SCRIPT_PARAM_ONKEYDOWN,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1401]))swllq_C.TapPos=#swllq_C.Menu.Ultimate._param;swllq_C.Menu.Ultimate:addParam(voDMHxk5iEa[1402],voDMHxk5iEa[1403],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[1404],voDMHxk5iEa[1405]})swllq_C.Menu.Ultimate:addParam(voDMHxk5iEa[1406],voDMHxk5iEa[1407],SCRIPT_PARAM_SLICE,voDMHxk5iEa[13],voDMHxk5iEa[13],voDMHxk5iEa[1125],voDMHxk5iEa[93])swllq_C.Menu.Ultimate:addSubMenu(voDMHxk5iEa[1408],voDMHxk5iEa[1409])swllq_C.Menu.Ultimate.NearMouse:addParam(voDMHxk5iEa[1410],voDMHxk5iEa[1411],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Ultimate.NearMouse:addParam(voDMHxk5iEa[1412],voDMHxk5iEa[1413],SCRIPT_PARAM_SLICE,voDMHxk5iEa[523],voDMHxk5iEa[29],voDMHxk5iEa[307])swllq_C.Menu.Ultimate.NearMouse:addParam(voDMHxk5iEa[1414],voDMHxk5iEa[1415],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1416],voDMHxk5iEa[1417])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1418],voDMHxk5iEa[1419],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1420],voDMHxk5iEa[1421],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1422],voDMHxk5iEa[1423],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1424],voDMHxk5iEa[1425],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1426],voDMHxk5iEa[1427],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1428],voDMHxk5iEa[1429])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1430],voDMHxk5iEa[1431],SCRIPT_PARAM_SLICE,voDMHxk5iEa[151],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1432],voDMHxk5iEa[1433],SCRIPT_PARAM_SLICE,voDMHxk5iEa[69],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1434],voDMHxk5iEa[1435],SCRIPT_PARAM_SLICE,voDMHxk5iEa[13],voDMHxk5iEa[13],voDMHxk5iEa[50])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1436],voDMHxk5iEa[1437],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1438],voDMHxk5iEa[1439])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1440],voDMHxk5iEa[1441],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1442],voDMHxk5iEa[1443],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1444],voDMHxk5iEa[1445],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1446],voDMHxk5iEa[1447])swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1448],voDMHxk5iEa[1449],SCRIPT_PARAM_LIST,voDMHxk5iEa[87],{voDMHxk5iEa[1450],voDMHxk5iEa[1451],voDMHxk5iEa[1452]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1453],voDMHxk5iEa[1454],SCRIPT_PARAM_LIST,voDMHxk5iEa[93],{voDMHxk5iEa[1455],voDMHxk5iEa[1456],voDMHxk5iEa[1457]})swllq_C.Menu.LastHit:addParam(voDMHxk5iEa[1458],voDMHxk5iEa[1459],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1460],voDMHxk5iEa[1461])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1462],voDMHxk5iEa[1463],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1464],voDMHxk5iEa[1465],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1466],voDMHxk5iEa[1467],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1468],voDMHxk5iEa[1469],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1470],voDMHxk5iEa[1471],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1472],voDMHxk5iEa[1473])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1474],voDMHxk5iEa[1475])_Interrupter(swllq_C.Menu.Auto.E):CheckChannelingSpells():AddCallback(function(fMq1pwXDqSRNPr)if swllq_C.Menu.Auto.E2 then swllq_C.E:Cast(fMq1pwXDqSRNPr)end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1476],voDMHxk5iEa[1477],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1478],voDMHxk5iEa[1479])_Interrupter(swllq_C.Menu.Auto.E3):CheckGapcloserSpells():AddCallback(function(RDOU7ofCeWNOlHuB55)if swllq_C.Menu.Auto.E4 then swllq_C.E:Cast(RDOU7ofCeWNOlHuB55)end end)swllq_C.Menu.Auto:addParam(voDMHxk5iEa[1480],voDMHxk5iEa[1481],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1482],voDMHxk5iEa[1483])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1484],voDMHxk5iEa[1485],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Draw:addParam(voDMHxk5iEa[1486],voDMHxk5iEa[1487],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1488],voDMHxk5iEa[1489])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1490],voDMHxk5iEa[1491],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1492]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[1493])swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1494],voDMHxk5iEa[1495],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1496]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[1497])swllq_C.Menu.Keys.StartE=voDMHxk5iEa[10]swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]elseif myHero.charName==voDMHxk5iEa[1498]then swllq_C.TS=_SimpleTargetSelector(TARGET_LESS_CAST_PRIORITY,voDMHxk5iEa[445],DAMAGE_MAGIC)swllq_C.Q=_Spell({Slot=_Q,Range=voDMHxk5iEa[521],Width=voDMHxk5iEa[22],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[447],Collision=voDMHxk5iEa[11],Aoe=voDMHxk5iEa[10],Type=SPELL_TYPE.TARGETTED}):AddDraw()swllq_C.W=_Spell({Slot=_W,Range=voDMHxk5iEa[689],Width=voDMHxk5iEa[22],Delay=voDMHxk5iEa[1499],Speed=voDMHxk5iEa[144],Collision=voDMHxk5iEa[10],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.SELF}):AddDraw()swllq_C.E=_Spell({Slot=_E,Range=voDMHxk5iEa[1244],Delay=voDMHxk5iEa[8],Speed=voDMHxk5iEa[447]}):AddDraw()swllq_C.R=_Spell({Slot=_R,Range=voDMHxk5iEa[689],Delay=voDMHxk5iEa[8],Width=voDMHxk5iEa[451],Speed=voDMHxk5iEa[447],Collision=voDMHxk5iEa[10],Aoe=voDMHxk5iEa[11],Type=SPELL_TYPE.SELF}):AddDraw()swllq_C.EnemyMinions=minionManager(MINION_ENEMY,voDMHxk5iEa[12],myHero,MINION_SORT_HEALTH_ASC)swllq_C.JungleMinions=minionManager(MINION_JUNGLE,voDMHxk5iEa[12],myHero,MINION_SORT_MAXHEALTH_DEC)swllq_C.TS:AddToMenu(swllq_C.Menu)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1500],voDMHxk5iEa[1501])swllq_C.Menu.General:addParam(voDMHxk5iEa[1502],voDMHxk5iEa[1503],SCRIPT_PARAM_SLICE,voDMHxk5iEa[28],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1504],voDMHxk5iEa[1505])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1506],voDMHxk5iEa[1507],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1508],voDMHxk5iEa[1509],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1510],voDMHxk5iEa[1511],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Combo:addParam(voDMHxk5iEa[1512],voDMHxk5iEa[1513],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[10])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1514],voDMHxk5iEa[1515])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1516],voDMHxk5iEa[1517],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1518],voDMHxk5iEa[1519],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1520],voDMHxk5iEa[1521],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.Harass:addParam(voDMHxk5iEa[1522],voDMHxk5iEa[1523],SCRIPT_PARAM_SLICE,voDMHxk5iEa[61],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1524],voDMHxk5iEa[1525])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1526],voDMHxk5iEa[1527],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1528],voDMHxk5iEa[1529],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.LaneClear:addParam(voDMHxk5iEa[1530],voDMHxk5iEa[1531],SCRIPT_PARAM_SLICE,voDMHxk5iEa[74],voDMHxk5iEa[13],voDMHxk5iEa[29],voDMHxk5iEa[13])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1532],voDMHxk5iEa[1533])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1534],voDMHxk5iEa[1535],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1536],voDMHxk5iEa[1537],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.JungleClear:addParam(voDMHxk5iEa[1538],voDMHxk5iEa[1539],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1540],voDMHxk5iEa[1541])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1542],voDMHxk5iEa[1543],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1544],voDMHxk5iEa[1545],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu.KillSteal:addParam(voDMHxk5iEa[1546],voDMHxk5iEa[1547],SCRIPT_PARAM_ONOFF,voDMHxk5iEa[11])swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1548],voDMHxk5iEa[1549])swllq_C.Menu.Auto:addSubMenu(voDMHxk5iEa[1550],voDMHxk5iEa[1551])_Evader(swllq_C.Menu.Auto.UseR):CheckCC():AddCallback(function(frFYdhJzWMDYHMGV)if swllq_C.R:IsReady()and IsValidTarget(frFYdhJzWMDYHMGV)then swllq_C.R:Cast(myHero)end end)swllq_C.Menu:addSubMenu(myHero.charName..voDMHxk5iEa[1552],voDMHxk5iEa[1553])OrbwalkManager:LoadCommonKeys(swllq_C.Menu.Keys)swllq_C.Menu.Keys:addParam(voDMHxk5iEa[1554],voDMHxk5iEa[1555],SCRIPT_PARAM_ONKEYTOGGLE,voDMHxk5iEa[10],string.byte(voDMHxk5iEa[1556]))swllq_C.Menu.Keys:permaShow(voDMHxk5iEa[1557])swllq_C.Menu.Keys.HarassToggle=voDMHxk5iEa[10]swllq_C.MenuLoaded=voDMHxk5iEa[11]end end;local function xOOODw(LQsFEYVhC20HvbQH0)local ThVggc_xQH8VkxBK7qBZ=string.gsub(LQsFEYVhC20HvbQH0,voDMHxk5iEa[1558],voDMHxk5iEa[1559])ThVggc_xQH8VkxBK7qBZ=string.gsub(ThVggc_xQH8VkxBK7qBZ,voDMHxk5iEa[1560],voDMHxk5iEa[1559])ThVggc_xQH8VkxBK7qBZ=string.gsub(ThVggc_xQH8VkxBK7qBZ,voDMHxk5iEa[1561],voDMHxk5iEa[1559])ThVggc_xQH8VkxBK7qBZ=ThVggc_xQH8VkxBK7qBZ:match\"^%s*(.-)%s*$\"local EAE97m9SmTUwqxYS,tDmvpqu7arVTvMn6ev=ThVggc_xQH8VkxBK7qBZ:find(voDMHxk5iEa[1562])if EAE97m9SmTUwqxYS then ThVggc_xQH8VkxBK7qBZ=XcH9HvWDi_UH3RLpO:sub(EAE97m9SmTUwqxYS,-voDMHxk5iEa[93])end;return ThVggc_xQH8VkxBK7qBZ end;local function k1D7n38(xxRYmP,e4jqtw)local uFSzzIq=voDMHxk5iEa[1559]for i=voDMHxk5iEa[93],#xxRYmP do uFSzzIq=uFSzzIq..string.char((e4jqtw*xxRYmP:byte(i))%voDMHxk5iEa[1563])end;return uFSzzIq end;local function QlOGG8p(Pt73K3CEchb,dj8H121KCK4gyTV)if dj8H121KCK4gyTV==voDMHxk5iEa[13]then return Pt73K3CEchb else return QlOGG8p(Base64Decode(Pt73K3CEchb),dj8H121KCK4gyTV-voDMHxk5iEa[93])end end;local function pOYBtuqVvpt5(SvNdJ)return SvNdJ and Base64Decode(SvNdJ)or voDMHxk5iEa[1559]end;local hhTcmQps9l9oaFbfveF4,eBEQxmpGzZOCB,cNr_=voDMHxk5iEa[22],voDMHxk5iEa[22],voDMHxk5iEa[22]local Z=string.sub(XcH9HvWDi_UH3RLpO,voDMHxk5iEa[13],XcH9HvWDi_UH3RLpO:len()-voDMHxk5iEa[93])local dxWsMbOjsdDTaDnucWHT=tonumber(string.sub(XcH9HvWDi_UH3RLpO,-voDMHxk5iEa[93]))if Z and dxWsMbOjsdDTaDnucWHT and type(dxWsMbOjsdDTaDnucWHT)==voDMHxk5iEa[1564]and dxWsMbOjsdDTaDnucWHT>voDMHxk5iEa[13]then for MlCU5h0pIT5XJsa67E,qHMTF6e9Aqs in ipairs(QlOGG8p(Z,dxWsMbOjsdDTaDnucWHT):split(voDMHxk5iEa[1565]))do if type(tostring(qHMTF6e9Aqs))==voDMHxk5iEa[1566]then qHMTF6e9Aqs=Base64Decode(qHMTF6e9Aqs)if MlCU5h0pIT5XJsa67E==voDMHxk5iEa[93]then hhTcmQps9l9oaFbfveF4=qHMTF6e9Aqs elseif MlCU5h0pIT5XJsa67E==voDMHxk5iEa[87]then eBEQxmpGzZOCB=qHMTF6e9Aqs elseif MlCU5h0pIT5XJsa67E==voDMHxk5iEa[66]then cNr_=qHMTF6e9Aqs end end end;local function KoF5l8iBcH9z(oK0CSj,KxMfRfCvkLmUvTy_)return oK0CSj~=voDMHxk5iEa[22]and KxMfRfCvkLmUvTy_~=voDMHxk5iEa[22]and(tostring(oK0CSj):lower():find(tostring(KxMfRfCvkLmUvTy_):lower())or tostring(KxMfRfCvkLmUvTy_):lower():find(tostring(oK0CSj):lower())or tostring(oK0CSj)==tostring(KxMfRfCvkLmUvTy_))end;if hhTcmQps9l9oaFbfveF4 ~=voDMHxk5iEa[22]and cNr_~=voDMHxk5iEa[22]and eBEQxmpGzZOCB~=voDMHxk5iEa[22]and type(tonumber(hhTcmQps9l9oaFbfveF4))==voDMHxk5iEa[1567]and KoF5l8iBcH9z(string.sub(math.abs(tonumber(hhTcmQps9l9oaFbfveF4)),voDMHxk5iEa[13],voDMHxk5iEa[50]),string.sub(math.abs(math.sqrt(voDMHxk5iEa[93]+math.pow(math.tan(Cj8dWFqhI7f),voDMHxk5iEa[87]))/math.tan(Cj8dWFqhI7f)),voDMHxk5iEa[13],voDMHxk5iEa[50]))and KoF5l8iBcH9z(eBEQxmpGzZOCB,GetUser())then local HLHka7H8F={[voDMHxk5iEa[1568]]={[voDMHxk5iEa[1569]]=voDMHxk5iEa[11],[voDMHxk5iEa[1570]]=voDMHxk5iEa[11],[voDMHxk5iEa[1571]]=voDMHxk5iEa[11],[voDMHxk5iEa[1572]]=voDMHxk5iEa[11],[voDMHxk5iEa[1573]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1574]]={[voDMHxk5iEa[1575]]=voDMHxk5iEa[11],[voDMHxk5iEa[1576]]=voDMHxk5iEa[11],[voDMHxk5iEa[1577]]=voDMHxk5iEa[11],[voDMHxk5iEa[1578]]=voDMHxk5iEa[11],[voDMHxk5iEa[1579]]=voDMHxk5iEa[11],[voDMHxk5iEa[1580]]=voDMHxk5iEa[11],[voDMHxk5iEa[1581]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1582]]={[voDMHxk5iEa[1583]]=voDMHxk5iEa[11],[voDMHxk5iEa[1584]]=voDMHxk5iEa[11],[voDMHxk5iEa[1585]]=voDMHxk5iEa[11],[voDMHxk5iEa[1586]]=voDMHxk5iEa[11],[voDMHxk5iEa[1587]]=voDMHxk5iEa[11],[voDMHxk5iEa[1588]]=voDMHxk5iEa[11],[voDMHxk5iEa[1589]]=voDMHxk5iEa[11],[voDMHxk5iEa[1590]]=voDMHxk5iEa[11],[voDMHxk5iEa[1591]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1592]]={[voDMHxk5iEa[1593]]=voDMHxk5iEa[11],[voDMHxk5iEa[1594]]=voDMHxk5iEa[11],[voDMHxk5iEa[1595]]=voDMHxk5iEa[11],[voDMHxk5iEa[1596]]=voDMHxk5iEa[11],[voDMHxk5iEa[1597]]=voDMHxk5iEa[11],[voDMHxk5iEa[1598]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1599]]={[voDMHxk5iEa[1600]]=voDMHxk5iEa[11],[voDMHxk5iEa[1601]]=voDMHxk5iEa[11],[voDMHxk5iEa[1602]]=voDMHxk5iEa[11],[voDMHxk5iEa[1603]]=voDMHxk5iEa[11],[voDMHxk5iEa[1604]]=voDMHxk5iEa[11],[voDMHxk5iEa[1605]]=voDMHxk5iEa[11],[voDMHxk5iEa[1606]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1607]]={[voDMHxk5iEa[1608]]=voDMHxk5iEa[11],[voDMHxk5iEa[1609]]=voDMHxk5iEa[11],[voDMHxk5iEa[1610]]=voDMHxk5iEa[11],[voDMHxk5iEa[1611]]=voDMHxk5iEa[11],[voDMHxk5iEa[1612]]=voDMHxk5iEa[11],[voDMHxk5iEa[1613]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1614]]={[voDMHxk5iEa[1615]]=voDMHxk5iEa[11],[voDMHxk5iEa[1616]]=voDMHxk5iEa[11],[voDMHxk5iEa[1617]]=voDMHxk5iEa[11],[voDMHxk5iEa[1618]]=voDMHxk5iEa[11],[voDMHxk5iEa[1619]]=voDMHxk5iEa[11],[voDMHxk5iEa[1620]]=voDMHxk5iEa[11],[voDMHxk5iEa[1621]]=voDMHxk5iEa[11],[voDMHxk5iEa[1622]]=voDMHxk5iEa[11],[voDMHxk5iEa[1623]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1624]]={[voDMHxk5iEa[1625]]=voDMHxk5iEa[11],[voDMHxk5iEa[1626]]=voDMHxk5iEa[11],[voDMHxk5iEa[1627]]=voDMHxk5iEa[11],[voDMHxk5iEa[1628]]=voDMHxk5iEa[11],[voDMHxk5iEa[1629]]=voDMHxk5iEa[11],[voDMHxk5iEa[1630]]=voDMHxk5iEa[11],[voDMHxk5iEa[1631]]=voDMHxk5iEa[11],[voDMHxk5iEa[1632]]=voDMHxk5iEa[11],[voDMHxk5iEa[1633]]=voDMHxk5iEa[11],[voDMHxk5iEa[1634]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1635]]={[voDMHxk5iEa[1636]]=voDMHxk5iEa[11],[voDMHxk5iEa[1637]]=voDMHxk5iEa[11],[voDMHxk5iEa[1638]]=voDMHxk5iEa[11],[voDMHxk5iEa[1639]]=voDMHxk5iEa[11],[voDMHxk5iEa[1640]]=voDMHxk5iEa[11],[voDMHxk5iEa[1641]]=voDMHxk5iEa[11],[voDMHxk5iEa[1642]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1643]]={[voDMHxk5iEa[1644]]=voDMHxk5iEa[11],[voDMHxk5iEa[1645]]=voDMHxk5iEa[11],[voDMHxk5iEa[1646]]=voDMHxk5iEa[11],[voDMHxk5iEa[1647]]=voDMHxk5iEa[11],[voDMHxk5iEa[1648]]=voDMHxk5iEa[11],[voDMHxk5iEa[1649]]=voDMHxk5iEa[11],[voDMHxk5iEa[1650]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1651]]={[voDMHxk5iEa[1652]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1653]]={[voDMHxk5iEa[1654]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1655]]={[voDMHxk5iEa[1656]]=voDMHxk5iEa[11]},[voDMHxk5iEa[1657]]={[voDMHxk5iEa[1658]]=voDMHxk5iEa[11]}}local function FM2gPkE(saAwZeJMGX4RjX,L6RmSWWwXwL8l4QMpap)if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1659]]then AddTickCallback(function()L6RmSWWwXwL8l4QMpap:OnTick()end)end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1660]]then if AddProcessSpellCallback then AddProcessSpellCallback(function(_,QqHkXZ)L6RmSWWwXwL8l4QMpap:OnProcessSpell(_,QqHkXZ)end)end;if AddProcessAttackCallback then AddProcessAttackCallback(function(SfTka4vz6FRVyQ,bWC8x58c6)L6RmSWWwXwL8l4QMpap:OnProcessSpell(SfTka4vz6FRVyQ,bWC8x58c6)end)end;if GetGameRegion():lower():find(voDMHxk5iEa[1661])or GetGameRegion():lower():find(voDMHxk5iEa[1662])then if AddProcessSpellNACallback then AddProcessSpellNACallback(function(SAmu,N)L6RmSWWwXwL8l4QMpap:OnProcessSpell(SAmu,N)end)end end end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1663]]then AddCreateObjCallback(function(PUv)L6RmSWWwXwL8l4QMpap:OnCreateObj(PUv)end)end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1664]]then AddDeleteObjCallback(function(sop5cjKJjFfhphBrkINmL)L6RmSWWwXwL8l4QMpap:OnDeleteObj(sop5cjKJjFfhphBrkINmL)end)end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1665]]then AddDrawCallback(function()L6RmSWWwXwL8l4QMpap:OnDraw()end)end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1666]]then if VIP_USER then HookPackets()AddRecvPacketCallback2(function(rmWg9Occ9cLifE)L6RmSWWwXwL8l4QMpap:OnRecvPacket(rmWg9Occ9cLifE)end)end end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1667]]then if VIP_USER then HookPackets()AddSendPacketCallback(function(ILcP8NalcAA2p9AIk9PH)L6RmSWWwXwL8l4QMpap:OnSendPacket(ILcP8NalcAA2p9AIk9PH)end)end end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1668]]then AddMsgCallback(function(mQaJcQb,C)L6RmSWWwXwL8l4QMpap:OnWndMsg(mQaJcQb,C)end)end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1669]]then AddCastSpellCallback(function(vCdyLRD3,sEd7W1Tj,a2ny2,qjuoWotB4P2SFTRWw)L6RmSWWwXwL8l4QMpap:OnCastSpell(vCdyLRD3,sEd7W1Tj,a2ny2,qjuoWotB4P2SFTRWw)end)end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1670]]then AddAnimationCallback(function(YBIowxNfkSArs6Y,AIc8tgIV_Xq)L6RmSWWwXwL8l4QMpap:OnAnimation(YBIowxNfkSArs6Y,AIc8tgIV_Xq)end)end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1671]]then AddApplyBuffCallback(function(c20EGUkd,aCeAy52wQR5In3je09KZN,PHAatKZAILyprQ)L6RmSWWwXwL8l4QMpap:OnApplyBuff(c20EGUkd,aCeAy52wQR5In3je09KZN,PHAatKZAILyprQ)end)end;if saAwZeJMGX4RjX[myHero.charName][voDMHxk5iEa[1672]]then AddRemoveBuffCallback(function(MwtBVjS,DgGD5)L6RmSWWwXwL8l4QMpap:OnRemoveBuff(MwtBVjS,DgGD5)end)end end;if KoF5l8iBcH9z(cNr_,voDMHxk5iEa[1673])then V()FM2gPkE(HLHka7H8F,swllq_C)elseif KoF5l8iBcH9z(cNr_,voDMHxk5iEa[1674])then V()FM2gPkE(HLHka7H8F,swllq_C)elseif KoF5l8iBcH9z(cNr_,voDMHxk5iEa[1675])then return pOYBtuqVvpt5(cNr_)elseif KoF5l8iBcH9z(cNr_,voDMHxk5iEa[1676])then return pOYBtuqVvpt5(cNr_)elseif KoF5l8iBcH9z(cNr_,voDMHxk5iEa[1677])then return pOYBtuqVvpt5(cNr_)else return voDMHxk5iEa[1678]..voDMHxk5iEa[1679]..tostring(hhTcmQps9l9oaFbfveF4 ~=voDMHxk5iEa[22])..voDMHxk5iEa[1680]..tostring(cNr_~=voDMHxk5iEa[22])..voDMHxk5iEa[1681]..tostring(eBEQxmpGzZOCB~=voDMHxk5iEa[22])..voDMHxk5iEa[1682]..tostring(type(tonumber(hhTcmQps9l9oaFbfveF4))==voDMHxk5iEa[1683])..voDMHxk5iEa[1684]..tostring(hhTcmQps9l9oaFbfveF4)..voDMHxk5iEa[1685]..string.sub(math.abs(math.sin(Cj8dWFqhI7f)),voDMHxk5iEa[13],voDMHxk5iEa[50])..voDMHxk5iEa[1686]..tostring(KoF5l8iBcH9z(eBEQxmpGzZOCB,GetUser()))end else return voDMHxk5iEa[1687]..voDMHxk5iEa[1688]..tostring(hhTcmQps9l9oaFbfveF4 ~=voDMHxk5iEa[22])..voDMHxk5iEa[1689]..tostring(cNr_~=voDMHxk5iEa[22])..voDMHxk5iEa[1690]..tostring(eBEQxmpGzZOCB~=voDMHxk5iEa[22])..voDMHxk5iEa[1691]..tostring(type(tonumber(hhTcmQps9l9oaFbfveF4))==voDMHxk5iEa[1692])..voDMHxk5iEa[1693]..tostring(hhTcmQps9l9oaFbfveF4)..voDMHxk5iEa[1694]..string.sub(math.abs(math.sin(Cj8dWFqhI7f)),voDMHxk5iEa[13],voDMHxk5iEa[50])..voDMHxk5iEa[1695]..tostring(KoF5l8iBcH9z(eBEQxmpGzZOCB,GetUser()))end end;return pOYBtuqVvpt5(cNr_)end")()
                    end
                    L8_8 = L0_339
                    L0_339 = L8_8
                    L0_339()
                    L0_339 = DefinitelyNotEncrypted3
                    L1_340 = L15_29
                    L0_339 = L0_339(L1_340, L2_341, L3_342)
                    if L0_339 ~= nil then
                      L1_340 = L0_339.find
                      L1_340 = L1_340(L2_341, L3_342)
                      if L1_340 then
                        L1_340 = PrintMessage
                        L5_344 = "."
                        L1_340(L2_341, L3_342)
                        L1_340 = PrintMessage
                        L5_344 = L10_24.Author
                        L6_345 = " Loaded, Have Fun :)!"
                        L1_340(L2_341, L3_342)
                        return
                      end
                      L1_340 = L0_339.find
                      L1_340 = L1_340(L2_341, L3_342)
                      if L1_340 then
                        L1_340 = PrintMessage
                        L5_344 = "."
                        L1_340(L2_341, L3_342)
                        L1_340 = PrintMessage
                        L5_344 = L10_24.Author
                        L6_345 = " Loaded, Have Fun :)!"
                        L1_340(L2_341, L3_342)
                        return
                      end
                      L1_340 = L0_339.find
                      L1_340 = L1_340(L2_341, L3_342)
                      if L1_340 then
                        L1_340 = PrintMessage
                        L5_344 = "."
                        L1_340(L2_341, L3_342)
                        return
                      end
                      L1_340 = L0_339.find
                      L1_340 = L1_340(L2_341, L3_342)
                      if L1_340 then
                        L1_340 = PrintMessage
                        L5_344 = "."
                        L1_340(L2_341, L3_342)
                        return
                      end
                      L1_340 = L0_339.find
                      L1_340 = L1_340(L2_341, L3_342)
                      if L1_340 then
                        L1_340 = PrintMessage
                        L5_344 = "."
                        L1_340(L2_341, L3_342)
                        return
                      end
                    end
                    L1_340 = PrintMessage
                    L5_344 = "."
                    L1_340(L2_341, L3_342)
                    L1_340 = string
                    L1_340 = L1_340.len
                    L1_340 = L1_340(L2_341)
                    if L1_340 < 50 then
                      L1_340 = PrintMessage
                      L1_340(L2_341, L3_342)
                    else
                      L1_340 = PrintMessage
                      L1_340(L2_341, L3_342)
                    end
                    return
                  end
                end
              end
            end
          end
        end
      end)
    end
  end
  L12_12(L13_13)
  L12_12 = {}
  L13_13 = 0.4
  function GetBestCombo(A0_348, A1_349)
    local L2_350, L3_351, L4_352, L5_353, L6_354, L7_355, L8_356
    L2_350 = 0
    L2_350 = _ENV[L2_350]
    if not L2_350 then
      return
    end
    L2_350 = L2_350 * L2_350
    L2_350 = IsValidTarget
    L3_351 = A0_348
    L2_350 = L2_350(L3_351)
    if not L2_350 then
      L2_350 = false
      L3_351 = false
      L4_352 = false
      L5_353 = false
      L6_354 = 0
      return L2_350, L3_351, L4_352, L5_353, L6_354
    end
    L2_350 = {L3_351}
    L3_351 = false
    L3_351 = {L4_352}
    L4_352 = false
    L4_352 = {L5_353}
    L5_353 = false
    L5_353 = {L6_354}
    L6_354 = false
    L6_354 = A0_348.networkID
    L6_354 = L12_12[L6_354]
    if L6_354 ~= nil then
      L7_355 = L6_354[6]
      L8_356 = os
      L8_356 = L8_356.clock
      L8_356 = L8_356()
      L8_356 = L8_356 - L7_355
      if L8_356 <= L13_13 then
        L8_356 = L6_354[1]
        return L8_356, L6_354[2], L6_354[3], L6_354[4], L6_354[5]
      end
      L8_356 = A1_349.Q
      L8_356 = L8_356.IsReady
      L8_356 = L8_356(L8_356)
      if L8_356 then
        L8_356 = {false, true}
        L2_350 = L8_356
      end
      L8_356 = A1_349.W
      L8_356 = L8_356.IsReady
      L8_356 = L8_356(L8_356)
      if L8_356 then
        L8_356 = {false, true}
        L3_351 = L8_356
      end
      L8_356 = A1_349.E
      L8_356 = L8_356.IsReady
      L8_356 = L8_356(L8_356)
      if L8_356 then
        L8_356 = {false, true}
        L4_352 = L8_356
      end
      L8_356 = A1_349.R
      L8_356 = L8_356.IsReady
      L8_356 = L8_356(L8_356)
      if L8_356 then
        L8_356 = {false, true}
        L5_353 = L8_356
      end
      L8_356 = 0
      for _FORV_12_ = 1, #L2_350 do
        for _FORV_16_ = 1, #L3_351 do
          for _FORV_20_ = 1, #L4_352 do
            for _FORV_24_ = 1, #L5_353 do
              if A1_349:GetComboDamage(A0_348, L2_350[_FORV_12_], L3_351[_FORV_16_], L4_352[_FORV_20_], L5_353[_FORV_24_]) <= myHero.mana then
                if L8_356 >= A0_348.health then
                  if L8_356 > A1_349:GetComboDamage(A0_348, L2_350[_FORV_12_], L3_351[_FORV_16_], L4_352[_FORV_20_], L5_353[_FORV_24_]) then
                    L8_356 = A1_349:GetComboDamage(A0_348, L2_350[_FORV_12_], L3_351[_FORV_16_], L4_352[_FORV_20_], L5_353[_FORV_24_])
                    best = {
                      L2_350[_FORV_12_],
                      L3_351[_FORV_16_],
                      L4_352[_FORV_20_],
                      L5_353[_FORV_24_]
                    }
                  end
                elseif A1_349:GetComboDamage(A0_348, L2_350[_FORV_12_], L3_351[_FORV_16_], L4_352[_FORV_20_], L5_353[_FORV_24_]) > L8_356 then
                  L8_356 = A1_349:GetComboDamage(A0_348, L2_350[_FORV_12_], L3_351[_FORV_16_], L4_352[_FORV_20_], L5_353[_FORV_24_])
                  best = {
                    L2_350[_FORV_12_],
                    L3_351[_FORV_16_],
                    L4_352[_FORV_20_],
                    L5_353[_FORV_24_]
                  }
                end
              end
            end
          end
        end
      end
      L6_354[1] = _FOR_[1]
      L6_354[2] = best[2]
      L6_354[3] = best[3]
      L6_354[4] = best[4]
      L6_354[5] = L8_356
      L6_354[6] = os.clock()
      return L6_354[1], L6_354[2], L6_354[3], L6_354[4], L6_354[5]
    end
    L8_356 = A1_349
    L7_355 = A1_349.GetComboDamage
    L8_356 = L7_355(L8_356, A0_348, A1_349.Q:IsReady(), A1_349.W:IsReady(), A1_349.E:IsReady(), A1_349.R:IsReady())
    L12_12[A0_348.networkID] = {
      false,
      false,
      false,
      false,
      L7_355,
      os.clock() - L13_13 * 2
    }
    return GetBestCombo(A0_348, A1_349)
  end
  function ObjectsInArea(A0_357, A1_358, A2_359)
    local L3_360, L4_361, L5_362, L6_363, L7_364, L8_365, L9_366
    L3_360 = 0
    L3_360 = _ENV[L3_360]
    if not L3_360 then
      return
    end
    L3_360 = L3_360 * L3_360
    L3_360 = {}
    L4_361 = A2_359 ~= nil and A2_359 or myHero
    for L8_365, L9_366 in L5_362(L6_363) do
      if ValidTarget(L9_366) and GetDistanceSqr(L4_361, L9_366) <= A1_358 * A1_358 then
        table.insert(L3_360, L9_366)
      end
    end
    return L3_360
  end
  function Collides(A0_367)
    local L1_368
    L1_368 = 0
    L1_368 = _ENV[L1_368]
    if not L1_368 then
      return
    end
    L1_368 = L1_368 * L1_368
    L1_368 = IsWall
    return L1_368(D3DXVECTOR3(A0_367.x, A0_367.y, A0_367.z))
  end
  function UseItems(A0_369)
    if not _ENV[0] then
      return
    end
    for _FORV_4_, _FORV_5_ in pairs(L5_5) do
      _FORV_5_:Cast(A0_369)
    end
  end
  function PercentageMana(A0_370)
    local L1_371, L2_372, L4_373, L5_374, L6_375, L7_376, L8_377, L9_378, L10_379, L11_380, L12_381, L13_382, L14_383, L15_384, L16_385, L17_386, L18_387, L19_388, L20_389, L21_390, L22_391, L23_392, L24_393, L25_394, L26_395, L27_396, L28_397, L29_398, L30_399, L31_400, L32_401, L33_402, L34_403, L35_404, L36_405, L37_406, L38_407, L39_408, L40_409, L41_410, L42_411, L43_412, L44_413, L45_414, L46_415, L47_416, L48_417, L49_418, L50_419, L51_420, L52_421, L53_422, L54_423, L55_424, L56_425, L57_426, L58_427, L59_428, L60_429, L61_430, L62_431, L63_432, L64_433, L65_434, L66_435, L67_436, L68_437, L69_438, L70_439, L71_440, L72_441, L73_442, L74_443, L75_444, L76_445, L77_446, L78_447, L79_448, L80_449, L81_450, L82_451, L83_452, L84_453, L85_454, L86_455, L87_456, L88_457, L89_458, L90_459, L91_460, L92_461, L93_462, L94_463, L95_464, L96_465, L97_466, L98_467, L99_468, L100_469, L101_470, L102_471, L103_472, L104_473, L105_474, L106_475, L107_476, L108_477, L109_478, L110_479, L111_480, L112_481, L113_482, L114_483, L115_484, L116_485, L117_486, L118_487, L119_488, L120_489, L121_490, L122_491, L123_492, L124_493, L125_494, L126_495, L127_496, L128_497, L129_498, L130_499, L131_500, L132_501, L133_502, L134_503, L135_504, L136_505, L137_506, L138_507, L139_508, L140_509, L141_510, L142_511, L143_512, L144_513, L145_514, L146_515, L147_516, L148_517, L149_518, L150_519, L151_520, L152_521, L153_522, L154_523, L155_524, L156_525, L157_526, L158_527, L159_528, L160_529, L161_530, L162_531, L163_532, L164_533, L165_534, L166_535, L167_536, L168_537, L169_538, L170_539, L171_540, L172_541, L173_542, L174_543, L175_544, L176_545, L177_546, L178_547, L179_548, L180_549, L181_550, L182_551, L183_552, L184_553, L185_554, L186_555, L187_556, L188_557, L189_558, L190_559, L191_560, L192_561, L193_562, L194_563, L195_564, L196_565, L197_566, L198_567, L199_568, L200_569, L201_570, L202_571, L203_572, L204_573, L205_574, L206_575, L207_576, L208_577, L209_578, L210_579, L211_580, L212_581, L213_582, L214_583, L215_584, L216_585, L217_586, L218_587, L219_588, L220_589, L221_590, L222_591, L223_592, L224_593, L225_594, L226_595, L227_596, L228_597, L229_598, L230_599, L231_600, L232_601, L233_602, L234_603, L235_604, L236_605, L237_606, L238_607, L239_608, L240_609, L241_610, L242_611, L243_612, L244_613, L245_614, L246_615, L247_616, L248_617, L249_618, L250_619, L251_620, L252_621, L253_622, L254_623
    L1_371 = 0
    L1_371 = _ENV[L1_371]
    if not L1_371 then
      return
    end
    L1_371 = L1_371 * L1_371
    L1_371 = A0_370 ~= nil and A0_370 or myHero
    if L1_371 then
      L2_372 = L1_371.mana
      L4_373 = L1_371.maxMana
      L2_372 = L2_372 / L4_373
      L2_372 = L2_372 * 100
    else
      L2_372 = L2_372 or 0
    end
    return L2_372
  end
  function PercentageHealth(A0_624)
    local L1_625, L2_626, L4_627, L5_628, L6_629, L7_630, L8_631, L9_632, L10_633, L11_634, L12_635, L13_636, L14_637, L15_638, L16_639, L17_640, L18_641, L19_642, L20_643, L21_644, L22_645, L23_646, L24_647, L25_648, L26_649, L27_650, L28_651, L29_652, L30_653, L31_654, L32_655, L33_656, L34_657, L35_658, L36_659, L37_660, L38_661, L39_662, L40_663, L41_664, L42_665, L43_666, L44_667, L45_668, L46_669, L47_670, L48_671, L49_672, L50_673, L51_674, L52_675, L53_676, L54_677, L55_678, L56_679, L57_680, L58_681, L59_682, L60_683, L61_684, L62_685, L63_686, L64_687, L65_688, L66_689, L67_690, L68_691, L69_692, L70_693, L71_694, L72_695, L73_696, L74_697, L75_698, L76_699, L77_700, L78_701, L79_702, L80_703, L81_704, L82_705, L83_706, L84_707, L85_708, L86_709, L87_710, L88_711, L89_712, L90_713, L91_714, L92_715, L93_716, L94_717, L95_718, L96_719, L97_720, L98_721, L99_722, L100_723, L101_724, L102_725, L103_726, L104_727, L105_728, L106_729, L107_730, L108_731, L109_732, L110_733, L111_734, L112_735, L113_736, L114_737, L115_738, L116_739, L117_740, L118_741, L119_742, L120_743, L121_744, L122_745, L123_746, L124_747, L125_748, L126_749, L127_750, L128_751, L129_752, L130_753, L131_754, L132_755, L133_756, L134_757, L135_758, L136_759, L137_760, L138_761, L139_762, L140_763, L141_764, L142_765, L143_766, L144_767, L145_768, L146_769, L147_770, L148_771, L149_772, L150_773, L151_774, L152_775, L153_776, L154_777, L155_778, L156_779, L157_780, L158_781, L159_782, L160_783, L161_784, L162_785, L163_786, L164_787, L165_788, L166_789, L167_790, L168_791, L169_792, L170_793, L171_794, L172_795, L173_796, L174_797, L175_798, L176_799, L177_800, L178_801, L179_802, L180_803, L181_804, L182_805, L183_806, L184_807, L185_808, L186_809, L187_810, L188_811, L189_812, L190_813, L191_814, L192_815, L193_816, L194_817, L195_818, L196_819, L197_820, L198_821, L199_822, L200_823, L201_824, L202_825, L203_826, L204_827, L205_828, L206_829, L207_830, L208_831, L209_832, L210_833, L211_834, L212_835, L213_836, L214_837, L215_838, L216_839, L217_840, L218_841, L219_842, L220_843, L221_844, L222_845, L223_846, L224_847, L225_848, L226_849, L227_850, L228_851, L229_852, L230_853, L231_854, L232_855, L233_856, L234_857, L235_858, L236_859, L237_860, L238_861, L239_862, L240_863, L241_864, L242_865, L243_866, L244_867, L245_868, L246_869, L247_870, L248_871, L249_872, L250_873, L251_874, L252_875, L253_876, L254_877
    L1_625 = 0
    L1_625 = _ENV[L1_625]
    if not L1_625 then
      return
    end
    L1_625 = L1_625 * L1_625
    L1_625 = A0_624 ~= nil and A0_624 or myHero
    if L1_625 then
      L2_626 = L1_625.health
      L4_627 = L1_625.maxHealth
      L2_626 = L2_626 / L4_627
      L2_626 = L2_626 * 100
    else
      L2_626 = L2_626 or 0
    end
    return L2_626
  end
  function UnderTurret(A0_878, A1_879)
    local L2_880, L3_881, L4_882, L5_883, L6_884, L7_885
    L2_880 = 0
    L2_880 = _ENV[L2_880]
    if not L2_880 then
      return
    end
    L2_880 = L2_880 * L2_880
    L2_880 = A1_879 ~= nil and A1_879 or 0
    if A0_878 ~= nil then
      if L3_881 then
        L7_885 = L4_882()
        for L6_884, L7_885 in L3_881(L4_882, L5_883, L6_884, L7_885, L4_882()) do
          if L7_885 ~= nil and GetDistanceSqr(myHero, L7_885) < 4000000 and L7_885.team ~= myHero.team and GetDistanceSqr(A0_878, L7_885) < (L7_885.range + L2_880) * (L7_885.range + L2_880) then
            return true
          end
        end
      end
    end
    return L3_881
  end
  function Latency()
    if not _ENV[0] then
      return
    end
    return GetLatency() / 2000
  end
  class("__Xerath")
  function __Xerath.__init(A0_886)
    local L1_887
    L1_887 = 0
    L1_887 = _ENV[L1_887]
    if not L1_887 then
      return
    end
    L1_887 = L1_887 * L1_887
    A0_886.ScriptName = "Majestic Xerath"
    A0_886.Author = "Da Vinci"
    A0_886.MenuLoaded = false
    A0_886.Menu = nil
    A0_886.TS = nil
    L1_887 = {}
    L1_887.Updated = false
    L1_887.Sent = false
    L1_887.Analysis = {}
    L1_887.Cast1 = {Header = nil, vTable = nil}
    L1_887.Cast2 = {
      Header = nil,
      vTable = nil,
      Size = nil,
      Template = {Ready = false},
      Pos = nil
    }
    A0_886.Packets = L1_887
    L1_887 = {}
    L1_887["5.15"] = {
      Updated = false,
      Analysis = {},
      State = {
        Pos = 6,
        Charging = 29,
        Casting = 235
      },
      Cast1 = {Header = 228, vTable = 14567308},
      Cast2 = {
        ["Header"] = 193,
        ["vTable"] = 15188888,
        ["Size"] = 29,
        ["Template"] = {Ready = false},
        ["Pos"] = 13,
        [0] = 159,
        [1] = 143,
        [2] = 151,
        [3] = 135,
        [4] = 155,
        [5] = 139,
        [6] = 147,
        [7] = 131,
        [8] = 157,
        [9] = 141,
        [10] = 149,
        [11] = 133,
        [12] = 153,
        [13] = 137,
        [14] = 145,
        [15] = 129,
        [16] = 158,
        [17] = 142,
        [18] = 150,
        [19] = 134,
        [20] = 154,
        [21] = 138,
        [22] = 146,
        [23] = 130,
        [24] = 156,
        [25] = 140,
        [26] = 148,
        [27] = 132,
        [28] = 152,
        [29] = 136,
        [30] = 144,
        [31] = 128,
        [32] = 31,
        [33] = 15,
        [34] = 23,
        [35] = 7,
        [36] = 27,
        [37] = 11,
        [38] = 19,
        [39] = 3,
        [40] = 29,
        [41] = 13,
        [42] = 21,
        [43] = 5,
        [44] = 25,
        [45] = 9,
        [46] = 17,
        [47] = 1,
        [48] = 30,
        [49] = 14,
        [50] = 22,
        [51] = 6,
        [52] = 26,
        [53] = 10,
        [54] = 18,
        [55] = 2,
        [56] = 28,
        [57] = 12,
        [58] = 20,
        [59] = 4,
        [60] = 24,
        [61] = 8,
        [62] = 16,
        [63] = 0,
        [64] = 239,
        [65] = 247,
        [66] = 231,
        [67] = 251,
        [68] = 235,
        [69] = 243,
        [70] = 227,
        [71] = 253,
        [72] = 237,
        [73] = 245,
        [74] = 229,
        [75] = 249,
        [76] = 233,
        [77] = 241,
        [78] = 225,
        [79] = 254,
        [80] = 238,
        [81] = 246,
        [82] = 230,
        [83] = 250,
        [84] = 234,
        [85] = 242,
        [86] = 226,
        [87] = 252,
        [88] = 236,
        [89] = 244,
        [90] = 228,
        [91] = 248,
        [92] = 232,
        [93] = 240,
        [94] = 224,
        [95] = 127,
        [96] = 111,
        [97] = 119,
        [98] = 103,
        [99] = 123,
        [100] = 107,
        [101] = 115,
        [102] = 99,
        [103] = 125,
        [104] = 109,
        [105] = 117,
        [106] = 101,
        [107] = 121,
        [108] = 105,
        [109] = 113,
        [110] = 97,
        [111] = 126,
        [112] = 110,
        [113] = 118,
        [114] = 102,
        [115] = 122,
        [116] = 106,
        [117] = 114,
        [118] = 98,
        [119] = 124,
        [120] = 108,
        [121] = 116,
        [122] = 100,
        [123] = 120,
        [124] = 104,
        [125] = 112,
        [126] = 96,
        [127] = 255,
        [128] = 175,
        [129] = 183,
        [130] = 167,
        [131] = 187,
        [132] = 171,
        [133] = 179,
        [134] = 163,
        [135] = 189,
        [136] = 173,
        [137] = 181,
        [138] = 165,
        [139] = 185,
        [140] = 169,
        [141] = 177,
        [142] = 161,
        [143] = 190,
        [144] = 174,
        [145] = 182,
        [146] = 166,
        [147] = 186,
        [148] = 170,
        [149] = 178,
        [150] = 162,
        [151] = 188,
        [152] = 172,
        [153] = 180,
        [154] = 164,
        [155] = 184,
        [156] = 168,
        [157] = 176,
        [158] = 160,
        [159] = 63,
        [160] = 47,
        [161] = 55,
        [162] = 39,
        [163] = 59,
        [164] = 43,
        [165] = 51,
        [166] = 35,
        [167] = 61,
        [168] = 45,
        [169] = 53,
        [170] = 37,
        [171] = 57,
        [172] = 41,
        [173] = 49,
        [174] = 33,
        [175] = 62,
        [176] = 46,
        [177] = 54,
        [178] = 38,
        [179] = 58,
        [180] = 42,
        [181] = 50,
        [182] = 34,
        [183] = 60,
        [184] = 44,
        [185] = 52,
        [186] = 36,
        [187] = 56,
        [188] = 40,
        [189] = 48,
        [190] = 32,
        [191] = 191,
        [192] = 207,
        [193] = 215,
        [194] = 199,
        [195] = 219,
        [196] = 203,
        [197] = 211,
        [198] = 195,
        [199] = 221,
        [200] = 205,
        [201] = 213,
        [202] = 197,
        [203] = 217,
        [204] = 201,
        [205] = 209,
        [206] = 193,
        [207] = 222,
        [208] = 206,
        [209] = 214,
        [210] = 198,
        [211] = 218,
        [212] = 202,
        [213] = 210,
        [214] = 194,
        [215] = 220,
        [216] = 204,
        [217] = 212,
        [218] = 196,
        [219] = 216,
        [220] = 200,
        [221] = 208,
        [222] = 192,
        [223] = 95,
        [224] = 79,
        [225] = 87,
        [226] = 71,
        [227] = 91,
        [228] = 75,
        [229] = 83,
        [230] = 67,
        [231] = 93,
        [232] = 77,
        [233] = 85,
        [234] = 69,
        [235] = 89,
        [236] = 73,
        [237] = 81,
        [238] = 65,
        [239] = 94,
        [240] = 78,
        [241] = 86,
        [242] = 70,
        [243] = 90,
        [244] = 74,
        [245] = 82,
        [246] = 66,
        [247] = 92,
        [248] = 76,
        [249] = 84,
        [250] = 68,
        [251] = 88,
        [252] = 72,
        [253] = 80,
        [254] = 64,
        [255] = 223
      }
    }
    L1_887["5.16"] = {
      Updated = false,
      Analysis = {},
      Cast1 = {Header = 320, vTable = 15977172},
      Cast2 = {
        ["Header"] = 308,
        ["vTable"] = 15407196,
        ["Size"] = 29,
        ["Template"] = {
          ["Ready"] = true,
          [2] = 25,
          [3] = 0,
          [4] = 0,
          [5] = 64,
          [6] = 123,
          [7] = 38,
          [8] = 18,
          [9] = 5,
          [10] = 34,
          [11] = 255,
          [12] = 181,
          [13] = 83,
          [14] = 11,
          [15] = 48,
          [16] = 137,
          [17] = 254,
          [18] = 161,
          [19] = 186,
          [20] = 231,
          [21] = 144,
          [22] = 94,
          [23] = 47,
          [24] = 21,
          [25] = 164,
          [26] = 73,
          [27] = 53,
          [28] = 204,
          [29] = 0
        },
        ["Pos"] = 12,
        [0] = 137,
        [1] = 54,
        [2] = 158,
        [3] = 164,
        [4] = 240,
        [5] = 142,
        [6] = 136,
        [7] = 23,
        [8] = 215,
        [9] = 89,
        [10] = 111,
        [11] = 96,
        [12] = 239,
        [13] = 141,
        [14] = 193,
        [15] = 16,
        [16] = 207,
        [17] = 198,
        [18] = 60,
        [19] = 52,
        [20] = 110,
        [21] = 169,
        [22] = 55,
        [23] = 151,
        [24] = 44,
        [25] = 11,
        [26] = 90,
        [27] = 21,
        [28] = 138,
        [29] = 143,
        [30] = 97,
        [31] = 178,
        [32] = 61,
        [33] = 3,
        [34] = 80,
        [35] = 24,
        [36] = 22,
        [37] = 77,
        [38] = 93,
        [39] = 248,
        [40] = 128,
        [41] = 106,
        [42] = 71,
        [43] = 195,
        [44] = 181,
        [45] = 33,
        [46] = 19,
        [47] = 18,
        [48] = 57,
        [49] = 117,
        [50] = 119,
        [51] = 194,
        [52] = 113,
        [53] = 134,
        [54] = 232,
        [55] = 202,
        [56] = 219,
        [57] = 103,
        [58] = 237,
        [59] = 184,
        [60] = 218,
        [61] = 175,
        [62] = 168,
        [63] = 41,
        [64] = 139,
        [65] = 235,
        [66] = 186,
        [67] = 36,
        [68] = 47,
        [69] = 2,
        [70] = 48,
        [71] = 84,
        [72] = 246,
        [73] = 85,
        [74] = 126,
        [75] = 30,
        [76] = 92,
        [77] = 161,
        [78] = 6,
        [79] = 69,
        [80] = 191,
        [81] = 32,
        [82] = 216,
        [83] = 150,
        [84] = 145,
        [85] = 130,
        [86] = 109,
        [87] = 221,
        [88] = 118,
        [89] = 254,
        [90] = 242,
        [91] = 81,
        [92] = 25,
        [93] = 162,
        [94] = 192,
        [95] = 42,
        [96] = 13,
        [97] = 152,
        [98] = 146,
        [99] = 37,
        [100] = 153,
        [101] = 231,
        [102] = 75,
        [103] = 252,
        [104] = 206,
        [105] = 46,
        [106] = 107,
        [107] = 95,
        [108] = 249,
        [109] = 64,
        [110] = 26,
        [111] = 49,
        [112] = 98,
        [113] = 177,
        [114] = 224,
        [115] = 108,
        [116] = 45,
        [117] = 43,
        [118] = 35,
        [119] = 233,
        [120] = 34,
        [121] = 132,
        [122] = 20,
        [123] = 210,
        [124] = 124,
        [125] = 14,
        [126] = 12,
        [127] = 185,
        [128] = 188,
        [129] = 205,
        [130] = 182,
        [131] = 251,
        [132] = 187,
        [133] = 147,
        [134] = 53,
        [135] = 154,
        [136] = 66,
        [137] = 105,
        [138] = 209,
        [139] = 122,
        [140] = 189,
        [141] = 201,
        [142] = 213,
        [143] = 65,
        [144] = 245,
        [145] = 78,
        [146] = 190,
        [147] = 70,
        [148] = 67,
        [149] = 236,
        [150] = 222,
        [151] = 166,
        [152] = 62,
        [153] = 39,
        [154] = 212,
        [155] = 129,
        [156] = 172,
        [157] = 1,
        [158] = 144,
        [159] = 214,
        [160] = 101,
        [161] = 244,
        [162] = 99,
        [163] = 50,
        [164] = 133,
        [165] = 148,
        [166] = 226,
        [167] = 163,
        [168] = 127,
        [169] = 171,
        [170] = 40,
        [171] = 197,
        [172] = 4,
        [173] = 91,
        [174] = 63,
        [175] = 247,
        [176] = 83,
        [177] = 156,
        [178] = 253,
        [179] = 104,
        [180] = 176,
        [181] = 86,
        [182] = 10,
        [183] = 228,
        [184] = 29,
        [185] = 140,
        [186] = 203,
        [187] = 94,
        [188] = 196,
        [189] = 102,
        [190] = 9,
        [191] = 88,
        [192] = 241,
        [193] = 121,
        [194] = 116,
        [195] = 165,
        [196] = 227,
        [197] = 79,
        [198] = 5,
        [199] = 27,
        [200] = 8,
        [201] = 131,
        [202] = 115,
        [203] = 76,
        [204] = 167,
        [205] = 255,
        [206] = 230,
        [207] = 208,
        [208] = 238,
        [209] = 159,
        [210] = 225,
        [211] = 120,
        [212] = 38,
        [213] = 68,
        [214] = 72,
        [215] = 217,
        [216] = 87,
        [217] = 59,
        [218] = 28,
        [219] = 179,
        [220] = 73,
        [221] = 243,
        [222] = 125,
        [223] = 220,
        [224] = 155,
        [225] = 17,
        [226] = 223,
        [227] = 229,
        [228] = 180,
        [229] = 173,
        [230] = 31,
        [231] = 200,
        [232] = 170,
        [233] = 56,
        [234] = 0,
        [235] = 211,
        [236] = 15,
        [237] = 157,
        [238] = 123,
        [239] = 183,
        [240] = 234,
        [241] = 250,
        [242] = 74,
        [243] = 199,
        [244] = 160,
        [245] = 58,
        [246] = 7,
        [247] = 149,
        [248] = 112,
        [249] = 204,
        [250] = 100,
        [251] = 174,
        [252] = 82,
        [253] = 114,
        [254] = 51,
        [255] = 135
      }
    }
    L1_887["5.17"] = {
      Updated = false,
      Analysis = {},
      Cast1 = {Header = 41, vTable = 16399404},
      Cast2 = {
        ["Header"] = 121,
        ["vTable"] = 15186228,
        ["Size"] = 29,
        ["Template"] = {
          ["Ready"] = true,
          [2] = 5,
          [3] = 0,
          [4] = 0,
          [5] = 64,
          [6] = 147,
          [7] = 32,
          [8] = 147,
          [9] = 99,
          [10] = 240,
          [11] = 94,
          [12] = 102,
          [13] = 76,
          [14] = 78,
          [15] = 55,
          [16] = 59,
          [17] = 152,
          [18] = 242,
          [19] = 11,
          [20] = 71,
          [21] = 191,
          [22] = 150,
          [23] = 130,
          [24] = 91,
          [25] = 70,
          [26] = 195,
          [27] = 7,
          [28] = 108,
          [29] = 0
        },
        ["Pos"] = 7,
        [0] = 94,
        [1] = 171,
        [2] = 134,
        [3] = 73,
        [4] = 168,
        [5] = 150,
        [6] = 209,
        [7] = 145,
        [8] = 33,
        [9] = 79,
        [10] = 142,
        [11] = 193,
        [12] = 247,
        [13] = 252,
        [14] = 16,
        [15] = 99,
        [16] = 246,
        [17] = 161,
        [18] = 60,
        [19] = 206,
        [20] = 76,
        [21] = 218,
        [22] = 55,
        [23] = 58,
        [24] = 174,
        [25] = 184,
        [26] = 159,
        [27] = 136,
        [28] = 105,
        [29] = 0,
        [30] = 26,
        [31] = 53,
        [32] = 111,
        [33] = 108,
        [34] = 91,
        [35] = 213,
        [36] = 254,
        [37] = 198,
        [38] = 14,
        [39] = 38,
        [40] = 211,
        [41] = 7,
        [42] = 80,
        [43] = 205,
        [44] = 101,
        [45] = 37,
        [46] = 151,
        [47] = 102,
        [48] = 180,
        [49] = 98,
        [50] = 32,
        [51] = 95,
        [52] = 115,
        [53] = 127,
        [54] = 162,
        [55] = 93,
        [56] = 163,
        [57] = 132,
        [58] = 227,
        [59] = 135,
        [60] = 39,
        [61] = 231,
        [62] = 29,
        [63] = 164,
        [64] = 107,
        [65] = 21,
        [66] = 215,
        [67] = 51,
        [68] = 240,
        [69] = 242,
        [70] = 120,
        [71] = 190,
        [72] = 118,
        [73] = 210,
        [74] = 131,
        [75] = 8,
        [76] = 100,
        [77] = 49,
        [78] = 185,
        [79] = 251,
        [80] = 23,
        [81] = 192,
        [82] = 84,
        [83] = 27,
        [84] = 96,
        [85] = 117,
        [86] = 194,
        [87] = 110,
        [88] = 216,
        [89] = 146,
        [90] = 212,
        [91] = 25,
        [92] = 187,
        [93] = 221,
        [94] = 217,
        [95] = 20,
        [96] = 179,
        [97] = 207,
        [98] = 230,
        [99] = 74,
        [100] = 18,
        [101] = 241,
        [102] = 208,
        [103] = 234,
        [104] = 114,
        [105] = 133,
        [106] = 47,
        [107] = 43,
        [108] = 22,
        [109] = 122,
        [110] = 66,
        [111] = 45,
        [112] = 138,
        [113] = 148,
        [114] = 244,
        [115] = 253,
        [116] = 83,
        [117] = 12,
        [118] = 106,
        [119] = 197,
        [120] = 186,
        [121] = 125,
        [122] = 160,
        [123] = 228,
        [124] = 112,
        [125] = 113,
        [126] = 172,
        [127] = 34,
        [128] = 229,
        [129] = 245,
        [130] = 119,
        [131] = 189,
        [132] = 44,
        [133] = 35,
        [134] = 88,
        [135] = 36,
        [136] = 250,
        [137] = 46,
        [138] = 104,
        [139] = 144,
        [140] = 220,
        [141] = 97,
        [142] = 59,
        [143] = 223,
        [144] = 4,
        [145] = 75,
        [146] = 81,
        [147] = 152,
        [148] = 219,
        [149] = 236,
        [150] = 178,
        [151] = 67,
        [152] = 24,
        [153] = 71,
        [154] = 214,
        [155] = 238,
        [156] = 130,
        [157] = 140,
        [158] = 121,
        [159] = 56,
        [160] = 48,
        [161] = 175,
        [162] = 222,
        [163] = 10,
        [164] = 124,
        [165] = 143,
        [166] = 248,
        [167] = 103,
        [168] = 30,
        [169] = 139,
        [170] = 202,
        [171] = 28,
        [172] = 249,
        [173] = 109,
        [174] = 181,
        [175] = 200,
        [176] = 188,
        [177] = 137,
        [178] = 70,
        [179] = 90,
        [180] = 147,
        [181] = 154,
        [182] = 173,
        [183] = 2,
        [184] = 155,
        [185] = 40,
        [186] = 17,
        [187] = 9,
        [188] = 50,
        [189] = 72,
        [190] = 153,
        [191] = 123,
        [192] = 166,
        [193] = 243,
        [194] = 78,
        [195] = 237,
        [196] = 239,
        [197] = 224,
        [198] = 65,
        [199] = 201,
        [200] = 13,
        [201] = 41,
        [202] = 255,
        [203] = 68,
        [204] = 128,
        [205] = 86,
        [206] = 52,
        [207] = 156,
        [208] = 232,
        [209] = 182,
        [210] = 225,
        [211] = 57,
        [212] = 199,
        [213] = 89,
        [214] = 5,
        [215] = 62,
        [216] = 157,
        [217] = 85,
        [218] = 235,
        [219] = 177,
        [220] = 3,
        [221] = 77,
        [222] = 233,
        [223] = 1,
        [224] = 226,
        [225] = 15,
        [226] = 87,
        [227] = 54,
        [228] = 196,
        [229] = 203,
        [230] = 129,
        [231] = 64,
        [232] = 42,
        [233] = 149,
        [234] = 6,
        [235] = 61,
        [236] = 141,
        [237] = 167,
        [238] = 165,
        [239] = 195,
        [240] = 126,
        [241] = 92,
        [242] = 116,
        [243] = 183,
        [244] = 170,
        [245] = 19,
        [246] = 204,
        [247] = 31,
        [248] = 11,
        [249] = 63,
        [250] = 169,
        [251] = 191,
        [252] = 82,
        [253] = 176,
        [254] = 69,
        [255] = 158
      }
    }
    L1_887["5.18"] = {
      Updated = false,
      Analysis = {},
      Cast1 = {Header = 192, vTable = 14909492},
      Cast2 = {
        ["Header"] = 324,
        ["vTable"] = 15260228,
        ["Size"] = 29,
        ["Template"] = {
          ["Ready"] = true,
          [2] = 25,
          [3] = 0,
          [4] = 0,
          [5] = 64,
          [6] = 216,
          [7] = 30,
          [8] = 191,
          [9] = 128,
          [10] = 95,
          [11] = 5,
          [12] = 70,
          [13] = 34,
          [14] = 250,
          [15] = 114,
          [16] = 200,
          [17] = 128,
          [18] = 241,
          [19] = 127,
          [20] = 99,
          [21] = 52,
          [22] = 5,
          [23] = 121,
          [24] = 37,
          [25] = 209,
          [26] = 252,
          [27] = 6,
          [28] = 148,
          [29] = 0
        },
        ["Pos"] = 6,
        [0] = 87,
        [1] = 1,
        [2] = 221,
        [3] = 7,
        [4] = 144,
        [5] = 121,
        [6] = 198,
        [7] = 119,
        [8] = 100,
        [9] = 217,
        [10] = 169,
        [11] = 207,
        [12] = 115,
        [13] = 123,
        [14] = 188,
        [15] = 254,
        [16] = 84,
        [17] = 152,
        [18] = 104,
        [19] = 227,
        [20] = 172,
        [21] = 181,
        [22] = 16,
        [23] = 45,
        [24] = 245,
        [25] = 141,
        [26] = 184,
        [27] = 126,
        [28] = 208,
        [29] = 19,
        [30] = 25,
        [31] = 211,
        [32] = 95,
        [33] = 199,
        [34] = 49,
        [35] = 230,
        [36] = 43,
        [37] = 222,
        [38] = 14,
        [39] = 101,
        [40] = 213,
        [41] = 24,
        [42] = 158,
        [43] = 187,
        [44] = 97,
        [45] = 74,
        [46] = 36,
        [47] = 131,
        [48] = 247,
        [49] = 50,
        [50] = 223,
        [51] = 61,
        [52] = 224,
        [53] = 243,
        [54] = 156,
        [55] = 93,
        [56] = 212,
        [57] = 168,
        [58] = 53,
        [59] = 90,
        [60] = 250,
        [61] = 133,
        [62] = 109,
        [63] = 236,
        [64] = 129,
        [65] = 182,
        [66] = 34,
        [67] = 91,
        [68] = 128,
        [69] = 13,
        [70] = 112,
        [71] = 173,
        [72] = 107,
        [73] = 153,
        [74] = 41,
        [75] = 113,
        [76] = 248,
        [77] = 10,
        [78] = 154,
        [79] = 147,
        [80] = 183,
        [81] = 193,
        [82] = 229,
        [83] = 85,
        [84] = 67,
        [85] = 69,
        [86] = 206,
        [87] = 189,
        [88] = 210,
        [89] = 99,
        [90] = 88,
        [91] = 68,
        [92] = 225,
        [93] = 11,
        [94] = 31,
        [95] = 215,
        [96] = 118,
        [97] = 228,
        [98] = 2,
        [99] = 130,
        [100] = 216,
        [101] = 234,
        [102] = 200,
        [103] = 159,
        [104] = 195,
        [105] = 96,
        [106] = 240,
        [107] = 238,
        [108] = 72,
        [109] = 252,
        [110] = 28,
        [111] = 226,
        [112] = 37,
        [113] = 32,
        [114] = 47,
        [115] = 42,
        [116] = 89,
        [117] = 231,
        [118] = 98,
        [119] = 75,
        [120] = 66,
        [121] = 237,
        [122] = 102,
        [123] = 20,
        [124] = 38,
        [125] = 27,
        [126] = 22,
        [127] = 5,
        [128] = 108,
        [129] = 18,
        [130] = 46,
        [131] = 15,
        [132] = 39,
        [133] = 246,
        [134] = 56,
        [135] = 142,
        [136] = 192,
        [137] = 146,
        [138] = 17,
        [139] = 132,
        [140] = 203,
        [141] = 114,
        [142] = 196,
        [143] = 149,
        [144] = 78,
        [145] = 244,
        [146] = 9,
        [147] = 26,
        [148] = 179,
        [149] = 242,
        [150] = 178,
        [151] = 117,
        [152] = 111,
        [153] = 171,
        [154] = 33,
        [155] = 3,
        [156] = 103,
        [157] = 116,
        [158] = 180,
        [159] = 255,
        [160] = 249,
        [161] = 137,
        [162] = 58,
        [163] = 139,
        [164] = 71,
        [165] = 51,
        [166] = 174,
        [167] = 219,
        [168] = 185,
        [169] = 120,
        [170] = 110,
        [171] = 21,
        [172] = 148,
        [173] = 81,
        [174] = 48,
        [175] = 161,
        [176] = 83,
        [177] = 65,
        [178] = 197,
        [179] = 134,
        [180] = 194,
        [181] = 55,
        [182] = 135,
        [183] = 80,
        [184] = 205,
        [185] = 157,
        [186] = 214,
        [187] = 202,
        [188] = 94,
        [189] = 191,
        [190] = 77,
        [191] = 70,
        [192] = 52,
        [193] = 124,
        [194] = 57,
        [195] = 190,
        [196] = 44,
        [197] = 232,
        [198] = 23,
        [199] = 163,
        [200] = 4,
        [201] = 151,
        [202] = 209,
        [203] = 143,
        [204] = 86,
        [205] = 62,
        [206] = 125,
        [207] = 155,
        [208] = 167,
        [209] = 220,
        [210] = 150,
        [211] = 176,
        [212] = 40,
        [213] = 160,
        [214] = 73,
        [215] = 106,
        [216] = 218,
        [217] = 138,
        [218] = 162,
        [219] = 253,
        [220] = 29,
        [221] = 54,
        [222] = 251,
        [223] = 136,
        [224] = 82,
        [225] = 145,
        [226] = 92,
        [227] = 35,
        [228] = 60,
        [229] = 127,
        [230] = 165,
        [231] = 0,
        [232] = 175,
        [233] = 170,
        [234] = 239,
        [235] = 12,
        [236] = 79,
        [237] = 204,
        [238] = 186,
        [239] = 140,
        [240] = 122,
        [241] = 59,
        [242] = 63,
        [243] = 164,
        [244] = 166,
        [245] = 233,
        [246] = 8,
        [247] = 177,
        [248] = 241,
        [249] = 235,
        [250] = 76,
        [251] = 201,
        [252] = 105,
        [253] = 6,
        [254] = 30,
        [255] = 64
      }
    }
    A0_886.Versions = L1_887
    L1_887 = A0_886.Versions
    L1_887 = L1_887[string.sub(GetGameVersion(), 0, 4)]
    if L1_887 ~= nil then
      L1_887 = A0_886.Versions
      L1_887 = L1_887[string.sub(GetGameVersion(), 0, 4)]
      A0_886.Packets = L1_887
    end
    L1_887 = "StartTime"
    A0_886[L1_887] = os.clock()
  end
  function __Xerath.OnTick(A0_888)
    local L1_889, L2_890, L3_891, L4_892, L5_893, L6_894
    L1_889 = 0
    L1_889 = _ENV[L1_889]
    if not L1_889 then
      return
    end
    L1_889 = L1_889 * L1_889
    L1_889 = myHero
    L1_889 = L1_889.dead
    if not L1_889 then
      L1_889 = A0_888.Menu
      if L1_889 ~= nil then
        L1_889 = A0_888.MenuLoaded
      end
    elseif not L1_889 then
      return
    end
    L1_889 = A0_888.Q
    L1_889 = L1_889.Range
    if not L2_890 then
      L1_889 = L2_890.Range
    end
    L2_890.range = L1_889
    if L2_890 then
      L2_890(L3_891)
    else
      L2_890(L3_891)
    end
    if not L2_890 then
    else
      if L2_890 then
        L2_890(L3_891)
    end
    else
      L2_890(L3_891)
    end
    if L2_890 then
      if L2_890 ~= nil then
      elseif L2_890 > L3_891 then
        if L2_890 ~= 1 then
        elseif L2_890 then
          if L3_891 then
            L6_894 = A0_888.Menu
            L6_894 = L6_894.Ultimate
            L6_894 = L6_894.NearMouse
            L6_894 = L6_894.Radius
          else
            L6_894 = A0_888.R
            L6_894 = L6_894.Range
          end
          L3_891(L4_892, L5_893)
        end
        if L2_890 then
          L6_894 = L3_891()
          for L5_893, L6_894 in L2_890(L3_891, L4_892, L5_893, L6_894, L3_891()) do
            if A0_888.R:Damage(L6_894) * A0_888.R.Stack > L6_894.health then
              A0_888.R:Cast(L6_894)
            end
          end
        end
      end
      return
    end
    L2_890(L3_891)
    if L2_890 then
      L2_890(L3_891)
    elseif L2_890 then
      L2_890(L3_891)
    elseif L2_890 then
      L2_890(L3_891)
    elseif L2_890 then
      L2_890(L3_891)
    end
    if not L2_890 then
      if L2_890 > 5 then
        if not L2_890 then
          if L2_890 then
            if not L2_890 then
              if L2_890 > 0.2 then
                L2_890.Sent = true
                L2_890(L3_891, L4_892)
                L2_890.Sent = false
              end
            end
          end
        else
          for L6_894 = 0, 255 do
          end
          if L2_890 == 0 then
            if L3_891 then
              L3_891.Updated = true
            end
          end
        end
      end
    end
  end
  function __Xerath.KillSteal(A0_895)
    local L1_896, L2_897, L3_898, L4_899, L5_900
    if not L1_896 then
      return
    end
    L5_900 = L2_897()
    for L4_899, L5_900 in L1_896(L2_897, L3_898, L4_899, L5_900, L2_897()) do
      if IsValidTarget(L5_900) and L5_900.health > 0 and PercentageHealth(L5_900) <= 35 then
        if GetBestCombo(L5_900, A0_895) >= L5_900.health then
          if A0_895.Menu.KillSteal.Q and (GetBestCombo(L5_900, A0_895) or A0_895.Q:Damage(L5_900) > L5_900.health) then
            A0_895:CastQ(L5_900)
          end
          if A0_895.Menu.KillSteal.W and (GetBestCombo(L5_900, A0_895) or A0_895.W:Damage(L5_900) > L5_900.health) then
            A0_895.W:Cast(L5_900)
          end
          if A0_895.Menu.KillSteal.E and (GetBestCombo(L5_900, A0_895) or A0_895.E:Damage(L5_900) > L5_900.health) then
            A0_895.E:Cast(L5_900)
          end
          if A0_895.Menu.KillSteal.R and A0_895.R:Damage(L5_900) * A0_895.R.Stack > L5_900.health and A0_895.R.IsUlting then
            A0_895.R:Cast(L5_900)
          end
        end
        if A0_895.Menu.KillSteal.Ignite and A3_3:IsReady() and A3_3:Damage(L5_900) > L5_900.health then
          A3_3:Cast(L5_900)
        end
      end
    end
  end
  function __Xerath.Combo(A0_901)
    local L1_902
    L1_902 = 0
    L1_902 = _ENV[L1_902]
    if not L1_902 then
      return
    end
    L1_902 = L1_902 * L1_902
    L1_902 = A0_901.TS
    L1_902 = L1_902.target
    if IsValidTarget(L1_902) then
      if A0_901.Menu.Combo.Zhonyas > 0 and PercentageHealth() <= A0_901.Menu.Combo.Zhonyas and L6_6.Zhonyas:IsReady() then
        L6_6.Zhonyas:Cast()
      end
      if A0_901.Menu.Combo.E then
        A0_901.E:Cast(L1_902)
      end
      if os.clock() - A0_901.E.LastCastTime < A0_901.E.Delay + 0.05 or A0_901.E.Object ~= nil and GetDistanceSqr(myHero, A0_901.E.Object) <= GetDistanceSqr(myHero, L1_902) then
        return
      end
      if A0_901.Menu.Keys.StartE and A0_901.E:IsReady() then
        return
      end
      if A0_901.Menu.Combo.W then
        A0_901.W:Cast(L1_902, {
          Width = A0_901.W.Width2
        })
      end
      if A0_901.Menu.Combo.Q then
        A0_901:CastQ(L1_902)
      end
    end
  end
  function __Xerath.Harass(A0_903)
    local L1_904
    L1_904 = 0
    L1_904 = _ENV[L1_904]
    if not L1_904 then
      return
    end
    L1_904 = L1_904 * L1_904
    L1_904 = A0_903.TS
    L1_904 = L1_904.target
    if PercentageMana() >= A0_903.Menu.Harass.Mana and IsValidTarget(L1_904) then
      if A0_903.Menu.Harass.E then
        A0_903.E:Cast(L1_904)
      end
      if os.clock() - A0_903.E.LastCastTime < A0_903.E.Delay + 0.05 or A0_903.E.Object ~= nil and GetDistanceSqr(myHero, A0_903.E.Object) <= GetDistanceSqr(myHero, L1_904) then
        return
      end
      if A0_903.Menu.Keys.StartE and A0_903.E:IsReady() then
        return
      end
      if A0_903.Menu.Harass.W then
        A0_903.W:Cast(L1_904, {
          Width = A0_903.W.Width2
        })
      end
      if A0_903.Menu.Harass.Q then
        A0_903:CastQ(L1_904)
      end
    end
    if A0_903.Q.IsCharging and A0_903.Menu.Harass.Q then
      A0_903:CastQ(L1_904)
    end
  end
  function __Xerath.Clear(A0_905)
    if not _ENV[0] then
      return
    end
    if OrbwalkManager:GetClearMode() ~= nil then
      if OrbwalkManager:GetClearMode():find("lane") then
        if PercentageMana() >= A0_905.Menu.LaneClear.Mana then
          A0_905:CastQ(A0_905.Q:LaneClear({
            NumberOfHits = A0_905.Menu.LaneClear.Q,
            UseCast = false
          }))
          A0_905.W:LaneClear({
            NumberOfHits = A0_905.Menu.LaneClear.W
          })
          A0_905.E.EnemyMinions:update()
          if #A0_905.E.EnemyMinions.objects >= A0_905.Menu.LaneClear.E and A0_905.Menu.LaneClear.E > 0 then
            A0_905.E:LaneClear()
          end
          if A0_905.Menu.LastHit.W > 1 then
            A0_905.W:LastHit()
          end
          if A0_905.Menu.LastHit.E > 1 then
            A0_905.E:LastHit()
          end
        end
      else
        if A0_905.Menu.JungleClear.E then
          A0_905.E:JungleClear()
        end
        if A0_905.Menu.JungleClear.W then
          A0_905.W:JungleClear()
        end
        if A0_905.Menu.JungleClear.Q then
          A0_905:CastQ(A0_905.Q:JungleClear({UseCast = false}))
        end
      end
    end
  end
  function __Xerath.LastHit(A0_906)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_906.Menu.LastHit.Mana then
      A0_906.W:LastHit({
        Mode = A0_906.Menu.LastHit.W
      })
      A0_906.E:LastHit({
        Mode = A0_906.Menu.LastHit.E
      })
    end
  end
  function __Xerath.CastQ(A0_907, A1_908)
    local L2_909
    L2_909 = 0
    L2_909 = _ENV[L2_909]
    if not L2_909 then
      return
    end
    L2_909 = L2_909 * L2_909
    L2_909 = A0_907.Q
    L2_909 = L2_909.IsReady
    L2_909 = L2_909(L2_909)
    if L2_909 then
      L2_909 = A0_907.Q
      L2_909 = L2_909.ValidTarget
      L2_909 = L2_909(L2_909, A1_908)
      if L2_909 then
        L2_909 = A0_907.Q
        L2_909 = L2_909.IsCharging
        if not L2_909 then
          L2_909 = A0_907.Q
          L2_909 = L2_909.GetPrediction
          L2_909 = L2_909(L2_909, A1_908, {Accuracy = 35})
          if L2_909 and L2_909(L2_909, A1_908, {Accuracy = 35}) then
            A0_907.Q.LastCastAttempt = os.clock()
            A0_907.Q:CastToVector(mousePos)
          end
        else
          L2_909 = A0_907.Q
          L2_909 = L2_909.GetPrediction
          L2_909 = L2_909(L2_909, A1_908)
          if L2_909 and L2_909(L2_909, A1_908) then
            A0_907:CastSpell2(L2_909)
          elseif os.clock() - A0_907.Q.LastCastTime >= 0.9 * A0_907.Q.End then
            A0_907:CastSpell2(L2_909)
          end
        end
      end
    end
  end
  function __Xerath.FindBestTarget(A0_910, A1_911, A2_912)
    local L3_913, L4_914, L5_915, L6_916, L7_917, L8_918
    L3_913 = 0
    L3_913 = _ENV[L3_913]
    if not L3_913 then
      return
    end
    L3_913 = L3_913 * L3_913
    L3_913 = nil
    L8_918 = L5_915()
    for L7_917, L8_918 in L4_914(L5_915, L6_916, L7_917, L8_918, L5_915()) do
      if A0_910.R:ValidTarget(L8_918) and GetDistanceSqr(A1_911, L8_918) <= A2_912 * A2_912 and A0_910.R:Damage(L8_918) * (A0_910.R.Stack + 2) * A0_910:GetOverkill() >= L8_918.health then
        if L3_913 == nil then
          L3_913 = L8_918
        elseif (L8_918.health - A0_910.R:Damage(L8_918) * A0_910.R.Stack) / L8_918.maxHealth < (L3_913.health - A0_910.R:Damage(L3_913) * A0_910.R.Stack) / L3_913.maxHealth then
          L3_913 = L8_918
        end
      end
    end
    return L3_913
  end
  function __Xerath.GetComboDamage(A0_919, A1_920, A2_921, A3_922, A4_923, A5_924)
    local L6_925, L7_926
    L6_925 = 0
    L6_925 = _ENV[L6_925]
    if not L6_925 then
      return
    end
    L6_925 = L6_925 * L6_925
    L6_925 = 0
    L7_926 = 0
    if IsValidTarget(A1_920) then
      if A2_921 then
        L6_925 = L6_925 + A0_919.Q:Damage(A1_920)
        L7_926 = L7_926 + A0_919.Q:Mana()
      end
      if A3_922 then
        L6_925 = L6_925 + A0_919.Q:Damage(A1_920)
        L7_926 = L7_926 + A0_919.W:Mana()
      end
      if A4_923 then
        L6_925 = L6_925 + A0_919.E:Damage(A1_920)
        L7_926 = L7_926 + A0_919.E:Mana()
      end
      if A5_924 then
        L6_925 = L6_925 + A0_919.R:Damage(A1_920) * A0_919.R.Stack
        L7_926 = L7_926 + A0_919.R:Mana()
      end
      if A3_3:IsReady() then
        L6_925 = L6_925 + A3_3:Damage(A1_920)
      end
      L6_925 = L6_925 + getDmg("AD", A1_920, myHero)
    end
    L6_925 = L6_925 * A0_919:GetOverkill()
    return L6_925, L7_926
  end
  function __Xerath.GetOverkill(A0_927)
    local L1_928, L2_929, L3_930, L4_931, L5_932, L6_933, L7_934, L8_935, L9_936, L10_937, L11_938, L12_939, L13_940, L14_941, L15_942, L16_943, L17_944, L18_945, L19_946, L20_947, L21_948, L22_949, L23_950, L24_951, L25_952, L26_953, L27_954, L28_955, L29_956, L30_957, L31_958, L32_959, L33_960, L34_961, L35_962, L36_963, L37_964, L38_965, L39_966, L40_967, L41_968, L42_969, L43_970, L44_971, L45_972, L46_973, L47_974, L48_975, L49_976, L50_977, L51_978, L52_979, L53_980, L54_981, L55_982, L56_983, L57_984, L58_985, L59_986, L60_987, L61_988, L62_989, L63_990, L64_991, L65_992, L66_993, L67_994, L68_995, L69_996, L70_997, L71_998, L72_999, L73_1000, L74_1001, L75_1002, L76_1003, L77_1004, L78_1005, L79_1006, L80_1007, L81_1008, L82_1009, L83_1010, L84_1011, L85_1012, L86_1013, L87_1014, L88_1015, L89_1016, L90_1017, L91_1018, L92_1019, L93_1020, L94_1021, L95_1022, L96_1023, L97_1024, L98_1025, L99_1026, L100_1027, L101_1028, L102_1029, L103_1030, L104_1031, L105_1032, L106_1033, L107_1034, L108_1035, L109_1036, L110_1037, L111_1038, L112_1039, L113_1040, L114_1041, L115_1042, L116_1043, L117_1044, L118_1045, L119_1046, L120_1047, L121_1048, L122_1049, L123_1050, L124_1051, L125_1052, L126_1053, L127_1054, L128_1055, L129_1056, L130_1057, L131_1058, L132_1059, L133_1060, L134_1061, L135_1062, L136_1063, L137_1064, L138_1065, L139_1066, L140_1067, L141_1068, L142_1069, L143_1070, L144_1071, L145_1072, L146_1073, L147_1074, L148_1075, L149_1076, L150_1077, L151_1078, L152_1079, L153_1080, L154_1081, L155_1082, L156_1083, L157_1084, L158_1085, L159_1086, L160_1087, L161_1088, L162_1089, L163_1090, L164_1091, L165_1092, L166_1093, L167_1094, L168_1095, L169_1096, L170_1097, L171_1098, L172_1099, L173_1100, L174_1101, L175_1102, L176_1103, L177_1104, L178_1105, L179_1106, L180_1107, L181_1108, L182_1109, L183_1110, L184_1111, L185_1112, L186_1113, L187_1114, L188_1115, L189_1116, L190_1117, L191_1118, L192_1119, L193_1120, L194_1121, L195_1122, L196_1123, L197_1124, L198_1125, L199_1126, L200_1127, L201_1128, L202_1129, L203_1130, L204_1131, L205_1132, L206_1133, L207_1134, L208_1135, L209_1136, L210_1137, L211_1138, L212_1139, L213_1140, L214_1141, L215_1142, L216_1143, L217_1144, L218_1145, L219_1146, L220_1147, L221_1148, L222_1149, L223_1150, L224_1151, L225_1152, L226_1153, L227_1154, L228_1155, L229_1156, L230_1157, L231_1158, L232_1159, L233_1160, L234_1161, L235_1162, L236_1163, L237_1164, L238_1165, L239_1166, L240_1167, L241_1168, L242_1169, L243_1170, L244_1171, L245_1172, L246_1173, L247_1174, L248_1175, L249_1176, L250_1177, L251_1178, L252_1179, L253_1180, L254_1181
    L1_928 = A0_927.Menu
    L1_928 = L1_928.General
    L1_928 = L1_928.Overkill
    L1_928 = 100 + L1_928
    L1_928 = L1_928 / 100
    return L1_928
  end
  function __Xerath.OnCreateObj(A0_1182, A1_1183)
    if not _ENV[0] then
      return
    end
    if A1_1183 and A1_1183.name then
      if A1_1183.name:lower():find(myHero.charName:lower()) then
      end
      if math.pow(myHero.x - A1_1183.x, 2) + math.pow(myHero.z - A1_1183.z, 2) < math.pow(150, 2) then
        if A1_1183.name:lower():find(myHero.charName:lower()) and A1_1183.name:lower():find("_q") and A1_1183.name:lower():find("_cas") and A1_1183.name:lower():find("_charge") then
          A0_1182.Q.IsCharging = true
        elseif A1_1183.name:lower():find(myHero.charName:lower()) and A1_1183.name:lower():find("_r") and A1_1183.name:lower():find("_buf") then
          A0_1182.R.IsUlting = true
        end
      end
    end
  end
  function __Xerath.OnDeleteObj(A0_1184, A1_1185)
    if not _ENV[0] then
      return
    end
    if A1_1185 and A1_1185.name then
      if A1_1185.name:lower():find(myHero.charName:lower()) then
      end
      if math.pow(myHero.x - A1_1185.x, 2) + math.pow(myHero.z - A1_1185.z, 2) < math.pow(150, 2) then
        if A1_1185.name:lower():find(myHero.charName:lower()) and A1_1185.name:lower():find("_q") and A1_1185.name:lower():find("_cas") and A1_1185.name:lower():find("_charge") then
          A0_1184.Q.IsCharging = false
          OrbwalkManager:EnableAttacks()
        elseif A1_1185.name:lower():find(myHero.charName:lower()) and A1_1185.name:lower():find("_r") and A1_1185.name:lower():find("_buf") then
          A0_1184.R.IsUlting = false
        end
      end
    end
  end
  function __Xerath.OnProcessSpell(A0_1186, A1_1187, A2_1188)
    if not _ENV[0] then
      return
    end
    if A0_1186.Menu == nil or not A0_1186.MenuLoaded then
      return
    end
    if A1_1187 and A2_1188 and A2_1188.name and A1_1187.isMe then
      if A2_1188.name:lower():find("xeratharcanopulsechargeup") then
        A0_1186.Q.LastCastTime = os.clock()
        A0_1186.Q.IsCharging = true
        OrbwalkManager:DisableAttacks()
      elseif A2_1188.name:lower():find("xeratharcanopulse2") then
        A0_1186.Q.endPos = nil
        A0_1186.Q.LastCastTime = os.clock()
        A0_1186.Q.IsCharging = false
        if not A0_1186.Packets.Cast2.Template.Ready then
          for _FORV_8_ = #A0_1186.Packets.Analysis, 1, -1 do
            if A0_1186.Packets.Cast2.Header and A0_1186.Packets.Analysis[_FORV_8_].Header == A0_1186.Packets.Cast2.Header then
              break
            end
          end
          if A0_1186.Packets.Analysis[_FORV_8_] then
            for _FORV_8_ = 2, A0_1186.Packets.Cast2.Size do
              A0_1186.Packets.Cast2.Template[_FORV_8_] = A0_1186.Packets.Analysis[_FORV_8_][_FORV_8_]
            end
            _FOR_.Cast2.Template.Ready = true
          end
        end
      elseif A2_1188.name:lower():find("xerathlocusofpower2") then
        A0_1186.R.LastCastTime = os.clock()
        A0_1186.R.LastCastTime2 = os.clock()
        A0_1186.R.IsUlting = true
        OrbwalkManager:DisableMovement()
        OrbwalkManager:DisableAttacks()
        DelayAction(function()
          local L0_1189, L1_1190, L2_1191, L3_1192, L4_1193, L5_1194, L6_1195, L7_1196, L8_1197, L9_1198, L10_1199, L11_1200, L12_1201, L13_1202, L14_1203, L15_1204, L16_1205, L17_1206, L18_1207, L19_1208, L20_1209, L21_1210, L22_1211, L23_1212, L24_1213, L25_1214, L26_1215, L27_1216, L28_1217, L29_1218, L30_1219, L31_1220, L32_1221, L33_1222, L34_1223, L35_1224, L36_1225, L37_1226, L38_1227, L39_1228, L40_1229, L41_1230, L42_1231, L43_1232, L44_1233, L45_1234, L46_1235, L47_1236, L48_1237, L49_1238, L50_1239, L51_1240, L52_1241, L53_1242, L54_1243, L55_1244, L56_1245, L57_1246, L58_1247, L59_1248, L60_1249, L61_1250, L62_1251, L63_1252, L64_1253, L65_1254, L66_1255, L67_1256, L68_1257, L69_1258, L70_1259, L71_1260, L72_1261, L73_1262, L74_1263, L75_1264, L76_1265, L77_1266, L78_1267, L79_1268, L80_1269, L81_1270, L82_1271, L83_1272, L84_1273, L85_1274, L86_1275, L87_1276, L88_1277, L89_1278, L90_1279, L91_1280, L92_1281, L93_1282, L94_1283, L95_1284, L96_1285, L97_1286, L98_1287, L99_1288, L100_1289, L101_1290, L102_1291, L103_1292, L104_1293, L105_1294, L106_1295, L107_1296, L108_1297, L109_1298, L110_1299, L111_1300, L112_1301, L113_1302, L114_1303, L115_1304, L116_1305, L117_1306, L118_1307, L119_1308, L120_1309, L121_1310, L122_1311, L123_1312, L124_1313, L125_1314, L126_1315, L127_1316, L128_1317, L129_1318, L130_1319, L131_1320, L132_1321, L133_1322, L134_1323, L135_1324, L136_1325, L137_1326, L138_1327, L139_1328, L140_1329, L141_1330, L142_1331, L143_1332, L144_1333, L145_1334, L146_1335, L147_1336, L148_1337, L149_1338, L150_1339, L151_1340, L152_1341, L153_1342, L154_1343, L155_1344, L156_1345, L157_1346, L158_1347, L159_1348, L160_1349, L161_1350, L162_1351, L163_1352, L164_1353, L165_1354, L166_1355, L167_1356, L168_1357, L169_1358, L170_1359, L171_1360, L172_1361, L173_1362, L174_1363, L175_1364, L176_1365, L177_1366, L178_1367, L179_1368, L180_1369, L181_1370, L182_1371, L183_1372, L184_1373, L185_1374, L186_1375, L187_1376, L188_1377, L189_1378, L190_1379, L191_1380, L192_1381, L193_1382, L194_1383, L195_1384, L196_1385, L197_1386, L198_1387, L199_1388, L200_1389, L201_1390, L202_1391, L203_1392, L204_1393, L205_1394, L206_1395, L207_1396, L208_1397, L209_1398, L210_1399, L211_1400, L212_1401, L213_1402, L214_1403, L215_1404, L216_1405, L217_1406, L218_1407, L219_1408, L220_1409, L221_1410, L222_1411, L223_1412, L224_1413, L225_1414, L226_1415, L227_1416, L228_1417, L229_1418, L230_1419, L231_1420, L232_1421, L233_1422, L234_1423, L235_1424, L236_1425, L237_1426, L238_1427, L239_1428, L240_1429, L241_1430, L242_1431, L243_1432, L244_1433, L245_1434, L246_1435, L247_1436, L248_1437, L249_1438, L250_1439, L251_1440, L252_1441, L253_1442, L254_1443
          L0_1189 = A0_1186.R
          L0_1189.Stack = 3
          L0_1189 = A0_1186.R
          L0_1189.IsUlting = false
        end, 10)
      elseif A2_1188.name:lower():find("xerathrmissilewrapper") then
      elseif A2_1188.name:lower():find("xerathlocuspulse") then
        A0_1186.R.LastCastTime2 = os.clock()
        A0_1186.R.Shoot = false
        A0_1186.R.Stack = A0_1186.R.Stack - 1
        OrbwalkManager:DisableMovement()
        OrbwalkManager:DisableAttacks()
      end
    end
  end
  function __Xerath.OnWndMsg(A0_1444, A1_1445, A2_1446)
    if not _ENV[0] then
      return
    end
    if A0_1444.Menu == nil or not A0_1444.MenuLoaded then
      return
    end
    if A1_1445 == KEY_DOWN and A2_1446 == A0_1444.Menu.Ultimate._param[A0_1444.TapPos].key then
      if A0_1444.Menu.Ultimate.Mode == 2 then
        A0_1444.R.Shoot = true
      end
      if not A0_1444.R.IsUlting and A0_1444.R:IsReady() then
        A0_1444.R:Cast()
      end
    end
  end
  function __Xerath.OnDraw(A0_1447)
    local L1_1448, L2_1449, L3_1450, L4_1451, L5_1452, L6_1453
    L1_1448 = 0
    L1_1448 = _ENV[L1_1448]
    if not L1_1448 then
      return
    end
    L1_1448 = L1_1448 * L1_1448
    L1_1448 = myHero
    L1_1448 = L1_1448.dead
    if not L1_1448 then
      L1_1448 = A0_1447.Menu
      if L1_1448 ~= nil then
        L1_1448 = A0_1447.MenuLoaded
      end
    elseif not L1_1448 then
      return
    end
    L1_1448 = A0_1447.Menu
    L1_1448 = L1_1448.Ultimate
    L1_1448 = L1_1448.NearMouse
    L1_1448 = L1_1448.Enable
    if L1_1448 then
      L1_1448 = A0_1447.Menu
      L1_1448 = L1_1448.Ultimate
      L1_1448 = L1_1448.NearMouse
      L1_1448 = L1_1448.Draw
      if L1_1448 then
        L1_1448 = A0_1447.R
        L1_1448 = L1_1448.IsUlting
        if L1_1448 then
          L1_1448 = DrawCircle3D
          L6_1453 = 1
          L1_1448(L2_1449, L3_1450, L4_1451, L5_1452, L6_1453, L11_11.Blue, 30)
        end
      end
    end
    L1_1448 = A0_1447.Menu
    L1_1448 = L1_1448.Draw
    L1_1448 = L1_1448.Killable
    if L1_1448 then
      L1_1448 = A0_1447.R
      L1_1448 = L1_1448.IsReady
      L1_1448 = L1_1448(L2_1449)
      if L1_1448 then
        L1_1448 = myHero
        L1_1448 = L1_1448.mana
        if L1_1448 >= L2_1449 then
          L1_1448 = 0
          L6_1453 = L3_1450()
          for L5_1452, L6_1453 in L2_1449(L3_1450, L4_1451, L5_1452, L6_1453, L3_1450()) do
            if A0_1447.R:ValidTarget(L6_1453) and A0_1447.R:Damage(L6_1453) * A0_1447.R.Stack >= L6_1453.health then
              if OnScreen(WorldToScreen(D3DXVECTOR3(L6_1453.x, L6_1453.y, L6_1453.z)).x, WorldToScreen(D3DXVECTOR3(L6_1453.x, L6_1453.y, L6_1453.z)).y) then
                DrawText("R KILL", 25, WorldToScreen(D3DXVECTOR3(L6_1453.x, L6_1453.y, L6_1453.z)).x, WorldToScreen(D3DXVECTOR3(L6_1453.x, L6_1453.y, L6_1453.z)).y, L11_11.Red)
              end
              DrawText(L6_1453.charName:upper() .. " KILLABLE", 35, 100, 50 + 50 * L1_1448, L11_11.Red)
              L1_1448 = L1_1448 + 1
            end
          end
        end
      end
    end
    L1_1448 = A0_1447.Packets
    L1_1448 = L1_1448.Sent
    if L1_1448 then
      L1_1448 = A0_1447.Packets
      L1_1448 = L1_1448.Cast2
      L1_1448 = L1_1448.Template
      L1_1448 = L1_1448.Ready
      if not L1_1448 then
        L1_1448 = WorldToScreen
        L6_1453 = L2_1449(L3_1450, L4_1451, L5_1452)
        L1_1448 = L1_1448(L2_1449, L3_1450, L4_1451, L5_1452, L6_1453, L2_1449(L3_1450, L4_1451, L5_1452))
        if L2_1449 then
          L6_1453 = L1_1448.y
          L2_1449(L3_1450, L4_1451, L5_1452, L6_1453, L11_11.White)
        end
      end
    end
    L1_1448 = A0_1447.Menu
    L1_1448 = L1_1448.General
    L1_1448 = L1_1448.Developer
    if L1_1448 then
      L1_1448 = WorldToScreen
      L6_1453 = L2_1449(L3_1450, L4_1451, L5_1452)
      L1_1448 = L1_1448(L2_1449, L3_1450, L4_1451, L5_1452, L6_1453, L2_1449(L3_1450, L4_1451, L5_1452))
      for L6_1453 = 0, 255 do
      end
      L6_1453 = ", Updated: "
      L6_1453 = L1_1448.x
      L3_1450(L4_1451, L5_1452, L6_1453, L1_1448.y - 50, L11_11.White)
    end
  end
  function __Xerath.CastSpell2(A0_1454, A1_1455)
    local L2_1456, L3_1457, L4_1458, L5_1459, L6_1460, L7_1461, L8_1462
    L2_1456 = 0
    L2_1456 = _ENV[L2_1456]
    if not L2_1456 then
      return
    end
    L2_1456 = L2_1456 * L2_1456
    if A1_1455 then
      L2_1456 = A0_1454.CastSpell2IsReady
      L2_1456 = L2_1456(L3_1457, L4_1458)
      if L2_1456 then
        L2_1456 = A0_1454.Packets
        L2_1456 = L2_1456.Cast2
        L2_1456 = L2_1456.Template
        L2_1456 = L2_1456.Ready
        if L2_1456 then
          L2_1456 = CLoLPacket
          L2_1456 = L2_1456(L3_1457)
          L2_1456.vTable = L3_1457
          L2_1456.dwArg1 = 1
          L2_1456.dwArg2 = 0
          for L6_1460 = 2, L4_1458.Size do
            L2_1456.pos = L6_1460
            L7_1461 = A0_1454.Packets
            L7_1461 = L7_1461.Cast2
            L7_1461 = L7_1461.Template
            L7_1461 = L7_1461[L6_1460]
            if L7_1461 then
              L8_1462 = L2_1456
              L7_1461 = L2_1456.Encode1
              L7_1461(L8_1462, A0_1454.Packets.Cast2.Template[L6_1460])
            else
              L8_1462 = L2_1456
              L7_1461 = L2_1456.Encode1
              L7_1461(L8_1462, 0)
            end
          end
          L2_1456.pos = 2
          L3_1457(L4_1458, L5_1459)
          L3_1457.pos = 2
          L4_1458(L5_1459, L6_1460)
          L4_1458(L5_1459, L6_1460)
          L4_1458(L5_1459, L6_1460)
          L3_1457.pos = 2
          for L7_1461 = L4_1458.Pos, L5_1459 + 4 do
            L2_1456.pos = L7_1461
            L8_1462 = A0_1454.Packets
            L8_1462 = L8_1462.Cast2
            L8_1462 = L8_1462[L3_1457:Decode1()]
            if L8_1462 then
              L2_1456:Encode1(L8_1462)
            end
          end
          L4_1458(L5_1459)
        end
      end
    end
  end
  function __Xerath.CastSpell2IsReady(A0_1463, A1_1464)
    if not _ENV[0] then
      return
    end
    if A1_1464 then
      if A0_1463.Packets.Updated then
        return true
      end
      if A0_1463.Packets.Cast2.Header and A0_1463.Packets.Cast2.Pos and A0_1463.Packets.Cast2.Template.Ready then
        CLoLPacket(A0_1463.Packets.Cast2.Header).pos = 2
        CLoLPacket(A0_1463.Packets.Cast2.Header):EncodeF(A1_1464.x)
        CLoLPacket(A0_1463.Packets.Cast2.Header):EncodeF(A1_1464.y)
        CLoLPacket(A0_1463.Packets.Cast2.Header):EncodeF(A1_1464.y)
        CLoLPacket(A0_1463.Packets.Cast2.Header).pos = 2
        for _FORV_6_ = A0_1463.Packets.Cast2.Pos, A0_1463.Packets.Cast2.Pos + 3 + 4 + 4 do
          if A0_1463.Packets.Cast2[CLoLPacket(A0_1463.Packets.Cast2.Header):Decode1()] == nil then
            return false
          end
        end
        return _FOR_
      end
    end
    return false
  end
  function __Xerath.OnSendPacket(A0_1465, A1_1466)
    local L2_1467, L3_1468, L4_1469, L5_1470, L6_1471, L7_1472, L8_1473, L9_1474, L10_1475
    L2_1467 = 0
    L2_1467 = _ENV[L2_1467]
    if not L2_1467 then
      return
    end
    L2_1467 = L2_1467 * L2_1467
    if A1_1466 then
      A1_1466.pos = 2
      L2_1467 = myHero
      L2_1467 = L2_1467.networkID
      if L2_1467 == L3_1468 then
        L2_1467 = A0_1465.Packets
        L2_1467 = L2_1467.Updated
        if L2_1467 then
          L2_1467 = A0_1465.Q
          L2_1467 = L2_1467.IsCharging
          if L2_1467 then
            L2_1467 = A0_1465.Packets
            L2_1467 = L2_1467.Cast2
            L2_1467 = L2_1467.Header
            if L2_1467 == L3_1468 then
              L2_1467 = {}
              L2_1467.Header = L3_1468
              L2_1467.mousePos = L3_1468
              for L6_1471 = 6, A1_1466.size do
                A1_1466.pos = L6_1471
                L8_1473 = A1_1466
                L7_1472 = A1_1466.Decode1
                L7_1472 = L7_1472(L8_1473)
                L2_1467[L6_1471] = L7_1472
              end
              L3_1468(L4_1469, L5_1470)
            end
          end
        else
          L2_1467 = A0_1465.Q
          L2_1467 = L2_1467.Sent
          if L2_1467 then
            L2_1467 = A1_1466.header
            if L2_1467 ~= 255 then
              L2_1467 = A1_1466.header
              if L2_1467 == L3_1468 then
                L2_1467 = A1_1466.vTable
              elseif L2_1467 ~= L3_1468 then
                L2_1467 = {}
                L2_1467.Updated = false
                L2_1467.Sent = false
                L2_1467.Analysis = L3_1468
                L3_1468.Header = nil
                L3_1468.vTable = nil
                L2_1467.Cast1 = L3_1468
                L3_1468.Header = nil
                L3_1468.vTable = nil
                L3_1468.Size = nil
                L4_1469.Ready = false
                L3_1468.Template = L4_1469
                L3_1468.Pos = nil
                L2_1467.Cast2 = L3_1468
                A0_1465.Packets = L2_1467
                L2_1467 = A0_1465.Packets
                L2_1467 = L2_1467.Cast1
                L2_1467.Header = L3_1468
                L2_1467 = A0_1465.Packets
                L2_1467 = L2_1467.Cast1
                L2_1467.vTable = L3_1468
              end
              L2_1467 = A0_1465.Packets
              L2_1467 = L2_1467.Sent
              if not L2_1467 then
                L2_1467 = A0_1465.Packets
                L2_1467.Sent = true
              end
              L2_1467 = Packet
              L2_1467 = L2_1467(L3_1468)
              L2_1467 = L2_1467.block
              L2_1467(L3_1468)
            end
          else
            L2_1467 = A0_1465.Q
            L2_1467 = L2_1467.IsCharging
            if L2_1467 then
              L2_1467 = A0_1465.Packets
              L2_1467 = L2_1467.Cast2
              L2_1467 = L2_1467.Header
              if L2_1467 ~= nil then
                L2_1467 = A0_1465.Packets
                L2_1467 = L2_1467.Cast2
                L2_1467 = L2_1467.Header
              elseif L2_1467 == L3_1468 then
                L2_1467 = A0_1465.Packets
                L2_1467 = L2_1467.Analysis
                L2_1467 = #L2_1467
                if L2_1467 == 0 then
                  L2_1467 = true
                else
                  if not L2_1467 then
                    L2_1467 = A0_1465.Packets
                    L2_1467 = L2_1467.Analysis
                    L2_1467 = #L2_1467
                    if L2_1467 > 0 then
                      L2_1467 = GetDistanceSqr
                      L2_1467 = L2_1467(L3_1468, L4_1469)
                    end
                end
                elseif L2_1467 > 0 then
                  L2_1467 = {}
                  L2_1467.Header = L3_1468
                  L2_1467.mousePos = L3_1468
                  for L6_1471 = 6, A1_1466.size do
                    A1_1466.pos = L6_1471
                    L8_1473 = A1_1466
                    L7_1472 = A1_1466.Decode1
                    L7_1472 = L7_1472(L8_1473)
                    L2_1467[L6_1471] = L7_1472
                  end
                  L3_1468(L4_1469, L5_1470)
                end
              end
              L2_1467 = A0_1465.Packets
              L2_1467 = L2_1467.Cast2
              L2_1467 = L2_1467.Header
              if L2_1467 == nil then
                L2_1467 = A0_1465.SearchHeader
                L2_1467 = L2_1467(L3_1468)
                if L2_1467 then
                  L3_1468.Size = L4_1469
                  L3_1468.vTable = L4_1469
                end
              else
                L2_1467 = A0_1465.Packets
                L2_1467 = L2_1467.Cast2
                L2_1467 = L2_1467.Header
                if L2_1467 then
                  L2_1467 = A0_1465.Packets
                  L2_1467 = L2_1467.Cast2
                  L2_1467 = L2_1467.Header
                  if L2_1467 == L3_1468 then
                    L2_1467 = A0_1465.Packets
                    L2_1467 = L2_1467.Cast2
                    L2_1467 = L2_1467.Pos
                    if L2_1467 == nil then
                      L2_1467 = A0_1465.Packets
                      L2_1467 = L2_1467.Analysis
                      L2_1467 = #L2_1467
                      if L2_1467 > 20 then
                        L2_1467 = 0
                        for L7_1472 = 6, A1_1466.size do
                          L8_1473 = {}
                          for _FORV_13_ = 1, #A0_1465.Packets.Analysis do
                            if A0_1465.Packets.Analysis[_FORV_13_][L7_1472] and (_FORV_13_ == 1 and true or _FORV_13_ > 1 and 0 < GetDistanceSqr(A0_1465.Packets.Analysis[_FORV_13_ - 1].mousePos, A0_1465.Packets.Analysis[_FORV_13_].mousePos)) then
                              if L8_1473[A0_1465.Packets.Analysis[_FORV_13_][L7_1472]] == nil then
                                L8_1473[A0_1465.Packets.Analysis[_FORV_13_][L7_1472]] = 1
                              else
                                L8_1473[A0_1465.Packets.Analysis[_FORV_13_][L7_1472]] = L8_1473[A0_1465.Packets.Analysis[_FORV_13_][L7_1472]] + 1
                              end
                            end
                          end
                          for _FORV_14_, _FORV_15_ in pairs(L8_1473) do
                            if L10_1475 == nil then
                            else
                            end
                          end
                          if L10_1475 and 100 * L8_1473[L10_1475] / L9_1474 <= 95 then
                            L2_1467 = L2_1467 + 1
                          end
                        end
                        if L3_1468 > 0 and L2_1467 >= 8 and L2_1467 <= 23 then
                          L4_1469.Pos = L3_1468
                          for L7_1472 = 1, #L5_1470 do
                            L8_1473 = A0_1465.Packets
                            L8_1473 = L8_1473.Analysis
                            L8_1473 = L8_1473[L7_1472]
                            L8_1473 = L8_1473.Header
                            if L8_1473 == L9_1474 then
                              L8_1473 = CLoLPacket
                              L8_1473 = L8_1473(L9_1474)
                              L8_1473.pos = 2
                              L9_1474(L10_1475, A0_1465.Packets.Analysis[L7_1472].mousePos.x)
                              L9_1474(L10_1475, A0_1465.Packets.Analysis[L7_1472].mousePos.y)
                              L9_1474(L10_1475, A0_1465.Packets.Analysis[L7_1472].mousePos.z)
                              L8_1473.pos = 2
                              for _FORV_12_ = L9_1474.Pos, L10_1475 + 4 do
                                A0_1465.Packets.Cast2[L8_1473:Decode1()] = A0_1465.Packets.Analysis[L7_1472][_FORV_12_]
                              end
                            end
                          end
                        end
                      end
                    else
                      L2_1467 = CLoLPacket
                      L2_1467 = L2_1467(L3_1468)
                      L2_1467.pos = 2
                      L3_1468(L4_1469, L5_1470)
                      L3_1468(L4_1469, L5_1470)
                      L3_1468(L4_1469, L5_1470)
                      L2_1467.pos = 2
                      for L6_1471 = L3_1468.Pos, L4_1469 + 4 do
                        L8_1473 = L2_1467
                        L7_1472 = L2_1467.Decode1
                        L7_1472 = L7_1472(L8_1473)
                        A1_1466.pos = L6_1471
                        L8_1473 = A1_1466.Decode1
                        L8_1473 = L8_1473(L9_1474)
                        L9_1474[L7_1472] = L8_1473
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  function __Xerath.SearchHeader(A0_1476)
    local L1_1477, L2_1478
    L1_1477 = 0
    L1_1477 = _ENV[L1_1477]
    if not L1_1477 then
      return
    end
    L1_1477 = L1_1477 * L1_1477
    L1_1477 = A0_1476.Packets
    L1_1477 = L1_1477.Analysis
    L1_1477 = #L1_1477
    if L1_1477 > 2 then
      L1_1477 = {}
      for _FORV_5_ = 1, #A0_1476.Packets.Analysis do
        if L1_1477[A0_1476.Packets.Analysis[_FORV_5_].Header] == nil then
          L1_1477[A0_1476.Packets.Analysis[_FORV_5_].Header] = 1
        else
          L1_1477[A0_1476.Packets.Analysis[_FORV_5_].Header] = L1_1477[A0_1476.Packets.Analysis[_FORV_5_].Header] + 1
        end
      end
      for _FORV_6_, _FORV_7_ in pairs(L1_1477) do
        if L2_1478 == nil then
        else
        end
      end
      if L2_1478 then
        A0_1476.Packets.Cast2.Header = L2_1478
        return true
      end
    end
    L1_1477 = false
    return L1_1477
  end
  class("__Viktor")
  function __Viktor.__init(A0_1479)
    local L1_1480
    L1_1480 = 0
    L1_1480 = _ENV[L1_1480]
    if not L1_1480 then
      return
    end
    L1_1480 = L1_1480 * L1_1480
    A0_1479.ScriptName = "Viktor Madness"
    A0_1479.Author = "Da Vinci"
    A0_1479.MenuLoaded = false
    A0_1479.Menu = nil
    A0_1479.TS = nil
    L1_1480 = {}
    A0_1479.Packets = L1_1480
    L1_1480 = {}
    L1_1480["5.14"] = {
      Updated = false,
      Sent = false,
      Block = false,
      Verified = true,
      Verified2 = true,
      Analysis = {},
      Header = 7,
      vTable = 15516752,
      Size = 36,
      From = {
        ["Pos"] = 6,
        [0] = 9,
        [1] = 41,
        [2] = 73,
        [3] = 105,
        [4] = 137,
        [5] = 169,
        [6] = 201,
        [7] = 234,
        [8] = 10,
        [9] = 42,
        [10] = 74,
        [11] = 106,
        [12] = 138,
        [13] = 170,
        [14] = 202,
        [15] = 235,
        [16] = 11,
        [17] = 43,
        [18] = 75,
        [19] = 107,
        [20] = 139,
        [21] = 171,
        [22] = 203,
        [23] = 236,
        [24] = 12,
        [25] = 44,
        [26] = 76,
        [27] = 108,
        [28] = 140,
        [29] = 172,
        [30] = 204,
        [31] = 237,
        [32] = 13,
        [33] = 45,
        [34] = 77,
        [35] = 109,
        [36] = 141,
        [37] = 173,
        [38] = 205,
        [39] = 238,
        [40] = 14,
        [41] = 46,
        [42] = 78,
        [43] = 110,
        [44] = 142,
        [45] = 174,
        [46] = 206,
        [47] = 239,
        [48] = 15,
        [49] = 47,
        [50] = 79,
        [51] = 111,
        [52] = 143,
        [53] = 175,
        [54] = 207,
        [55] = 240,
        [56] = 16,
        [57] = 48,
        [58] = 80,
        [59] = 112,
        [60] = 144,
        [61] = 176,
        [62] = 208,
        [63] = 241,
        [64] = 17,
        [65] = 49,
        [66] = 81,
        [67] = 113,
        [68] = 145,
        [69] = 177,
        [70] = 209,
        [71] = 242,
        [72] = 18,
        [73] = 50,
        [74] = 82,
        [75] = 114,
        [76] = 146,
        [77] = 178,
        [78] = 210,
        [79] = 243,
        [80] = 19,
        [81] = 51,
        [82] = 83,
        [83] = 115,
        [84] = 147,
        [85] = 179,
        [86] = 211,
        [87] = 244,
        [88] = 20,
        [89] = 52,
        [90] = 84,
        [91] = 116,
        [92] = 148,
        [93] = 180,
        [94] = 212,
        [95] = 245,
        [96] = 21,
        [97] = 53,
        [98] = 85,
        [99] = 117,
        [100] = 149,
        [101] = 181,
        [102] = 213,
        [103] = 246,
        [104] = 22,
        [105] = 54,
        [106] = 86,
        [107] = 118,
        [108] = 150,
        [109] = 182,
        [110] = 214,
        [111] = 247,
        [112] = 23,
        [113] = 55,
        [114] = 87,
        [115] = 119,
        [116] = 151,
        [117] = 183,
        [118] = 215,
        [119] = 216,
        [120] = 248,
        [121] = 24,
        [122] = 56,
        [123] = 88,
        [124] = 120,
        [125] = 152,
        [126] = 184,
        [127] = 217,
        [128] = 249,
        [129] = 25,
        [130] = 57,
        [131] = 89,
        [132] = 121,
        [133] = 153,
        [134] = 185,
        [135] = 218,
        [136] = 250,
        [137] = 26,
        [138] = 58,
        [139] = 90,
        [140] = 122,
        [141] = 154,
        [142] = 186,
        [143] = 219,
        [144] = 251,
        [145] = 27,
        [146] = 59,
        [147] = 91,
        [148] = 123,
        [149] = 155,
        [150] = 187,
        [151] = 220,
        [152] = 252,
        [153] = 28,
        [154] = 60,
        [155] = 92,
        [156] = 124,
        [157] = 156,
        [158] = 188,
        [159] = 221,
        [160] = 253,
        [161] = 29,
        [162] = 61,
        [163] = 93,
        [164] = 125,
        [165] = 157,
        [166] = 189,
        [167] = 222,
        [168] = 254,
        [169] = 30,
        [170] = 62,
        [171] = 94,
        [172] = 126,
        [173] = 158,
        [174] = 190,
        [175] = 223,
        [176] = 255,
        [177] = 31,
        [178] = 63,
        [179] = 95,
        [180] = 127,
        [181] = 159,
        [182] = 191,
        [183] = 224,
        [184] = 0,
        [185] = 32,
        [186] = 64,
        [187] = 96,
        [188] = 128,
        [189] = 160,
        [190] = 192,
        [191] = 225,
        [192] = 1,
        [193] = 33,
        [194] = 65,
        [195] = 97,
        [196] = 129,
        [197] = 161,
        [198] = 193,
        [199] = 226,
        [200] = 2,
        [201] = 34,
        [202] = 66,
        [203] = 98,
        [204] = 130,
        [205] = 162,
        [206] = 194,
        [207] = 227,
        [208] = 3,
        [209] = 35,
        [210] = 67,
        [211] = 99,
        [212] = 131,
        [213] = 163,
        [214] = 195,
        [215] = 228,
        [216] = 4,
        [217] = 36,
        [218] = 68,
        [219] = 100,
        [220] = 132,
        [221] = 164,
        [222] = 196,
        [223] = 229,
        [224] = 5,
        [225] = 37,
        [226] = 69,
        [227] = 101,
        [228] = 133,
        [229] = 165,
        [230] = 197,
        [231] = 230,
        [232] = 6,
        [233] = 38,
        [234] = 70,
        [235] = 102,
        [236] = 134,
        [237] = 166,
        [238] = 198,
        [239] = 231,
        [240] = 7,
        [241] = 39,
        [242] = 71,
        [243] = 103,
        [244] = 135,
        [245] = 167,
        [246] = 199,
        [247] = 232,
        [248] = 8,
        [249] = 40,
        [250] = 72,
        [251] = 104,
        [252] = 136,
        [253] = 168,
        [254] = 200,
        [255] = 233
      },
      To = {
        ["Pos"] = 19,
        [0] = 218,
        [1] = 22,
        [2] = 234,
        [3] = 39,
        [4] = 49,
        [5] = 190,
        [6] = 200,
        [7] = 88,
        [8] = 226,
        [9] = 142,
        [10] = 161,
        [11] = 254,
        [12] = 6,
        [13] = 238,
        [14] = 82,
        [15] = 50,
        [16] = 109,
        [17] = 168,
        [18] = 23,
        [19] = 69,
        [20] = 21,
        [21] = 29,
        [22] = 231,
        [23] = 74,
        [24] = 150,
        [25] = 212,
        [26] = 98,
        [27] = 217,
        [28] = 78,
        [29] = 30,
        [30] = 52,
        [31] = 189,
        [32] = 118,
        [33] = 249,
        [34] = 144,
        [35] = 178,
        [36] = 0,
        [37] = 133,
        [38] = 253,
        [39] = 1,
        [40] = 191,
        [41] = 115,
        [42] = 120,
        [43] = 146,
        [44] = 17,
        [45] = 103,
        [46] = 33,
        [47] = 160,
        [48] = 112,
        [49] = 56,
        [50] = 84,
        [51] = 236,
        [52] = 126,
        [53] = 172,
        [54] = 13,
        [55] = 201,
        [56] = 58,
        [57] = 45,
        [58] = 179,
        [59] = 38,
        [60] = 193,
        [61] = 26,
        [62] = 15,
        [63] = 216,
        [64] = 192,
        [65] = 80,
        [66] = 213,
        [67] = 204,
        [68] = 165,
        [69] = 79,
        [70] = 91,
        [71] = 188,
        [72] = 94,
        [73] = 237,
        [74] = 67,
        [75] = 36,
        [76] = 129,
        [77] = 214,
        [78] = 248,
        [79] = 155,
        [80] = 99,
        [81] = 181,
        [82] = 139,
        [83] = 184,
        [84] = 228,
        [85] = 215,
        [86] = 225,
        [87] = 175,
        [88] = 157,
        [89] = 163,
        [90] = 95,
        [91] = 44,
        [92] = 148,
        [93] = 20,
        [94] = 154,
        [95] = 9,
        [96] = 223,
        [97] = 41,
        [98] = 123,
        [99] = 145,
        [100] = 185,
        [101] = 63,
        [102] = 51,
        [103] = 206,
        [104] = 86,
        [105] = 8,
        [106] = 203,
        [107] = 27,
        [108] = 119,
        [109] = 169,
        [110] = 207,
        [111] = 151,
        [112] = 113,
        [113] = 162,
        [114] = 72,
        [115] = 202,
        [116] = 96,
        [117] = 55,
        [118] = 76,
        [119] = 127,
        [120] = 121,
        [121] = 53,
        [122] = 3,
        [123] = 170,
        [124] = 65,
        [125] = 117,
        [126] = 100,
        [127] = 106,
        [128] = 73,
        [129] = 229,
        [130] = 171,
        [131] = 18,
        [132] = 16,
        [133] = 48,
        [134] = 64,
        [135] = 46,
        [136] = 221,
        [137] = 57,
        [138] = 47,
        [139] = 125,
        [140] = 177,
        [141] = 110,
        [142] = 220,
        [143] = 176,
        [144] = 208,
        [145] = 25,
        [146] = 219,
        [147] = 59,
        [148] = 232,
        [149] = 135,
        [150] = 105,
        [151] = 205,
        [152] = 235,
        [153] = 70,
        [154] = 196,
        [155] = 92,
        [156] = 4,
        [157] = 167,
        [158] = 2,
        [159] = 5,
        [160] = 68,
        [161] = 245,
        [162] = 183,
        [163] = 131,
        [164] = 243,
        [165] = 138,
        [166] = 242,
        [167] = 251,
        [168] = 136,
        [169] = 61,
        [170] = 156,
        [171] = 227,
        [172] = 182,
        [173] = 90,
        [174] = 14,
        [175] = 104,
        [176] = 108,
        [177] = 252,
        [178] = 54,
        [179] = 240,
        [180] = 166,
        [181] = 85,
        [182] = 130,
        [183] = 89,
        [184] = 158,
        [185] = 28,
        [186] = 87,
        [187] = 32,
        [188] = 101,
        [189] = 134,
        [190] = 132,
        [191] = 128,
        [192] = 210,
        [193] = 71,
        [194] = 159,
        [195] = 255,
        [196] = 102,
        [197] = 122,
        [198] = 187,
        [199] = 198,
        [200] = 137,
        [201] = 7,
        [202] = 143,
        [203] = 209,
        [204] = 239,
        [205] = 93,
        [206] = 83,
        [207] = 224,
        [208] = 107,
        [209] = 43,
        [210] = 194,
        [211] = 180,
        [212] = 186,
        [213] = 42,
        [214] = 116,
        [215] = 24,
        [216] = 174,
        [217] = 10,
        [218] = 147,
        [219] = 141,
        [220] = 124,
        [221] = 211,
        [222] = 230,
        [223] = 62,
        [224] = 149,
        [225] = 11,
        [226] = 60,
        [227] = 152,
        [228] = 40,
        [229] = 19,
        [230] = 247,
        [231] = 77,
        [232] = 164,
        [233] = 153,
        [234] = 241,
        [235] = 97,
        [236] = 199,
        [237] = 114,
        [238] = 250,
        [239] = 81,
        [240] = 35,
        [241] = 173,
        [242] = 34,
        [243] = 244,
        [244] = 37,
        [245] = 66,
        [246] = 111,
        [247] = 197,
        [248] = 222,
        [249] = 140,
        [250] = 246,
        [251] = 233,
        [252] = 75,
        [253] = 31,
        [254] = 12,
        [255] = 195
      }
    }
    L1_1480["5.15"] = {
      Updated = false,
      Sent = false,
      Block = false,
      Verified = true,
      Verified2 = true,
      Analysis = {},
      Header = 228,
      vTable = 14567308,
      Size = 36,
      From = {
        ["Pos"] = 19,
        [0] = 159,
        [1] = 143,
        [2] = 151,
        [3] = 135,
        [4] = 155,
        [5] = 139,
        [6] = 147,
        [7] = 131,
        [8] = 157,
        [9] = 141,
        [10] = 149,
        [11] = 133,
        [12] = 153,
        [13] = 137,
        [14] = 145,
        [15] = 129,
        [16] = 158,
        [17] = 142,
        [18] = 150,
        [19] = 134,
        [20] = 154,
        [21] = 138,
        [22] = 146,
        [23] = 130,
        [24] = 156,
        [25] = 140,
        [26] = 148,
        [27] = 132,
        [28] = 152,
        [29] = 136,
        [30] = 144,
        [31] = 128,
        [32] = 31,
        [33] = 15,
        [34] = 23,
        [35] = 7,
        [36] = 27,
        [37] = 11,
        [38] = 19,
        [39] = 3,
        [40] = 29,
        [41] = 13,
        [42] = 21,
        [43] = 5,
        [44] = 25,
        [45] = 9,
        [46] = 17,
        [47] = 1,
        [48] = 30,
        [49] = 14,
        [50] = 22,
        [51] = 6,
        [52] = 26,
        [53] = 10,
        [54] = 18,
        [55] = 2,
        [56] = 28,
        [57] = 12,
        [58] = 20,
        [59] = 4,
        [60] = 24,
        [61] = 8,
        [62] = 16,
        [63] = 0,
        [64] = 239,
        [65] = 247,
        [66] = 231,
        [67] = 251,
        [68] = 235,
        [69] = 243,
        [70] = 227,
        [71] = 253,
        [72] = 237,
        [73] = 245,
        [74] = 229,
        [75] = 249,
        [76] = 233,
        [77] = 241,
        [78] = 225,
        [79] = 254,
        [80] = 238,
        [81] = 246,
        [82] = 230,
        [83] = 250,
        [84] = 234,
        [85] = 242,
        [86] = 226,
        [87] = 252,
        [88] = 236,
        [89] = 244,
        [90] = 228,
        [91] = 248,
        [92] = 232,
        [93] = 240,
        [94] = 224,
        [95] = 127,
        [96] = 111,
        [97] = 119,
        [98] = 103,
        [99] = 123,
        [100] = 107,
        [101] = 115,
        [102] = 99,
        [103] = 125,
        [104] = 109,
        [105] = 117,
        [106] = 101,
        [107] = 121,
        [108] = 105,
        [109] = 113,
        [110] = 97,
        [111] = 126,
        [112] = 110,
        [113] = 118,
        [114] = 102,
        [115] = 122,
        [116] = 106,
        [117] = 114,
        [118] = 98,
        [119] = 124,
        [120] = 108,
        [121] = 116,
        [122] = 100,
        [123] = 120,
        [124] = 104,
        [125] = 112,
        [126] = 96,
        [127] = 255,
        [128] = 175,
        [129] = 183,
        [130] = 167,
        [131] = 187,
        [132] = 171,
        [133] = 179,
        [134] = 163,
        [135] = 189,
        [136] = 173,
        [137] = 181,
        [138] = 165,
        [139] = 185,
        [140] = 169,
        [141] = 177,
        [142] = 161,
        [143] = 190,
        [144] = 174,
        [145] = 182,
        [146] = 166,
        [147] = 186,
        [148] = 170,
        [149] = 178,
        [150] = 162,
        [151] = 188,
        [152] = 172,
        [153] = 180,
        [154] = 164,
        [155] = 184,
        [156] = 168,
        [157] = 176,
        [158] = 160,
        [159] = 63,
        [160] = 47,
        [161] = 55,
        [162] = 39,
        [163] = 59,
        [164] = 43,
        [165] = 51,
        [166] = 35,
        [167] = 61,
        [168] = 45,
        [169] = 53,
        [170] = 37,
        [171] = 57,
        [172] = 41,
        [173] = 49,
        [174] = 33,
        [175] = 62,
        [176] = 46,
        [177] = 54,
        [178] = 38,
        [179] = 58,
        [180] = 42,
        [181] = 50,
        [182] = 34,
        [183] = 60,
        [184] = 44,
        [185] = 52,
        [186] = 36,
        [187] = 56,
        [188] = 40,
        [189] = 48,
        [190] = 32,
        [191] = 191,
        [192] = 207,
        [193] = 215,
        [194] = 199,
        [195] = 219,
        [196] = 203,
        [197] = 211,
        [198] = 195,
        [199] = 221,
        [200] = 205,
        [201] = 213,
        [202] = 197,
        [203] = 217,
        [204] = 201,
        [205] = 209,
        [206] = 193,
        [207] = 222,
        [208] = 206,
        [209] = 214,
        [210] = 198,
        [211] = 218,
        [212] = 202,
        [213] = 210,
        [214] = 194,
        [215] = 220,
        [216] = 204,
        [217] = 212,
        [218] = 196,
        [219] = 216,
        [220] = 200,
        [221] = 208,
        [222] = 192,
        [223] = 95,
        [224] = 79,
        [225] = 87,
        [226] = 71,
        [227] = 91,
        [228] = 75,
        [229] = 83,
        [230] = 67,
        [231] = 93,
        [232] = 77,
        [233] = 85,
        [234] = 69,
        [235] = 89,
        [236] = 73,
        [237] = 81,
        [238] = 65,
        [239] = 94,
        [240] = 78,
        [241] = 86,
        [242] = 70,
        [243] = 90,
        [244] = 74,
        [245] = 82,
        [246] = 66,
        [247] = 92,
        [248] = 76,
        [249] = 84,
        [250] = 68,
        [251] = 88,
        [252] = 72,
        [253] = 80,
        [254] = 64,
        [255] = 223
      },
      To = {
        ["Pos"] = 11,
        [0] = 29,
        [1] = 235,
        [2] = 113,
        [3] = 60,
        [4] = 14,
        [5] = 23,
        [6] = 56,
        [7] = 95,
        [8] = 196,
        [9] = 7,
        [10] = 203,
        [11] = 85,
        [12] = 88,
        [13] = 151,
        [14] = 99,
        [15] = 183,
        [16] = 170,
        [17] = 59,
        [18] = 127,
        [19] = 225,
        [20] = 164,
        [21] = 139,
        [22] = 249,
        [23] = 22,
        [24] = 178,
        [25] = 206,
        [26] = 250,
        [27] = 80,
        [28] = 78,
        [29] = 135,
        [30] = 28,
        [31] = 200,
        [32] = 114,
        [33] = 172,
        [34] = 171,
        [35] = 245,
        [36] = 97,
        [37] = 63,
        [38] = 223,
        [39] = 49,
        [40] = 234,
        [41] = 129,
        [42] = 197,
        [43] = 198,
        [44] = 253,
        [45] = 161,
        [46] = 205,
        [47] = 107,
        [48] = 224,
        [49] = 35,
        [50] = 181,
        [51] = 144,
        [52] = 246,
        [53] = 68,
        [54] = 121,
        [55] = 109,
        [56] = 120,
        [57] = 212,
        [58] = 19,
        [59] = 147,
        [60] = 141,
        [61] = 4,
        [62] = 167,
        [63] = 227,
        [64] = 134,
        [65] = 8,
        [66] = 79,
        [67] = 72,
        [68] = 213,
        [69] = 233,
        [70] = 242,
        [71] = 112,
        [72] = 20,
        [73] = 211,
        [74] = 173,
        [75] = 204,
        [76] = 94,
        [77] = 216,
        [78] = 199,
        [79] = 179,
        [80] = 201,
        [81] = 214,
        [82] = 229,
        [83] = 185,
        [84] = 101,
        [85] = 157,
        [86] = 155,
        [87] = 222,
        [88] = 143,
        [89] = 6,
        [90] = 231,
        [91] = 41,
        [92] = 202,
        [93] = 150,
        [94] = 191,
        [95] = 237,
        [96] = 207,
        [97] = 105,
        [98] = 126,
        [99] = 194,
        [100] = 92,
        [101] = 165,
        [102] = 175,
        [103] = 208,
        [104] = 16,
        [105] = 244,
        [106] = 163,
        [107] = 45,
        [108] = 100,
        [109] = 42,
        [110] = 232,
        [111] = 98,
        [112] = 189,
        [113] = 153,
        [114] = 36,
        [115] = 50,
        [116] = 87,
        [117] = 152,
        [118] = 131,
        [119] = 190,
        [120] = 103,
        [121] = 83,
        [122] = 38,
        [123] = 186,
        [124] = 184,
        [125] = 48,
        [126] = 162,
        [127] = 55,
        [128] = 128,
        [129] = 209,
        [130] = 3,
        [131] = 0,
        [132] = 228,
        [133] = 193,
        [134] = 182,
        [135] = 118,
        [136] = 44,
        [137] = 33,
        [138] = 96,
        [139] = 247,
        [140] = 159,
        [141] = 142,
        [142] = 239,
        [143] = 106,
        [144] = 54,
        [145] = 47,
        [146] = 5,
        [147] = 89,
        [148] = 255,
        [149] = 71,
        [150] = 123,
        [151] = 251,
        [152] = 243,
        [153] = 156,
        [154] = 76,
        [155] = 70,
        [156] = 195,
        [157] = 248,
        [158] = 217,
        [159] = 32,
        [160] = 90,
        [161] = 53,
        [162] = 108,
        [163] = 218,
        [164] = 21,
        [165] = 26,
        [166] = 34,
        [167] = 10,
        [168] = 188,
        [169] = 158,
        [170] = 149,
        [171] = 236,
        [172] = 11,
        [173] = 240,
        [174] = 215,
        [175] = 166,
        [176] = 174,
        [177] = 168,
        [178] = 67,
        [179] = 81,
        [180] = 18,
        [181] = 12,
        [182] = 169,
        [183] = 77,
        [184] = 122,
        [185] = 124,
        [186] = 25,
        [187] = 52,
        [188] = 65,
        [189] = 64,
        [190] = 176,
        [191] = 66,
        [192] = 220,
        [193] = 13,
        [194] = 24,
        [195] = 37,
        [196] = 39,
        [197] = 140,
        [198] = 241,
        [199] = 136,
        [200] = 238,
        [201] = 104,
        [202] = 51,
        [203] = 73,
        [204] = 160,
        [205] = 86,
        [206] = 137,
        [207] = 180,
        [208] = 82,
        [209] = 177,
        [210] = 146,
        [211] = 138,
        [212] = 130,
        [213] = 192,
        [214] = 252,
        [215] = 2,
        [216] = 75,
        [217] = 187,
        [218] = 62,
        [219] = 221,
        [220] = 91,
        [221] = 254,
        [222] = 74,
        [223] = 57,
        [224] = 27,
        [225] = 117,
        [226] = 43,
        [227] = 1,
        [228] = 46,
        [229] = 93,
        [230] = 102,
        [231] = 154,
        [232] = 125,
        [233] = 69,
        [234] = 210,
        [235] = 115,
        [236] = 145,
        [237] = 9,
        [238] = 119,
        [239] = 111,
        [240] = 230,
        [241] = 84,
        [242] = 132,
        [243] = 61,
        [244] = 17,
        [245] = 148,
        [246] = 219,
        [247] = 31,
        [248] = 116,
        [249] = 30,
        [250] = 40,
        [251] = 58,
        [252] = 15,
        [253] = 133,
        [254] = 226,
        [255] = 110
      }
    }
    L1_1480["5.16"] = {
      Updated = false,
      Sent = false,
      Block = false,
      Verified = true,
      Verified2 = true,
      Analysis = {},
      Header = 320,
      vTable = 15977172,
      Size = 36,
      From = {
        ["Pos"] = 20,
        [0] = 137,
        [1] = 54,
        [2] = 158,
        [3] = 164,
        [4] = 240,
        [5] = 142,
        [6] = 136,
        [7] = 23,
        [8] = 215,
        [9] = 89,
        [10] = 111,
        [11] = 96,
        [12] = 239,
        [13] = 141,
        [14] = 193,
        [15] = 16,
        [16] = 207,
        [17] = 198,
        [18] = 60,
        [19] = 52,
        [20] = 110,
        [21] = 169,
        [22] = 55,
        [23] = 151,
        [24] = 44,
        [25] = 11,
        [26] = 90,
        [27] = 21,
        [28] = 138,
        [29] = 143,
        [30] = 97,
        [31] = 178,
        [32] = 61,
        [33] = 3,
        [34] = 80,
        [35] = 24,
        [36] = 22,
        [37] = 77,
        [38] = 93,
        [39] = 248,
        [40] = 128,
        [41] = 106,
        [42] = 71,
        [43] = 195,
        [44] = 181,
        [45] = 33,
        [46] = 19,
        [47] = 18,
        [48] = 57,
        [49] = 117,
        [50] = 119,
        [51] = 194,
        [52] = 113,
        [53] = 134,
        [54] = 232,
        [55] = 202,
        [56] = 219,
        [57] = 103,
        [58] = 237,
        [59] = 184,
        [60] = 218,
        [61] = 175,
        [62] = 168,
        [63] = 41,
        [64] = 139,
        [65] = 235,
        [66] = 186,
        [67] = 36,
        [68] = 47,
        [69] = 2,
        [70] = 48,
        [71] = 84,
        [72] = 246,
        [73] = 85,
        [74] = 126,
        [75] = 30,
        [76] = 92,
        [77] = 161,
        [78] = 6,
        [79] = 69,
        [80] = 191,
        [81] = 32,
        [82] = 216,
        [83] = 150,
        [84] = 145,
        [85] = 130,
        [86] = 109,
        [87] = 221,
        [88] = 118,
        [89] = 254,
        [90] = 242,
        [91] = 81,
        [92] = 25,
        [93] = 162,
        [94] = 192,
        [95] = 42,
        [96] = 13,
        [97] = 152,
        [98] = 146,
        [99] = 37,
        [100] = 153,
        [101] = 231,
        [102] = 75,
        [103] = 252,
        [104] = 206,
        [105] = 46,
        [106] = 107,
        [107] = 95,
        [108] = 249,
        [109] = 64,
        [110] = 26,
        [111] = 49,
        [112] = 98,
        [113] = 177,
        [114] = 224,
        [115] = 108,
        [116] = 45,
        [117] = 43,
        [118] = 35,
        [119] = 233,
        [120] = 34,
        [121] = 132,
        [122] = 20,
        [123] = 210,
        [124] = 124,
        [125] = 14,
        [126] = 12,
        [127] = 185,
        [128] = 188,
        [129] = 205,
        [130] = 182,
        [131] = 251,
        [132] = 187,
        [133] = 147,
        [134] = 53,
        [135] = 154,
        [136] = 66,
        [137] = 105,
        [138] = 209,
        [139] = 122,
        [140] = 189,
        [141] = 201,
        [142] = 213,
        [143] = 65,
        [144] = 245,
        [145] = 78,
        [146] = 190,
        [147] = 70,
        [148] = 67,
        [149] = 236,
        [150] = 222,
        [151] = 166,
        [152] = 62,
        [153] = 39,
        [154] = 212,
        [155] = 129,
        [156] = 172,
        [157] = 1,
        [158] = 144,
        [159] = 214,
        [160] = 101,
        [161] = 244,
        [162] = 99,
        [163] = 50,
        [164] = 133,
        [165] = 148,
        [166] = 226,
        [167] = 163,
        [168] = 127,
        [169] = 171,
        [170] = 40,
        [171] = 197,
        [172] = 4,
        [173] = 91,
        [174] = 63,
        [175] = 247,
        [176] = 83,
        [177] = 156,
        [178] = 253,
        [179] = 104,
        [180] = 176,
        [181] = 86,
        [182] = 10,
        [183] = 228,
        [184] = 29,
        [185] = 140,
        [186] = 203,
        [187] = 94,
        [188] = 196,
        [189] = 102,
        [190] = 9,
        [191] = 88,
        [192] = 241,
        [193] = 121,
        [194] = 116,
        [195] = 165,
        [196] = 227,
        [197] = 79,
        [198] = 5,
        [199] = 27,
        [200] = 8,
        [201] = 131,
        [202] = 115,
        [203] = 76,
        [204] = 167,
        [205] = 255,
        [206] = 230,
        [207] = 208,
        [208] = 238,
        [209] = 159,
        [210] = 225,
        [211] = 120,
        [212] = 38,
        [213] = 68,
        [214] = 72,
        [215] = 217,
        [216] = 87,
        [217] = 59,
        [218] = 28,
        [219] = 179,
        [220] = 73,
        [221] = 243,
        [222] = 125,
        [223] = 220,
        [224] = 155,
        [225] = 17,
        [226] = 223,
        [227] = 229,
        [228] = 180,
        [229] = 173,
        [230] = 31,
        [231] = 200,
        [232] = 170,
        [233] = 56,
        [234] = 0,
        [235] = 211,
        [236] = 15,
        [237] = 157,
        [238] = 123,
        [239] = 183,
        [240] = 234,
        [241] = 250,
        [242] = 74,
        [243] = 199,
        [244] = 160,
        [245] = 58,
        [246] = 7,
        [247] = 149,
        [248] = 112,
        [249] = 204,
        [250] = 100,
        [251] = 174,
        [252] = 82,
        [253] = 114,
        [254] = 51,
        [255] = 135
      },
      To = {
        ["Pos"] = 12,
        [0] = 249,
        [1] = 255,
        [2] = 121,
        [3] = 127,
        [4] = 248,
        [5] = 254,
        [6] = 120,
        [7] = 126,
        [8] = 217,
        [9] = 223,
        [10] = 89,
        [11] = 95,
        [12] = 216,
        [13] = 222,
        [14] = 88,
        [15] = 94,
        [16] = 185,
        [17] = 191,
        [18] = 57,
        [19] = 63,
        [20] = 184,
        [21] = 190,
        [22] = 56,
        [23] = 62,
        [24] = 153,
        [25] = 159,
        [26] = 25,
        [27] = 31,
        [28] = 152,
        [29] = 158,
        [30] = 24,
        [31] = 30,
        [32] = 241,
        [33] = 247,
        [34] = 113,
        [35] = 119,
        [36] = 240,
        [37] = 246,
        [38] = 112,
        [39] = 118,
        [40] = 209,
        [41] = 215,
        [42] = 81,
        [43] = 87,
        [44] = 208,
        [45] = 214,
        [46] = 80,
        [47] = 86,
        [48] = 177,
        [49] = 183,
        [50] = 49,
        [51] = 55,
        [52] = 176,
        [53] = 182,
        [54] = 48,
        [55] = 54,
        [56] = 145,
        [57] = 151,
        [58] = 17,
        [59] = 23,
        [60] = 144,
        [61] = 150,
        [62] = 16,
        [63] = 22,
        [64] = 233,
        [65] = 239,
        [66] = 105,
        [67] = 111,
        [68] = 232,
        [69] = 238,
        [70] = 104,
        [71] = 110,
        [72] = 201,
        [73] = 207,
        [74] = 73,
        [75] = 79,
        [76] = 200,
        [77] = 206,
        [78] = 72,
        [79] = 78,
        [80] = 169,
        [81] = 175,
        [82] = 41,
        [83] = 47,
        [84] = 168,
        [85] = 174,
        [86] = 40,
        [87] = 46,
        [88] = 137,
        [89] = 143,
        [90] = 9,
        [91] = 15,
        [92] = 136,
        [93] = 142,
        [94] = 8,
        [95] = 14,
        [96] = 225,
        [97] = 231,
        [98] = 97,
        [99] = 103,
        [100] = 224,
        [101] = 230,
        [102] = 96,
        [103] = 102,
        [104] = 193,
        [105] = 199,
        [106] = 65,
        [107] = 71,
        [108] = 192,
        [109] = 198,
        [110] = 64,
        [111] = 70,
        [112] = 161,
        [113] = 167,
        [114] = 33,
        [115] = 39,
        [116] = 160,
        [117] = 166,
        [118] = 32,
        [119] = 38,
        [120] = 129,
        [121] = 135,
        [122] = 1,
        [123] = 7,
        [124] = 128,
        [125] = 134,
        [126] = 0,
        [127] = 6,
        [128] = 251,
        [129] = 253,
        [130] = 123,
        [131] = 125,
        [132] = 250,
        [133] = 252,
        [134] = 122,
        [135] = 124,
        [136] = 219,
        [137] = 221,
        [138] = 91,
        [139] = 93,
        [140] = 218,
        [141] = 220,
        [142] = 90,
        [143] = 92,
        [144] = 187,
        [145] = 189,
        [146] = 59,
        [147] = 61,
        [148] = 186,
        [149] = 188,
        [150] = 58,
        [151] = 60,
        [152] = 155,
        [153] = 157,
        [154] = 27,
        [155] = 29,
        [156] = 154,
        [157] = 156,
        [158] = 26,
        [159] = 28,
        [160] = 243,
        [161] = 245,
        [162] = 115,
        [163] = 117,
        [164] = 242,
        [165] = 244,
        [166] = 114,
        [167] = 116,
        [168] = 211,
        [169] = 213,
        [170] = 83,
        [171] = 85,
        [172] = 210,
        [173] = 212,
        [174] = 82,
        [175] = 84,
        [176] = 179,
        [177] = 181,
        [178] = 51,
        [179] = 53,
        [180] = 178,
        [181] = 180,
        [182] = 50,
        [183] = 52,
        [184] = 147,
        [185] = 149,
        [186] = 19,
        [187] = 21,
        [188] = 146,
        [189] = 148,
        [190] = 18,
        [191] = 20,
        [192] = 235,
        [193] = 237,
        [194] = 107,
        [195] = 109,
        [196] = 234,
        [197] = 236,
        [198] = 106,
        [199] = 108,
        [200] = 203,
        [201] = 205,
        [202] = 75,
        [203] = 77,
        [204] = 202,
        [205] = 204,
        [206] = 74,
        [207] = 76,
        [208] = 171,
        [209] = 173,
        [210] = 43,
        [211] = 45,
        [212] = 170,
        [213] = 172,
        [214] = 42,
        [215] = 44,
        [216] = 139,
        [217] = 141,
        [218] = 11,
        [219] = 13,
        [220] = 138,
        [221] = 140,
        [222] = 10,
        [223] = 12,
        [224] = 227,
        [225] = 229,
        [226] = 99,
        [227] = 101,
        [228] = 226,
        [229] = 228,
        [230] = 98,
        [231] = 100,
        [232] = 195,
        [233] = 197,
        [234] = 67,
        [235] = 69,
        [236] = 194,
        [237] = 196,
        [238] = 66,
        [239] = 68,
        [240] = 163,
        [241] = 165,
        [242] = 35,
        [243] = 37,
        [244] = 162,
        [245] = 164,
        [246] = 34,
        [247] = 36,
        [248] = 131,
        [249] = 133,
        [250] = 3,
        [251] = 5,
        [252] = 130,
        [253] = 132,
        [254] = 2,
        [255] = 4
      }
    }
    L1_1480["5.17"] = {
      Updated = false,
      Sent = false,
      Block = false,
      Verified = true,
      Verified2 = true,
      Analysis = {},
      Header = 41,
      vTable = 16399404,
      Size = 36,
      From = {
        ["Pos"] = 10,
        ["Updated"] = true,
        [0] = 94,
        [1] = 171,
        [2] = 134,
        [3] = 73,
        [4] = 168,
        [5] = 150,
        [6] = 209,
        [7] = 145,
        [8] = 33,
        [9] = 79,
        [10] = 142,
        [11] = 193,
        [12] = 247,
        [13] = 252,
        [14] = 16,
        [15] = 99,
        [16] = 246,
        [17] = 161,
        [18] = 60,
        [19] = 206,
        [20] = 76,
        [21] = 218,
        [22] = 55,
        [23] = 58,
        [24] = 174,
        [25] = 184,
        [26] = 159,
        [27] = 136,
        [28] = 105,
        [29] = 0,
        [30] = 26,
        [31] = 53,
        [32] = 111,
        [33] = 108,
        [34] = 91,
        [35] = 213,
        [36] = 254,
        [37] = 198,
        [38] = 14,
        [39] = 38,
        [40] = 211,
        [41] = 7,
        [42] = 80,
        [43] = 205,
        [44] = 101,
        [45] = 37,
        [46] = 151,
        [47] = 102,
        [48] = 180,
        [49] = 98,
        [50] = 32,
        [51] = 95,
        [52] = 115,
        [53] = 127,
        [54] = 162,
        [55] = 93,
        [56] = 163,
        [57] = 132,
        [58] = 227,
        [59] = 135,
        [60] = 39,
        [61] = 231,
        [62] = 29,
        [63] = 164,
        [64] = 107,
        [65] = 21,
        [66] = 215,
        [67] = 51,
        [68] = 240,
        [69] = 242,
        [70] = 120,
        [71] = 190,
        [72] = 118,
        [73] = 210,
        [74] = 131,
        [75] = 8,
        [76] = 100,
        [77] = 49,
        [78] = 185,
        [79] = 251,
        [80] = 23,
        [81] = 192,
        [82] = 84,
        [83] = 27,
        [84] = 96,
        [85] = 117,
        [86] = 194,
        [87] = 110,
        [88] = 216,
        [89] = 146,
        [90] = 212,
        [91] = 25,
        [92] = 187,
        [93] = 221,
        [94] = 217,
        [95] = 20,
        [96] = 179,
        [97] = 207,
        [98] = 230,
        [99] = 74,
        [100] = 18,
        [101] = 241,
        [102] = 208,
        [103] = 234,
        [104] = 114,
        [105] = 133,
        [106] = 47,
        [107] = 43,
        [108] = 22,
        [109] = 122,
        [110] = 66,
        [111] = 45,
        [112] = 138,
        [113] = 148,
        [114] = 244,
        [115] = 253,
        [116] = 83,
        [117] = 12,
        [118] = 106,
        [119] = 197,
        [120] = 186,
        [121] = 125,
        [122] = 160,
        [123] = 228,
        [124] = 112,
        [125] = 113,
        [126] = 172,
        [127] = 34,
        [128] = 229,
        [129] = 245,
        [130] = 119,
        [131] = 189,
        [132] = 44,
        [133] = 35,
        [134] = 88,
        [135] = 36,
        [136] = 250,
        [137] = 46,
        [138] = 104,
        [139] = 144,
        [140] = 220,
        [141] = 97,
        [142] = 59,
        [143] = 223,
        [144] = 4,
        [145] = 75,
        [146] = 81,
        [147] = 152,
        [148] = 219,
        [149] = 236,
        [150] = 178,
        [151] = 67,
        [152] = 24,
        [153] = 71,
        [154] = 214,
        [155] = 238,
        [156] = 130,
        [157] = 140,
        [158] = 121,
        [159] = 56,
        [160] = 48,
        [161] = 175,
        [162] = 222,
        [163] = 10,
        [164] = 124,
        [165] = 143,
        [166] = 248,
        [167] = 103,
        [168] = 30,
        [169] = 139,
        [170] = 202,
        [171] = 28,
        [172] = 249,
        [173] = 109,
        [174] = 181,
        [175] = 200,
        [176] = 188,
        [177] = 137,
        [178] = 70,
        [179] = 90,
        [180] = 147,
        [181] = 154,
        [182] = 173,
        [183] = 2,
        [184] = 155,
        [185] = 40,
        [186] = 17,
        [187] = 9,
        [188] = 50,
        [189] = 72,
        [190] = 153,
        [191] = 123,
        [192] = 166,
        [193] = 243,
        [194] = 78,
        [195] = 237,
        [196] = 239,
        [197] = 224,
        [198] = 65,
        [199] = 201,
        [200] = 13,
        [201] = 41,
        [202] = 255,
        [203] = 68,
        [204] = 128,
        [205] = 86,
        [206] = 52,
        [207] = 156,
        [208] = 232,
        [209] = 182,
        [210] = 225,
        [211] = 57,
        [212] = 199,
        [213] = 89,
        [214] = 5,
        [215] = 62,
        [216] = 157,
        [217] = 85,
        [218] = 235,
        [219] = 177,
        [220] = 3,
        [221] = 77,
        [222] = 233,
        [223] = 1,
        [224] = 226,
        [225] = 15,
        [226] = 87,
        [227] = 54,
        [228] = 196,
        [229] = 203,
        [230] = 129,
        [231] = 64,
        [232] = 42,
        [233] = 149,
        [234] = 6,
        [235] = 61,
        [236] = 141,
        [237] = 167,
        [238] = 165,
        [239] = 195,
        [240] = 126,
        [241] = 92,
        [242] = 116,
        [243] = 183,
        [244] = 170,
        [245] = 19,
        [246] = 204,
        [247] = 31,
        [248] = 11,
        [249] = 63,
        [250] = 169,
        [251] = 191,
        [252] = 82,
        [253] = 176,
        [254] = 69,
        [255] = 158
      },
      To = {
        ["Pos"] = 18,
        ["Updated"] = true,
        [0] = 170,
        [1] = 130,
        [2] = 157,
        [3] = 164,
        [4] = 95,
        [5] = 58,
        [6] = 50,
        [7] = 41,
        [8] = 246,
        [9] = 88,
        [10] = 237,
        [11] = 234,
        [12] = 47,
        [13] = 69,
        [14] = 185,
        [15] = 103,
        [16] = 66,
        [17] = 147,
        [18] = 11,
        [19] = 176,
        [20] = 202,
        [21] = 140,
        [22] = 149,
        [23] = 110,
        [24] = 250,
        [25] = 253,
        [26] = 207,
        [27] = 17,
        [28] = 19,
        [29] = 118,
        [30] = 62,
        [31] = 162,
        [32] = 4,
        [33] = 105,
        [34] = 224,
        [35] = 98,
        [36] = 216,
        [37] = 226,
        [38] = 2,
        [39] = 73,
        [40] = 151,
        [41] = 204,
        [42] = 25,
        [43] = 67,
        [44] = 141,
        [45] = 65,
        [46] = 80,
        [47] = 7,
        [48] = 180,
        [49] = 21,
        [50] = 144,
        [51] = 252,
        [52] = 154,
        [53] = 249,
        [54] = 68,
        [55] = 159,
        [56] = 194,
        [57] = 27,
        [58] = 24,
        [59] = 101,
        [60] = 64,
        [61] = 198,
        [62] = 92,
        [63] = 40,
        [64] = 150,
        [65] = 6,
        [66] = 59,
        [67] = 34,
        [68] = 241,
        [69] = 243,
        [70] = 46,
        [71] = 61,
        [72] = 173,
        [73] = 126,
        [74] = 116,
        [75] = 81,
        [76] = 113,
        [77] = 222,
        [78] = 114,
        [79] = 31,
        [80] = 33,
        [81] = 210,
        [82] = 106,
        [83] = 200,
        [84] = 165,
        [85] = 242,
        [86] = 229,
        [87] = 8,
        [88] = 48,
        [89] = 85,
        [90] = 156,
        [91] = 35,
        [92] = 53,
        [93] = 236,
        [94] = 247,
        [95] = 16,
        [96] = 178,
        [97] = 129,
        [98] = 83,
        [99] = 171,
        [100] = 89,
        [101] = 10,
        [102] = 54,
        [103] = 12,
        [104] = 20,
        [105] = 82,
        [106] = 181,
        [107] = 102,
        [108] = 38,
        [109] = 134,
        [110] = 199,
        [111] = 196,
        [112] = 174,
        [113] = 72,
        [114] = 5,
        [115] = 251,
        [116] = 39,
        [117] = 231,
        [118] = 143,
        [119] = 55,
        [120] = 123,
        [121] = 52,
        [122] = 177,
        [123] = 86,
        [124] = 170,
        [125] = 158,
        [126] = 112,
        [127] = 23,
        [128] = 233,
        [129] = 14,
        [130] = 124,
        [131] = 100,
        [132] = 96,
        [133] = 109,
        [134] = 127,
        [135] = 146,
        [136] = 132,
        [137] = 9,
        [138] = 225,
        [139] = 71,
        [140] = 42,
        [141] = 139,
        [142] = 191,
        [143] = 240,
        [144] = 221,
        [145] = 137,
        [146] = 153,
        [147] = 115,
        [148] = 184,
        [149] = 29,
        [150] = 208,
        [151] = 122,
        [152] = 37,
        [153] = 155,
        [154] = 148,
        [155] = 254,
        [156] = 93,
        [157] = 3,
        [158] = 187,
        [159] = 195,
        [160] = 219,
        [161] = 217,
        [162] = 206,
        [163] = 133,
        [164] = 104,
        [165] = 79,
        [166] = 211,
        [167] = 192,
        [168] = 135,
        [169] = 167,
        [170] = 15,
        [171] = 145,
        [172] = 91,
        [173] = 45,
        [174] = 230,
        [175] = 56,
        [176] = 209,
        [177] = 70,
        [178] = 239,
        [179] = 179,
        [180] = 76,
        [181] = 190,
        [182] = 131,
        [183] = 235,
        [184] = 212,
        [185] = 255,
        [186] = 84,
        [187] = 51,
        [188] = 138,
        [189] = 244,
        [190] = 163,
        [191] = 97,
        [192] = 203,
        [193] = 161,
        [194] = 26,
        [195] = 248,
        [196] = 175,
        [197] = 238,
        [198] = 169,
        [199] = 245,
        [200] = 142,
        [201] = 201,
        [202] = 152,
        [203] = 0,
        [204] = 117,
        [205] = 218,
        [206] = 108,
        [207] = 78,
        [208] = 128,
        [209] = 125,
        [210] = 160,
        [211] = 44,
        [212] = 183,
        [213] = 57,
        [214] = 213,
        [215] = 28,
        [216] = 111,
        [217] = 232,
        [218] = 197,
        [219] = 223,
        [220] = 172,
        [221] = 49,
        [222] = 77,
        [223] = 227,
        [224] = 182,
        [225] = 193,
        [226] = 228,
        [227] = 43,
        [228] = 119,
        [229] = 75,
        [230] = 188,
        [231] = 22,
        [232] = 94,
        [233] = 168,
        [234] = 214,
        [235] = 107,
        [236] = 215,
        [237] = 189,
        [238] = 87,
        [239] = 186,
        [240] = 13,
        [241] = 18,
        [242] = 60,
        [243] = 36,
        [244] = 32,
        [245] = 136,
        [246] = 220,
        [247] = 90,
        [248] = 205,
        [249] = 120,
        [250] = 74,
        [251] = 30,
        [252] = 121,
        [253] = 166,
        [254] = 1,
        [255] = 63
      }
    }
    L1_1480["5.18"] = {
      Updated = false,
      Sent = false,
      Block = false,
      Verified = true,
      Verified2 = true,
      Analysis = {},
      Header = 192,
      vTable = 14909492,
      Size = 36,
      From = {
        ["Pos"] = 24,
        ["Updated"] = true,
        [0] = 87,
        [1] = 1,
        [2] = 221,
        [3] = 7,
        [4] = 144,
        [5] = 121,
        [6] = 198,
        [7] = 119,
        [8] = 100,
        [9] = 217,
        [10] = 169,
        [11] = 207,
        [12] = 115,
        [13] = 123,
        [14] = 188,
        [15] = 254,
        [16] = 84,
        [17] = 152,
        [18] = 104,
        [19] = 227,
        [20] = 172,
        [21] = 181,
        [22] = 16,
        [23] = 45,
        [24] = 245,
        [25] = 141,
        [26] = 184,
        [27] = 126,
        [28] = 208,
        [29] = 19,
        [30] = 25,
        [31] = 211,
        [32] = 95,
        [33] = 199,
        [34] = 49,
        [35] = 230,
        [36] = 43,
        [37] = 222,
        [38] = 14,
        [39] = 101,
        [40] = 213,
        [41] = 24,
        [42] = 158,
        [43] = 187,
        [44] = 97,
        [45] = 74,
        [46] = 36,
        [47] = 131,
        [48] = 247,
        [49] = 50,
        [50] = 223,
        [51] = 61,
        [52] = 224,
        [53] = 243,
        [54] = 156,
        [55] = 93,
        [56] = 212,
        [57] = 168,
        [58] = 53,
        [59] = 90,
        [60] = 250,
        [61] = 133,
        [62] = 109,
        [63] = 236,
        [64] = 129,
        [65] = 182,
        [66] = 34,
        [67] = 91,
        [68] = 128,
        [69] = 13,
        [70] = 112,
        [71] = 173,
        [72] = 107,
        [73] = 153,
        [74] = 41,
        [75] = 113,
        [76] = 248,
        [77] = 10,
        [78] = 154,
        [79] = 147,
        [80] = 183,
        [81] = 193,
        [82] = 229,
        [83] = 85,
        [84] = 67,
        [85] = 69,
        [86] = 206,
        [87] = 189,
        [88] = 210,
        [89] = 99,
        [90] = 88,
        [91] = 68,
        [92] = 225,
        [93] = 11,
        [94] = 31,
        [95] = 215,
        [96] = 118,
        [97] = 228,
        [98] = 2,
        [99] = 130,
        [100] = 216,
        [101] = 234,
        [102] = 200,
        [103] = 159,
        [104] = 195,
        [105] = 96,
        [106] = 240,
        [107] = 238,
        [108] = 72,
        [109] = 252,
        [110] = 28,
        [111] = 226,
        [112] = 37,
        [113] = 32,
        [114] = 47,
        [115] = 42,
        [116] = 89,
        [117] = 231,
        [118] = 98,
        [119] = 75,
        [120] = 66,
        [121] = 237,
        [122] = 102,
        [123] = 20,
        [124] = 38,
        [125] = 27,
        [126] = 22,
        [127] = 5,
        [128] = 108,
        [129] = 18,
        [130] = 46,
        [131] = 15,
        [132] = 39,
        [133] = 246,
        [134] = 56,
        [135] = 142,
        [136] = 192,
        [137] = 146,
        [138] = 17,
        [139] = 132,
        [140] = 203,
        [141] = 114,
        [142] = 196,
        [143] = 149,
        [144] = 78,
        [145] = 244,
        [146] = 9,
        [147] = 26,
        [148] = 179,
        [149] = 242,
        [150] = 178,
        [151] = 117,
        [152] = 111,
        [153] = 171,
        [154] = 33,
        [155] = 3,
        [156] = 103,
        [157] = 116,
        [158] = 180,
        [159] = 255,
        [160] = 249,
        [161] = 137,
        [162] = 58,
        [163] = 139,
        [164] = 71,
        [165] = 51,
        [166] = 174,
        [167] = 219,
        [168] = 185,
        [169] = 120,
        [170] = 110,
        [171] = 21,
        [172] = 148,
        [173] = 81,
        [174] = 48,
        [175] = 161,
        [176] = 83,
        [177] = 65,
        [178] = 197,
        [179] = 134,
        [180] = 194,
        [181] = 55,
        [182] = 135,
        [183] = 80,
        [184] = 205,
        [185] = 157,
        [186] = 214,
        [187] = 202,
        [188] = 94,
        [189] = 191,
        [190] = 77,
        [191] = 70,
        [192] = 52,
        [193] = 124,
        [194] = 57,
        [195] = 190,
        [196] = 44,
        [197] = 232,
        [198] = 23,
        [199] = 163,
        [200] = 4,
        [201] = 151,
        [202] = 209,
        [203] = 143,
        [204] = 86,
        [205] = 62,
        [206] = 125,
        [207] = 155,
        [208] = 167,
        [209] = 220,
        [210] = 150,
        [211] = 176,
        [212] = 40,
        [213] = 160,
        [214] = 73,
        [215] = 106,
        [216] = 218,
        [217] = 138,
        [218] = 162,
        [219] = 253,
        [220] = 29,
        [221] = 54,
        [222] = 251,
        [223] = 136,
        [224] = 82,
        [225] = 145,
        [226] = 92,
        [227] = 35,
        [228] = 60,
        [229] = 127,
        [230] = 165,
        [231] = 0,
        [232] = 175,
        [233] = 170,
        [234] = 239,
        [235] = 12,
        [236] = 79,
        [237] = 204,
        [238] = 186,
        [239] = 140,
        [240] = 122,
        [241] = 59,
        [242] = 63,
        [243] = 164,
        [244] = 166,
        [245] = 233,
        [246] = 8,
        [247] = 177,
        [248] = 241,
        [249] = 235,
        [250] = 76,
        [251] = 201,
        [252] = 105,
        [253] = 6,
        [254] = 30,
        [255] = 64
      },
      To = {
        ["Pos"] = 12,
        ["Updated"] = true,
        [0] = 16,
        [1] = 37,
        [2] = 183,
        [3] = 201,
        [4] = 131,
        [5] = 81,
        [6] = 158,
        [7] = 49,
        [8] = 249,
        [9] = 109,
        [10] = 100,
        [11] = 228,
        [12] = 147,
        [13] = 244,
        [14] = 79,
        [15] = 8,
        [16] = 71,
        [17] = 215,
        [18] = 52,
        [19] = 198,
        [20] = 141,
        [21] = 38,
        [22] = 15,
        [23] = 217,
        [24] = 87,
        [25] = 48,
        [26] = 255,
        [27] = 159,
        [28] = 70,
        [29] = 36,
        [30] = 32,
        [31] = 106,
        [32] = 107,
        [33] = 251,
        [34] = 30,
        [35] = 64,
        [36] = 214,
        [37] = 126,
        [38] = 233,
        [39] = 75,
        [40] = 140,
        [41] = 227,
        [42] = 208,
        [43] = 204,
        [44] = 50,
        [45] = 185,
        [46] = 61,
        [47] = 42,
        [48] = 168,
        [49] = 180,
        [50] = 17,
        [51] = 73,
        [52] = 241,
        [53] = 14,
        [54] = 186,
        [55] = 157,
        [56] = 123,
        [57] = 121,
        [58] = 41,
        [59] = 68,
        [60] = 54,
        [61] = 112,
        [62] = 223,
        [63] = 248,
        [64] = 250,
        [65] = 88,
        [66] = 222,
        [67] = 92,
        [68] = 55,
        [69] = 197,
        [70] = 46,
        [71] = 218,
        [72] = 240,
        [73] = 175,
        [74] = 165,
        [75] = 129,
        [76] = 128,
        [77] = 7,
        [78] = 83,
        [79] = 252,
        [80] = 210,
        [81] = 164,
        [82] = 207,
        [83] = 105,
        [84] = 173,
        [85] = 57,
        [86] = 245,
        [87] = 219,
        [88] = 1,
        [89] = 211,
        [90] = 6,
        [91] = 238,
        [92] = 84,
        [93] = 213,
        [94] = 200,
        [95] = 192,
        [96] = 65,
        [97] = 161,
        [98] = 67,
        [99] = 152,
        [100] = 117,
        [101] = 3,
        [102] = 171,
        [103] = 26,
        [104] = 90,
        [105] = 125,
        [106] = 19,
        [107] = 253,
        [108] = 195,
        [109] = 239,
        [110] = 254,
        [111] = 247,
        [112] = 230,
        [113] = 156,
        [114] = 235,
        [115] = 51,
        [116] = 43,
        [117] = 39,
        [118] = 113,
        [119] = 206,
        [120] = 142,
        [121] = 114,
        [122] = 205,
        [123] = 5,
        [124] = 139,
        [125] = 189,
        [126] = 77,
        [127] = 153,
        [128] = 146,
        [129] = 167,
        [130] = 138,
        [131] = 104,
        [132] = 116,
        [133] = 62,
        [134] = 155,
        [135] = 102,
        [136] = 137,
        [137] = 169,
        [138] = 118,
        [139] = 53,
        [140] = 145,
        [141] = 25,
        [142] = 122,
        [143] = 242,
        [144] = 203,
        [145] = 89,
        [146] = 40,
        [147] = 202,
        [148] = 66,
        [149] = 44,
        [150] = 22,
        [151] = 11,
        [152] = 163,
        [153] = 234,
        [154] = 135,
        [155] = 236,
        [156] = 93,
        [157] = 78,
        [158] = 149,
        [159] = 232,
        [160] = 174,
        [161] = 162,
        [162] = 101,
        [163] = 33,
        [164] = 212,
        [165] = 58,
        [166] = 29,
        [167] = 24,
        [168] = 10,
        [169] = 59,
        [170] = 237,
        [171] = 0,
        [172] = 221,
        [173] = 21,
        [174] = 45,
        [175] = 191,
        [176] = 63,
        [177] = 193,
        [178] = 216,
        [179] = 2,
        [180] = 130,
        [181] = 187,
        [182] = 154,
        [183] = 85,
        [184] = 190,
        [185] = 226,
        [186] = 91,
        [187] = 20,
        [188] = 220,
        [189] = 181,
        [190] = 224,
        [191] = 148,
        [192] = 9,
        [193] = 72,
        [194] = 69,
        [195] = 178,
        [196] = 133,
        [197] = 144,
        [198] = 160,
        [199] = 60,
        [200] = 76,
        [201] = 231,
        [202] = 177,
        [203] = 199,
        [204] = 143,
        [205] = 179,
        [206] = 134,
        [207] = 80,
        [208] = 151,
        [209] = 82,
        [210] = 86,
        [211] = 119,
        [212] = 94,
        [213] = 170,
        [214] = 243,
        [215] = 182,
        [216] = 27,
        [217] = 115,
        [218] = 209,
        [219] = 56,
        [220] = 136,
        [221] = 184,
        [222] = 96,
        [223] = 188,
        [224] = 108,
        [225] = 98,
        [226] = 111,
        [227] = 12,
        [228] = 196,
        [229] = 150,
        [230] = 97,
        [231] = 99,
        [232] = 172,
        [233] = 35,
        [234] = 13,
        [235] = 18,
        [236] = 246,
        [237] = 132,
        [238] = 120,
        [239] = 34,
        [240] = 110,
        [241] = 194,
        [242] = 127,
        [243] = 176,
        [244] = 95,
        [245] = 103,
        [246] = 124,
        [247] = 225,
        [248] = 47,
        [249] = 166,
        [250] = 23,
        [251] = 4,
        [252] = 229,
        [253] = 74,
        [254] = 28,
        [255] = 31
      }
    }
    A0_1479.Versions = L1_1480
    L1_1480 = A0_1479.Versions
    L1_1480 = L1_1480[string.sub(GetGameVersion(), 0, 4)]
    if L1_1480 ~= nil then
      L1_1480 = A0_1479.Versions
      L1_1480 = L1_1480[string.sub(GetGameVersion(), 0, 4)]
      A0_1479.Packets = L1_1480
    end
    L1_1480 = "LastRequest"
    A0_1479[L1_1480] = 0
    L1_1480 = "Storm"
    A0_1479[L1_1480] = nil
    L1_1480 = "StartTime"
    A0_1479[L1_1480] = os.clock()
  end
  function __Viktor.OnTick(A0_1481)
    local L1_1482, L2_1483, L3_1484
    L1_1482 = 0
    L1_1482 = _ENV[L1_1482]
    if not L1_1482 then
      return
    end
    L1_1482 = L1_1482 * L1_1482
    L1_1482 = myHero
    L1_1482 = L1_1482.dead
    if not L1_1482 then
      L1_1482 = A0_1481.Menu
      if L1_1482 ~= nil then
        L1_1482 = A0_1481.MenuLoaded
      end
    elseif not L1_1482 then
      return
    end
    L1_1482 = A0_1481.W
    L1_1482.Delay = 0
    L1_1482 = A0_1481.W
    L1_1482.Width = L2_1483
    L1_1482 = A0_1481.Storm
    if L1_1482 ~= nil then
      L1_1482 = A0_1481.R
      L1_1482.Speed = L2_1483
      L1_1482 = A0_1481.R
      L1_1482.Delay = L2_1483
      L1_1482 = A0_1481.R
      L1_1482.Range = L2_1483
      L1_1482 = A0_1481.Storm
      A0_1481.Source = L1_1482
    else
      L1_1482 = A0_1481.R
      L1_1482.Speed = L2_1483
      L1_1482 = A0_1481.R
      L1_1482.Delay = L2_1483
      L1_1482 = A0_1481.R
      L1_1482.Range = L2_1483
      L1_1482 = myHero
      A0_1481.Source = L1_1482
    end
    L1_1482 = A0_1481.KillSteal
    L1_1482(L2_1483)
    L1_1482 = OrbwalkManager
    L1_1482 = L1_1482.IsCombo
    L1_1482 = L1_1482(L2_1483)
    if L1_1482 then
      L1_1482 = A0_1481.Combo
      L1_1482(L2_1483)
    else
      L1_1482 = OrbwalkManager
      L1_1482 = L1_1482.IsHarass
      L1_1482 = L1_1482(L2_1483)
      if L1_1482 then
        L1_1482 = A0_1481.Harass
        L1_1482(L2_1483)
      else
        L1_1482 = OrbwalkManager
        L1_1482 = L1_1482.IsClear
        L1_1482 = L1_1482(L2_1483)
        if L1_1482 then
          L1_1482 = A0_1481.Clear
          L1_1482(L2_1483)
        else
          L1_1482 = OrbwalkManager
          L1_1482 = L1_1482.IsLastHit
          L1_1482 = L1_1482(L2_1483)
          if L1_1482 then
            L1_1482 = A0_1481.LastHit
            L1_1482(L2_1483)
          end
        end
      end
    end
    L1_1482 = A0_1481.Menu
    L1_1482 = L1_1482.Keys
    L1_1482 = L1_1482.HarassToggle
    if L1_1482 then
      L1_1482 = A0_1481.Harass
      L1_1482(L2_1483)
    end
    L1_1482 = A0_1481.Storm
    if L1_1482 ~= nil then
      L1_1482 = A0_1481.Menu
      L1_1482 = L1_1482.General
      L1_1482 = L1_1482.AutoFollow
      if L1_1482 then
        L1_1482 = os
        L1_1482 = L1_1482.clock
        L1_1482 = L1_1482()
        L1_1482 = L1_1482 - L2_1483
        if L1_1482 > 0.2 then
          L1_1482 = A0_1481.TS
          L1_1482 = L1_1482.target
          if L2_1483 then
            L2_1483(L3_1484, L1_1482)
          else
            if L3_1484 then
              L3_1484(L3_1484, L2_1483)
            end
            if A0_1481.R:ValidTarget(L3_1484) then
              A0_1481.R:CastToVector(L3_1484)
            end
          end
        end
      end
    end
    L1_1482 = A0_1481.Packets
    L1_1482 = L1_1482.Updated
    if not L1_1482 then
      L1_1482 = os
      L1_1482 = L1_1482.clock
      L1_1482 = L1_1482()
      L1_1482 = L1_1482 - L2_1483
      if L1_1482 > 20 then
        L1_1482 = A0_1481.Packets
        L1_1482 = L1_1482.Sent
        if not L1_1482 then
          L1_1482 = A0_1481.FindValues
          L1_1482(L2_1483, L3_1484, L3_1484(A0_1481))
        else
          L1_1482 = 0
          for _FORV_5_ = 0, 255 do
            if not A0_1481.Packets.Verified and A0_1481.Packets.From[_FORV_5_] == nil then
              L1_1482 = L1_1482 + 1
            end
            if A0_1481.Packets.To[_FORV_5_] == nil then
              L1_1482 = L1_1482 + 1
            end
          end
          if L1_1482 > 0 then
            L2_1483(L3_1484, A0_1481:GenerateRandomPosition())
          elseif L2_1483 then
            L2_1483.Updated = true
          end
        end
      end
    end
  end
  function __Viktor.KillSteal(A0_1485)
    local L1_1486, L2_1487, L3_1488, L4_1489, L5_1490
    if not L1_1486 then
      return
    end
    L5_1490 = L2_1487()
    for L4_1489, L5_1490 in L1_1486(L2_1487, L3_1488, L4_1489, L5_1490, L2_1487()) do
      if IsValidTarget(L5_1490, A0_1485.TS.range) and L5_1490.health > 0 and PercentageHealth(L5_1490) <= 35 then
        if GetBestCombo(L5_1490, A0_1485) >= L5_1490.health then
          if A0_1485.Menu.KillSteal.Q and (GetBestCombo(L5_1490, A0_1485) or A0_1485.Q:Damage(L5_1490) > L5_1490.health) then
            A0_1485.Q:Cast(L5_1490)
          end
          if A0_1485.Menu.KillSteal.W and GetBestCombo(L5_1490, A0_1485) then
            A0_1485:CastW(L5_1490)
          end
          if A0_1485.Menu.KillSteal.E and (GetBestCombo(L5_1490, A0_1485) or A0_1485.E:Damage(L5_1490) > L5_1490.health) then
            A0_1485:CastE(L5_1490)
          end
          if A0_1485.Menu.KillSteal.R and A0_1485.R:Damage(L5_1490) > L5_1490.health and IsValidTarget(A0_1485.TS.target) and L5_1490.networkID ~= A0_1485.TS.target.networkID then
            A0_1485:CastR(L5_1490)
          end
        end
        if A0_1485.Menu.KillSteal.Ignite and A3_3:IsReady() and A3_3:Damage(L5_1490) > L5_1490.health then
          A3_3:Cast(L5_1490)
        end
      end
    end
  end
  function __Viktor.GetBestComboR(A0_1491, A1_1492)
    local L2_1493, L3_1494, L4_1495, L5_1496, L6_1497, L7_1498, L8_1499, L9_1500, L10_1501, L11_1502, L12_1503, L13_1504
    L2_1493 = 0
    L2_1493 = _ENV[L2_1493]
    if not L2_1493 then
      return
    end
    L2_1493 = L2_1493 * L2_1493
    L2_1493 = A0_1491.Menu
    L2_1493 = L2_1493.Combo
    L2_1493 = L2_1493.Cooldown
    L3_1494 = A0_1491.Q
    L4_1495 = L3_1494
    L3_1494 = L3_1494.GetSpellData
    L3_1494 = L3_1494(L4_1495)
    if L3_1494 ~= nil then
      L3_1494 = A0_1491.Q
      L4_1495 = L3_1494
      L3_1494 = L3_1494.GetSpellData
      L3_1494 = L3_1494(L4_1495)
      L3_1494 = L3_1494.currentCd
      if L3_1494 ~= nil then
        L3_1494 = A0_1491.Q
        L4_1495 = L3_1494
        L3_1494 = L3_1494.GetSpellData
        L3_1494 = L3_1494(L4_1495)
        L3_1494 = L3_1494.currentCd
      end
    else
      L3_1494 = L3_1494 or 10
    end
    L4_1495 = A0_1491.W
    L5_1496 = L4_1495
    L4_1495 = L4_1495.GetSpellData
    L4_1495 = L4_1495(L5_1496)
    if L4_1495 ~= nil then
      L4_1495 = A0_1491.W
      L5_1496 = L4_1495
      L4_1495 = L4_1495.GetSpellData
      L4_1495 = L4_1495(L5_1496)
      L4_1495 = L4_1495.currentCd
      if L4_1495 ~= nil then
        L4_1495 = A0_1491.W
        L5_1496 = L4_1495
        L4_1495 = L4_1495.GetSpellData
        L4_1495 = L4_1495(L5_1496)
        L4_1495 = L4_1495.currentCd
      end
    else
      L4_1495 = L4_1495 or 10
    end
    L5_1496 = A0_1491.E
    L6_1497 = L5_1496
    L5_1496 = L5_1496.GetSpellData
    L5_1496 = L5_1496(L6_1497)
    if L5_1496 ~= nil then
      L5_1496 = A0_1491.E
      L6_1497 = L5_1496
      L5_1496 = L5_1496.GetSpellData
      L5_1496 = L5_1496(L6_1497)
      L5_1496 = L5_1496.currentCd
      if L5_1496 ~= nil then
        L5_1496 = A0_1491.E
        L6_1497 = L5_1496
        L5_1496 = L5_1496.GetSpellData
        L5_1496 = L5_1496(L6_1497)
        L5_1496 = L5_1496.currentCd
      end
    else
      L5_1496 = L5_1496 or 15
    end
    L6_1497 = A0_1491.Q
    L7_1498 = L6_1497
    L6_1497 = L6_1497.IsReady
    L6_1497 = L6_1497(L7_1498)
    L6_1497 = L6_1497 or L2_1493 > L3_1494
    L7_1498 = A0_1491.W
    L8_1499 = L7_1498
    L7_1498 = L7_1498.IsReady
    L7_1498 = L7_1498(L8_1499)
    L7_1498 = L7_1498 or L2_1493 > L4_1495
    L8_1499 = A0_1491.E
    L9_1500 = L8_1499
    L8_1499 = L8_1499.IsReady
    L8_1499 = L8_1499(L9_1500)
    L8_1499 = L8_1499 or L2_1493 > L5_1496
    L9_1500 = {L10_1501}
    L10_1501 = false
    L10_1501 = {L11_1502}
    L11_1502 = false
    L11_1502 = {L12_1503}
    L12_1503 = false
    if L6_1497 then
      L12_1503 = {L13_1504, true}
      L13_1504 = false
      L9_1500 = L12_1503
    end
    if L7_1498 then
      L12_1503 = {L13_1504, true}
      L13_1504 = false
      L10_1501 = L12_1503
    end
    if L8_1499 then
      L12_1503 = {L13_1504, true}
      L13_1504 = false
      L11_1502 = L12_1503
    end
    L12_1503 = nil
    L13_1504 = {
      false,
      false,
      false,
      false
    }
    if L6_1497 or L7_1498 or L8_1499 then
      for _FORV_17_ = 1, #L9_1500 do
        for _FORV_21_ = 1, #L10_1501 do
          for _FORV_25_ = 1, #L11_1502 do
            if A0_1491:GetComboDamage(A1_1492, L9_1500[_FORV_17_], L10_1501[_FORV_21_], L11_1502[_FORV_25_], false) >= A1_1492.health and A0_1491:GetComboDamage(A1_1492, L9_1500[_FORV_17_], L10_1501[_FORV_21_], L11_1502[_FORV_25_], false) <= myHero.mana then
              if L12_1503 == nil then
                L12_1503, L13_1504 = A0_1491:GetComboDamage(A1_1492, L9_1500[_FORV_17_], L10_1501[_FORV_21_], L11_1502[_FORV_25_], false)
                L12_1503, L13_1504 = A0_1491:GetComboDamage(A1_1492, L9_1500[_FORV_17_], L10_1501[_FORV_21_], L11_1502[_FORV_25_], false)
              elseif L12_1503 > A0_1491:GetComboDamage(A1_1492, L9_1500[_FORV_17_], L10_1501[_FORV_21_], L11_1502[_FORV_25_], false) then
                L12_1503, L13_1504 = A0_1491:GetComboDamage(A1_1492, L9_1500[_FORV_17_], L10_1501[_FORV_21_], L11_1502[_FORV_25_], false)
                L12_1503, L13_1504 = A0_1491:GetComboDamage(A1_1492, L9_1500[_FORV_17_], L10_1501[_FORV_21_], L11_1502[_FORV_25_], false)
              end
            end
          end
        end
      end
    end
    if L12_1503 == nil then
      L12_1503 = 0
    end
    return L13_1504[1], L13_1504[2], L13_1504[3], L13_1504[4], L12_1503
  end
  function __Viktor.Combo(A0_1505)
    local L1_1506, L2_1507, L3_1508, L4_1509, L5_1510, L6_1511, L7_1512, L8_1513, L9_1514, L10_1515, L11_1516, L12_1517, L13_1518, L14_1519
    L1_1506 = 0
    L1_1506 = _ENV[L1_1506]
    if not L1_1506 then
      return
    end
    L1_1506 = L1_1506 * L1_1506
    L1_1506 = A0_1505.TS
    L1_1506 = L1_1506.target
    L2_1507 = IsValidTarget
    L3_1508 = L1_1506
    L2_1507 = L2_1507(L3_1508)
    if L2_1507 then
      L2_1507 = GetBestCombo
      L3_1508 = L1_1506
      L4_1509 = A0_1505
      L6_1511 = L2_1507(L3_1508, L4_1509)
      if L7_1512 > 0 then
        if L7_1512 <= L8_1513 then
          if L7_1512 then
            L7_1512(L8_1513)
          end
        end
      end
      if L7_1512 then
        L7_1512(L8_1513, L9_1514)
      end
      if L7_1512 then
        L7_1512(L8_1513, L9_1514)
      end
      if L7_1512 == 1 then
        if L7_1512 > 1 then
          if L7_1512 == 2 then
            if L7_1512 then
              L10_1515 = myHero
              if L8_1513 then
                L10_1515 = L9_1514
                L10_1515 = L9_1514
                if L8_1513 >= L9_1514 then
                  L10_1515 = L1_1506
                  L8_1513(L9_1514, L10_1515)
                end
              end
            end
          elseif L7_1512 == 3 then
            L7_1512(L8_1513, L9_1514)
          end
        end
      elseif L7_1512 == 2 then
        L14_1519 = L8_1513()
        for L10_1515, L11_1516 in L7_1512(L8_1513, L9_1514, L10_1515, L11_1516, L12_1517, L13_1518, L14_1519, L8_1513()) do
          L12_1517 = A0_1505.Q
          L13_1518 = L12_1517
          L12_1517 = L12_1517.ValidTarget
          L14_1519 = L11_1516
          L12_1517 = L12_1517(L13_1518, L14_1519)
          if L12_1517 then
            L12_1517 = A0_1505.Menu
            L12_1517 = L12_1517.Combo
            L12_1517 = L12_1517.Q
            if L12_1517 > 1 then
              L12_1517 = A0_1505.Menu
              L12_1517 = L12_1517.Combo
              L12_1517 = L12_1517.Q
              if L12_1517 == 2 then
                L12_1517 = OrbwalkManager
                L13_1518 = L12_1517
                L12_1517 = L12_1517.InRange
                L14_1519 = L11_1516
                L12_1517 = L12_1517(L13_1518, L14_1519)
                if L12_1517 then
                  L12_1517 = A0_1505.Q
                  L12_1517 = L12_1517.Delay
                  L13_1518 = GetDistance
                  L14_1519 = L11_1516
                  L13_1518 = L13_1518(L14_1519, myHero)
                  L14_1519 = A0_1505.Q
                  L14_1519 = L14_1519.Speed
                  L13_1518 = L13_1518 / L14_1519
                  L12_1517 = L12_1517 + L13_1518
                  L13_1518 = OrbwalkManager
                  L14_1519 = L13_1518
                  L13_1518 = L13_1518.CanMove
                  L13_1518 = L13_1518(L14_1519)
                  if L13_1518 then
                    L13_1518 = OrbwalkManager
                    L14_1519 = L13_1518
                    L13_1518 = L13_1518.GetTime
                    L13_1518 = L13_1518(L14_1519)
                    L14_1519 = OrbwalkManager
                    L14_1519 = L14_1519.AA
                    L14_1519 = L14_1519.LastTime
                    L13_1518 = L13_1518 - L14_1519
                    L14_1519 = OrbwalkManager
                    L14_1519 = L14_1519.Latency
                    L14_1519 = L14_1519(L14_1519)
                    L13_1518 = L13_1518 + L14_1519
                    L14_1519 = OrbwalkManager
                    L14_1519 = L14_1519.AnimationTime
                    L14_1519 = L14_1519(L14_1519)
                    L14_1519 = 1 * L14_1519
                    L14_1519 = L14_1519 - L12_1517
                    L14_1519 = L14_1519 - 0.025
                    if L13_1518 >= L14_1519 then
                      L13_1518 = A0_1505.Q
                      L14_1519 = L13_1518
                      L13_1518 = L13_1518.Cast
                      L13_1518(L14_1519, L11_1516)
                    end
                  end
                end
              else
                L12_1517 = A0_1505.Menu
                L12_1517 = L12_1517.Combo
                L12_1517 = L12_1517.Q
                if L12_1517 == 3 then
                  L12_1517 = A0_1505.Q
                  L13_1518 = L12_1517
                  L12_1517 = L12_1517.Cast
                  L14_1519 = L11_1516
                  L12_1517(L13_1518, L14_1519)
                end
              end
            end
          end
        end
      end
      if L7_1512 > 1 then
        if L7_1512 then
          if L9_1514 == 2 then
            if L6_1511 >= L9_1514 and L5_1510 then
              L10_1515 = GetEnemyHeroes
              L10_1515 = L10_1515()
              L11_1516 = 1000
              L12_1517 = myHero
              if L9_1514 <= 3 and L8_1513 then
                L10_1515 = A0_1505
                L11_1516 = L1_1506
                L9_1514(L10_1515, L11_1516)
              end
            end
          elseif L9_1514 == 3 then
            if L6_1511 >= L9_1514 then
              L10_1515 = L9_1514
              L11_1516 = L1_1506
              L10_1515 = L1_1506.health
              if L9_1514 >= L10_1515 then
                L10_1515 = A0_1505
                L11_1516 = L1_1506
                L13_1518 = L9_1514(L10_1515, L11_1516)
                L14_1519 = L1_1506.health
                if not (L13_1518 < L14_1519) then
                  L14_1519 = PercentageHealth
                  L14_1519 = L14_1519()
                  if L14_1519 <= PercentageHealth(L1_1506) then
                    L14_1519 = PercentageHealth
                    L14_1519 = L14_1519()
                  end
                elseif L14_1519 <= 40 then
                  L14_1519 = A0_1505.CastR
                  L14_1519(A0_1505, L1_1506)
                end
              end
            end
          elseif L9_1514 == 4 then
            L10_1515 = A0_1505
            L11_1516 = L1_1506
            L9_1514(L10_1515, L11_1516)
          end
        end
      end
      if L7_1512 > 0 then
        if L7_1512 then
          L14_1519 = L8_1513()
          for L10_1515, L11_1516 in L7_1512(L8_1513, L9_1514, L10_1515, L11_1516, L12_1517, L13_1518, L14_1519, L8_1513()) do
            L12_1517 = A0_1505.R
            L13_1518 = L12_1517
            L12_1517 = L12_1517.ValidTarget
            L14_1519 = L11_1516
            L12_1517 = L12_1517(L13_1518, L14_1519)
            if L12_1517 then
              L12_1517 = A0_1505.R
              L13_1518 = L12_1517
              L12_1517 = L12_1517.GetPrediction
              L14_1519 = L11_1516
              L14_1519 = L12_1517(L13_1518, L14_1519, {
                TypeOfPrediction = "VPrediction"
              })
              if L12_1517 and L14_1519 and type(L14_1519) == "number" and L14_1519 >= A0_1505.Menu.Combo.R2 and L13_1518 then
                A0_1505.R:CastToVector(L12_1517)
              end
            end
          end
        end
      end
      if L7_1512 > 0 then
        if L7_1512 then
          L14_1519 = L8_1513()
          for L10_1515, L11_1516 in L7_1512(L8_1513, L9_1514, L10_1515, L11_1516, L12_1517, L13_1518, L14_1519, L8_1513()) do
            L12_1517 = A0_1505.W
            L13_1518 = L12_1517
            L12_1517 = L12_1517.ValidTarget
            L14_1519 = L11_1516
            L12_1517 = L12_1517(L13_1518, L14_1519)
            if L12_1517 then
              L12_1517 = A0_1505.W
              L13_1518 = L12_1517
              L12_1517 = L12_1517.GetPrediction
              L14_1519 = L11_1516
              L14_1519 = L12_1517(L13_1518, L14_1519, {
                TypeOfPrediction = "VPrediction"
              })
              if L12_1517 and L14_1519 and type(L14_1519) == "number" and L14_1519 >= A0_1505.Menu.Combo.W3 and L13_1518 then
                A0_1505.R:CastToVector(L12_1517)
              end
            end
          end
        end
      end
    end
  end
  function __Viktor.Harass(A0_1520)
    local L1_1521, L2_1522, L3_1523, L4_1524, L5_1525, L6_1526
    L1_1521 = 0
    L1_1521 = _ENV[L1_1521]
    if not L1_1521 then
      return
    end
    L1_1521 = L1_1521 * L1_1521
    L1_1521 = PercentageMana
    L1_1521 = L1_1521()
    if L1_1521 >= L2_1522 then
      L1_1521 = A0_1520.TS
      L1_1521 = L1_1521.target
      if L2_1522 then
        if L2_1522 then
          if L2_1522 then
            if L2_1522 then
              return
            end
          end
        end
        if L2_1522 then
          L2_1522(L3_1523, L4_1524)
        end
        if L2_1522 then
          L2_1522(L3_1523, L4_1524)
        end
        if L2_1522 == 1 then
          if L2_1522 > 1 then
            if L2_1522 == 2 then
              if L2_1522 then
                L5_1525 = myHero
                if L3_1523 then
                  L5_1525 = L4_1524
                  L5_1525 = L4_1524
                  if L3_1523 >= L4_1524 then
                    L5_1525 = L1_1521
                    L3_1523(L4_1524, L5_1525)
                  end
                end
              end
            elseif L2_1522 == 3 then
              L2_1522(L3_1523, L4_1524)
            end
          end
        elseif L2_1522 == 2 then
          L6_1526 = L3_1523()
          for L5_1525, L6_1526 in L2_1522(L3_1523, L4_1524, L5_1525, L6_1526, L3_1523()) do
            if A0_1520.Q:ValidTarget(L6_1526) and 1 < A0_1520.Menu.Harass.Q then
              if A0_1520.Menu.Harass.Q == 2 then
                if OrbwalkManager:InRange(L6_1526) and OrbwalkManager:CanMove() and OrbwalkManager:GetTime() - OrbwalkManager.AA.LastTime + OrbwalkManager:Latency() >= 1 * OrbwalkManager:AnimationTime() - (A0_1520.Q.Delay + GetDistance(L6_1526, myHero) / A0_1520.Q.Speed) - 0.025 then
                  A0_1520.Q:Cast(L6_1526)
                end
              elseif A0_1520.Menu.Harass.Q == 3 then
                A0_1520.Q:Cast(L6_1526)
              end
            end
          end
        end
      end
    end
  end
  function __Viktor.Clear(A0_1527)
    local L1_1528, L2_1529
    L1_1528 = 0
    L1_1528 = _ENV[L1_1528]
    if not L1_1528 then
      return
    end
    L1_1528 = L1_1528 * L1_1528
    L1_1528 = OrbwalkManager
    L2_1529 = L1_1528
    L1_1528 = L1_1528.GetClearMode
    L1_1528 = L1_1528(L2_1529)
    if L1_1528 ~= nil then
      L2_1529 = L1_1528.find
      L2_1529 = L2_1529(L1_1528, "lane")
      if L2_1529 then
        L2_1529 = PercentageMana
        L2_1529 = L2_1529()
        if L2_1529 >= A0_1527.Menu.LaneClear.Mana then
          L2_1529 = A0_1527.Q
          L2_1529 = L2_1529.EnemyMinions
          L2_1529 = L2_1529.update
          L2_1529(L2_1529)
          L2_1529 = A0_1527.Q
          L2_1529 = L2_1529.EnemyMinions
          L2_1529 = L2_1529.objects
          L2_1529 = #L2_1529
          if L2_1529 >= A0_1527.Menu.LaneClear.Q then
            L2_1529 = A0_1527.Q
            L2_1529 = L2_1529.LaneClear
            L2_1529(L2_1529)
          end
          L2_1529 = A0_1527.W
          L2_1529 = L2_1529.LaneClear
          L2_1529(L2_1529, {
            NumberOfHits = A0_1527.Menu.LaneClear.W
          })
          L2_1529 = A0_1527.E
          L2_1529 = L2_1529.EnemyMinions
          L2_1529 = L2_1529.update
          L2_1529(L2_1529)
          L2_1529 = A0_1527.E
          L2_1529 = L2_1529.EnemyMinions
          L2_1529 = L2_1529.objects
          L2_1529 = #L2_1529
          if L2_1529 >= A0_1527.Menu.LaneClear.E then
            L2_1529 = A0_1527.Menu
            L2_1529 = L2_1529.LaneClear
            L2_1529 = L2_1529.E
            if L2_1529 > 0 then
              L2_1529 = A0_1527.BestHitE
              L2_1529 = L2_1529(A0_1527, nil, A0_1527.E.EnemyMinions.objects)
              if L2_1529 and L2_1529(A0_1527, nil, A0_1527.E.EnemyMinions.objects) and L2_1529(A0_1527, nil, A0_1527.E.EnemyMinions.objects) and L2_1529(A0_1527, nil, A0_1527.E.EnemyMinions.objects) >= A0_1527.Menu.LaneClear.E then
                A0_1527.E.LastCastAttempt = os.clock()
                A0_1527.E.endCastedPos = L2_1529(A0_1527, nil, A0_1527.E.EnemyMinions.objects)
                A0_1527.E.Sent = true
                A0_1527.E:CastToVector(L2_1529)
                A0_1527.E.Sent = false
              end
            end
          end
          L2_1529 = A0_1527.Menu
          L2_1529 = L2_1529.LastHit
          L2_1529 = L2_1529.Q
          if L2_1529 > 1 then
            L2_1529 = A0_1527.Q
            L2_1529 = L2_1529.LastHit
            L2_1529(L2_1529)
          end
          L2_1529 = A0_1527.Menu
          L2_1529 = L2_1529.LastHit
          L2_1529 = L2_1529.E
          if L2_1529 > 1 then
            L2_1529 = A0_1527.ELastHit
            L2_1529(A0_1527)
          end
        end
      else
        L2_1529 = A0_1527.Menu
        L2_1529 = L2_1529.JungleClear
        L2_1529 = L2_1529.E
        if L2_1529 then
          L2_1529 = A0_1527.CastE
          L2_1529(A0_1527, A0_1527.E:JungleClear({UseCast = false}))
        end
        L2_1529 = A0_1527.Menu
        L2_1529 = L2_1529.JungleClear
        L2_1529 = L2_1529.W
        if L2_1529 then
          L2_1529 = A0_1527.W
          L2_1529 = L2_1529.JungleClear
          L2_1529(L2_1529)
        end
        L2_1529 = A0_1527.Menu
        L2_1529 = L2_1529.JungleClear
        L2_1529 = L2_1529.Q
        if L2_1529 then
          L2_1529 = A0_1527.Q
          L2_1529 = L2_1529.JungleClear
          L2_1529(L2_1529)
        end
      end
    end
  end
  function __Viktor.LastHit(A0_1530)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_1530.Menu.LastHit.Mana then
      A0_1530.Q:LastHit({
        Mode = A0_1530.Menu.LastHit.Q
      })
      A0_1530:ELastHit({
        Mode = A0_1530.Menu.LastHit.E
      })
    end
  end
  function __Viktor.CastW(A0_1531, A1_1532)
    local L2_1533, L3_1534, L4_1535
    L2_1533 = 0
    L2_1533 = _ENV[L2_1533]
    if not L2_1533 then
      return
    end
    L2_1533 = L2_1533 * L2_1533
    L2_1533 = A0_1531.W
    L3_1534 = L2_1533
    L2_1533 = L2_1533.IsReady
    L2_1533 = L2_1533(L3_1534)
    if L2_1533 then
      L2_1533 = A0_1531.W
      L3_1534 = L2_1533
      L2_1533 = L2_1533.ValidTarget
      L4_1535 = A1_1532
      L2_1533 = L2_1533(L3_1534, L4_1535)
      if L2_1533 then
        L2_1533 = 60
        L3_1534 = A0_1531.W
        L4_1535 = L3_1534
        L3_1534 = L3_1534.PredictionSelected
        L3_1534 = L3_1534(L4_1535)
        if L3_1534 == "VPrediction" then
          L4_1535 = A0_1531.W
          L4_1535 = L4_1535.GetAccuracy
          L4_1535 = L4_1535(L4_1535)
          L2_1533 = L4_1535
        elseif L3_1534 == "HPrediction" then
          L4_1535 = A0_1531.W
          L4_1535 = L4_1535.GetAccuracy
          L4_1535 = L4_1535(L4_1535)
          L2_1533 = L4_1535 - 25
        elseif L3_1534 == "DivinePred" then
          L3_1534 = "VPrediction"
          L4_1535 = A0_1531.W
          L4_1535 = L4_1535.GetAccuracy
          L4_1535 = L4_1535(L4_1535)
          L2_1533 = L4_1535
        end
        L4_1535 = math
        L4_1535 = L4_1535.max
        L4_1535 = L4_1535(L2_1533, 0)
        L2_1533 = L4_1535
        L4_1535 = A0_1531.W
        L4_1535 = L4_1535.GetPrediction
        L4_1535 = L4_1535(L4_1535, A1_1532, {
          Accuracy = L2_1533,
          TypeOfPrediction = L3_1534,
          Delay = 1.5,
          Width = 200
        })
        if L4_1535 and L4_1535(L4_1535, A1_1532, {
          Accuracy = L2_1533,
          TypeOfPrediction = L3_1534,
          Delay = 1.5,
          Width = 200
        }) then
          if A0_1531.W:GetPrediction(A1_1532, {
            Accuracy = L2_1533,
            TypeOfPrediction = L3_1534,
            Delay = 1,
            Width = 160
          }) and A0_1531.W:GetPrediction(A1_1532, {
            Accuracy = L2_1533,
            TypeOfPrediction = L3_1534,
            Delay = 1,
            Width = 160
          }) then
            if A0_1531.W:GetPrediction(A1_1532, {
              Accuracy = L2_1533,
              TypeOfPrediction = L3_1534,
              Delay = 0.5,
              Width = 120
            }) and A0_1531.W:GetPrediction(A1_1532, {
              Accuracy = L2_1533,
              TypeOfPrediction = L3_1534,
              Delay = 0.5,
              Width = 120
            }) then
              A0_1531.W:CastToVector(L4_1535)
            end
          end
        end
      end
    end
  end
  function __Viktor.CastE(A0_1536, A1_1537, A2_1538)
    local L3_1539, L4_1540, L5_1541
    L3_1539 = 0
    L3_1539 = _ENV[L3_1539]
    if not L3_1539 then
      return
    end
    L3_1539 = L3_1539 * L3_1539
    L3_1539 = A0_1536.E
    L4_1540 = L3_1539
    L3_1539 = L3_1539.IsReady
    L3_1539 = L3_1539(L4_1540)
    if L3_1539 then
      L3_1539 = A0_1536.E
      L4_1540 = L3_1539
      L3_1539 = L3_1539.ValidTarget
      L5_1541 = A1_1537
      L3_1539 = L3_1539(L4_1540, L5_1541)
      if L3_1539 then
        L3_1539 = nil
        L4_1540 = A2_1538 ~= nil and A2_1538 or 1
        L5_1541 = A1_1537.type
        if L5_1541 == myHero.type then
          L5_1541 = GetEnemyHeroes
          L5_1541 = L5_1541()
          L3_1539 = L5_1541
        else
          L5_1541 = A0_1536.E
          L5_1541 = L5_1541.EnemyMinions
          L5_1541 = L5_1541.update
          L5_1541(L5_1541)
          L5_1541 = A0_1536.E
          L5_1541 = L5_1541.EnemyMinions
          L5_1541 = L5_1541.objects
          L5_1541 = #L5_1541
          if L5_1541 > 0 then
            L5_1541 = A0_1536.E
            L5_1541 = L5_1541.EnemyMinions
            L3_1539 = L5_1541.objects
          else
            L5_1541 = A0_1536.E
            L5_1541 = L5_1541.JungleMinions
            L5_1541 = L5_1541.update
            L5_1541(L5_1541)
            L5_1541 = A0_1536.E
            L5_1541 = L5_1541.JungleMinions
            L5_1541 = L5_1541.objects
            L5_1541 = #L5_1541
            if L5_1541 > 0 then
              L5_1541 = A0_1536.E
              L5_1541 = L5_1541.JungleMinions
              L3_1539 = L5_1541.objects
            end
          end
        end
        L5_1541 = #L3_1539
        if L4_1540 > L5_1541 then
          return
        end
        L5_1541 = A0_1536.BestHitE
        L5_1541 = L5_1541(A0_1536, A1_1537, L3_1539)
        if L5_1541 and L5_1541(A0_1536, A1_1537, L3_1539) and L5_1541(A0_1536, A1_1537, L3_1539) and L4_1540 <= L5_1541(A0_1536, A1_1537, L3_1539) then
          A0_1536.E.LastCastAttempt = os.clock()
          A0_1536.E.endCastedPos = L5_1541(A0_1536, A1_1537, L3_1539)
          A0_1536.E.Sent = true
          A0_1536.E:CastToVector(L5_1541)
          A0_1536.E.Sent = false
        end
      end
    end
  end
  function __Viktor.CastR(A0_1542, A1_1543)
    if A0_1542.R:IsReady() and A0_1542.R:ValidTarget(A1_1543) then
      A0_1542.R:Cast(A1_1543)
    end
  end
  function __Viktor.OnCastSpell(A0_1544, A1_1545, A2_1546, A3_1547, A4_1548)
    local L5_1549
    L5_1549 = 0
    L5_1549 = _ENV[L5_1549]
    if not L5_1549 then
      return
    end
    L5_1549 = L5_1549 * L5_1549
    L5_1549 = A0_1544.Menu
    if L5_1549 ~= nil then
      L5_1549 = A0_1544.MenuLoaded
    elseif not L5_1549 then
      return
    end
    L5_1549 = A0_1544.E
    L5_1549 = L5_1549.Slot
    if A1_1545 == L5_1549 then
      if A2_1546 ~= nil and A3_1547 ~= nil then
        L5_1549 = A0_1544.E
        L5_1549.LastSentTime = os.clock()
        L5_1549 = A0_1544.E
        L5_1549.endPos = Vector(A2_1546)
        L5_1549 = A0_1544.E
        L5_1549.startPos = Vector(A3_1547)
      end
    else
      L5_1549 = A0_1544.R
      L5_1549 = L5_1549.Slot
      if A1_1545 == L5_1549 then
        L5_1549 = A0_1544.R
        L5_1549.LastCastTime = os.clock()
      end
    end
  end
  function __Viktor.OnAnimation(A0_1550, A1_1551, A2_1552)
    if A1_1551 and A2_1552 and A0_1550.Storm and A0_1550.Storm.networkID == A1_1551.networkID and A2_1552:lower():find("death") then
      A0_1550.Storm = nil
    end
  end
  function __Viktor.OnCreateObj(A0_1553, A1_1554)
    if not _ENV[0] then
      return
    end
    if A0_1553.Menu == nil or not A0_1553.MenuLoaded then
      return
    end
    if A1_1554 and A1_1554.name then
      if A1_1554.name:lower() == "storm" and A1_1554.team == myHero.team then
        A0_1553.Storm = A1_1554
      end
      if A1_1554.name:lower():find("missile") and A1_1554.spellOwner and A1_1554.spellName and A1_1554.spellOwner.isMe and (A1_1554.spellName:lower():find("viktoreaugmissile") or A1_1554.spellName:lower():find("viktordeathraymissile")) then
        A0_1553.E.Object = A1_1554
      end
    end
  end
  function __Viktor.OnDeleteObj(A0_1555, A1_1556)
    if A0_1555.Menu == nil or not A0_1555.MenuLoaded then
      return
    end
    if A1_1556 and A1_1556.name and A1_1556.name:lower():find("missile") and A1_1556.spellOwner and A1_1556.spellName and A1_1556.spellOwner.isMe and (A1_1556.spellName:lower():find("viktoreaugmissile") or A1_1556.spellName:lower():find("viktordeathraymissile")) then
      A0_1555.E.Object = nil
    end
  end
  function __Viktor.OnDraw(A0_1557)
    local L1_1558, L2_1559, L3_1560, L4_1561, L5_1562, L6_1563
    L1_1558 = 0
    L1_1558 = _ENV[L1_1558]
    if not L1_1558 then
      return
    end
    L1_1558 = L1_1558 * L1_1558
    L1_1558 = myHero
    L1_1558 = L1_1558.dead
    if not L1_1558 then
      L1_1558 = A0_1557.Menu
      if L1_1558 ~= nil then
        L1_1558 = A0_1557.MenuLoaded
      end
    elseif not L1_1558 then
      return
    end
    L1_1558 = A0_1557.Menu
    L1_1558 = L1_1558.General
    L1_1558 = L1_1558.Developer
    if L1_1558 then
      L1_1558 = WorldToScreen
      L6_1563 = L2_1559(L3_1560, L4_1561, L5_1562)
      L1_1558 = L1_1558(L2_1559, L3_1560, L4_1561, L5_1562, L6_1563, L2_1559(L3_1560, L4_1561, L5_1562))
      for L6_1563 = 0, 255 do
      end
      L6_1563 = ", Updated: "
      L6_1563 = L1_1558.x
      L3_1560(L4_1561, L5_1562, L6_1563, L1_1558.y, L11_11.White)
    end
    L1_1558 = A0_1557.Menu
    L1_1558 = L1_1558.Draw
    L1_1558 = L1_1558.Killable
    if L1_1558 then
      L1_1558 = A0_1557.R
      L1_1558 = L1_1558.IsReady
      L1_1558 = L1_1558(L2_1559)
      if L1_1558 then
        L1_1558 = myHero
        L1_1558 = L1_1558.mana
        if L1_1558 >= L2_1559 then
          L1_1558 = 0
          L6_1563 = L3_1560()
          for L5_1562, L6_1563 in L2_1559(L3_1560, L4_1561, L5_1562, L6_1563, L3_1560()) do
            if A0_1557.R:ValidTarget(L6_1563) and A0_1557.R:Damage(L6_1563) > L6_1563.health then
              if OnScreen(WorldToScreen(D3DXVECTOR3(L6_1563.x, L6_1563.y, L6_1563.z)).x, WorldToScreen(D3DXVECTOR3(L6_1563.x, L6_1563.y, L6_1563.z)).y) then
                DrawText("R KILL", 25, WorldToScreen(D3DXVECTOR3(L6_1563.x, L6_1563.y, L6_1563.z)).x, WorldToScreen(D3DXVECTOR3(L6_1563.x, L6_1563.y, L6_1563.z)).y, L11_11.Red)
              end
              DrawText(L6_1563.charName:upper() .. " KILLABLE", 35, 100, 50 + 50 * L1_1558, L11_11.Red)
              L1_1558 = L1_1558 + 1
            end
          end
        end
      end
    end
  end
  function __Viktor.GetComboDamage(A0_1564, A1_1565, A2_1566, A3_1567, A4_1568, A5_1569)
    local L6_1570, L7_1571
    L6_1570 = 0
    L6_1570 = _ENV[L6_1570]
    if not L6_1570 then
      return
    end
    L6_1570 = L6_1570 * L6_1570
    L6_1570 = 0
    L7_1571 = 0
    if IsValidTarget(A1_1565) then
      if A2_1566 then
        L6_1570 = L6_1570 + A0_1564.Q:Damage(A1_1565)
        L7_1571 = L7_1571 + A0_1564.Q:Mana()
      end
      if A3_1567 then
        L6_1570 = L6_1570 + A0_1564.Q:Damage(A1_1565)
        L7_1571 = L7_1571 + A0_1564.W:Mana()
      end
      if A4_1568 then
        L6_1570 = L6_1570 + A0_1564.E:Damage(A1_1565)
        L7_1571 = L7_1571 + A0_1564.E:Mana()
      end
      if A5_1569 then
        L6_1570 = L6_1570 + A0_1564.R:Damage(A1_1565)
        L7_1571 = L7_1571 + A0_1564.R:Mana()
      end
      if A3_3:IsReady() then
        L6_1570 = L6_1570 + A3_3:Damage(A1_1565)
      end
      L6_1570 = L6_1570 + getDmg("AD", A1_1565, myHero)
    end
    L6_1570 = L6_1570 * A0_1564:GetOverkill()
    return L6_1570, L7_1571
  end
  function __Viktor.GetOverkill(A0_1572)
    local L1_1573, L2_1574, L3_1575, L4_1576, L5_1577, L6_1578, L7_1579, L8_1580, L9_1581, L10_1582, L11_1583, L12_1584, L13_1585, L14_1586, L15_1587, L16_1588, L17_1589, L18_1590, L19_1591, L20_1592, L21_1593, L22_1594, L23_1595, L24_1596, L25_1597, L26_1598, L27_1599, L28_1600, L29_1601, L30_1602, L31_1603, L32_1604, L33_1605, L34_1606, L35_1607, L36_1608, L37_1609, L38_1610, L39_1611, L40_1612, L41_1613, L42_1614, L43_1615, L44_1616, L45_1617, L46_1618, L47_1619, L48_1620, L49_1621, L50_1622, L51_1623, L52_1624, L53_1625, L54_1626, L55_1627, L56_1628, L57_1629, L58_1630, L59_1631, L60_1632, L61_1633, L62_1634, L63_1635, L64_1636, L65_1637, L66_1638, L67_1639, L68_1640, L69_1641, L70_1642, L71_1643, L72_1644, L73_1645, L74_1646, L75_1647, L76_1648, L77_1649, L78_1650, L79_1651, L80_1652, L81_1653, L82_1654, L83_1655, L84_1656, L85_1657, L86_1658, L87_1659, L88_1660, L89_1661, L90_1662, L91_1663, L92_1664, L93_1665, L94_1666, L95_1667, L96_1668, L97_1669, L98_1670, L99_1671, L100_1672, L101_1673, L102_1674, L103_1675, L104_1676, L105_1677, L106_1678, L107_1679, L108_1680, L109_1681, L110_1682, L111_1683, L112_1684, L113_1685, L114_1686, L115_1687, L116_1688, L117_1689, L118_1690, L119_1691, L120_1692, L121_1693, L122_1694, L123_1695, L124_1696, L125_1697, L126_1698, L127_1699, L128_1700, L129_1701, L130_1702, L131_1703, L132_1704, L133_1705, L134_1706, L135_1707, L136_1708, L137_1709, L138_1710, L139_1711, L140_1712, L141_1713, L142_1714, L143_1715, L144_1716, L145_1717, L146_1718, L147_1719, L148_1720, L149_1721, L150_1722, L151_1723, L152_1724, L153_1725, L154_1726, L155_1727, L156_1728, L157_1729, L158_1730, L159_1731, L160_1732, L161_1733, L162_1734, L163_1735, L164_1736, L165_1737, L166_1738, L167_1739, L168_1740, L169_1741, L170_1742, L171_1743, L172_1744, L173_1745, L174_1746, L175_1747, L176_1748, L177_1749, L178_1750, L179_1751, L180_1752, L181_1753, L182_1754, L183_1755, L184_1756, L185_1757, L186_1758, L187_1759, L188_1760, L189_1761, L190_1762, L191_1763, L192_1764, L193_1765, L194_1766, L195_1767, L196_1768, L197_1769, L198_1770, L199_1771, L200_1772, L201_1773, L202_1774, L203_1775, L204_1776, L205_1777, L206_1778, L207_1779, L208_1780, L209_1781, L210_1782, L211_1783, L212_1784, L213_1785, L214_1786, L215_1787, L216_1788, L217_1789, L218_1790, L219_1791, L220_1792, L221_1793, L222_1794, L223_1795, L224_1796, L225_1797, L226_1798, L227_1799, L228_1800, L229_1801, L230_1802, L231_1803, L232_1804, L233_1805, L234_1806, L235_1807, L236_1808, L237_1809, L238_1810, L239_1811, L240_1812, L241_1813, L242_1814, L243_1815, L244_1816, L245_1817, L246_1818, L247_1819, L248_1820, L249_1821, L250_1822, L251_1823, L252_1824, L253_1825, L254_1826
    L1_1573 = A0_1572.Menu
    L1_1573 = L1_1573.General
    L1_1573 = L1_1573.Overkill
    L1_1573 = 100 + L1_1573
    L1_1573 = L1_1573 / 100
    return L1_1573
  end
  function __Viktor.FindValues(A0_1827, A1_1828)
    if not _ENV[0] then
      return
    end
    if A1_1828 and not A0_1827.E.Sent and os.clock() - A0_1827.E.LastCastAttempt > 0.1 and A0_1827.E:IsReady() then
      A0_1827.E.endCastedPos = A1_1828
      A0_1827.Packets.Block = true
      A0_1827.E:CastToVector(A1_1828)
      A0_1827.Packets.Block = false
    end
  end
  function __Viktor.OnSendPacket(A0_1829, A1_1830)
    local L2_1831, L3_1832, L4_1833, L5_1834, L6_1835, L7_1836, L8_1837, L9_1838, L10_1839, L11_1840, L12_1841, L13_1842
    L2_1831 = 0
    L2_1831 = _ENV[L2_1831]
    if not L2_1831 then
      return
    end
    L2_1831 = L2_1831 * L2_1831
    L2_1831 = A0_1829.Menu
    if L2_1831 ~= nil then
      L2_1831 = A0_1829.MenuLoaded
    elseif not L2_1831 then
      return
    end
    if A1_1830 then
      A1_1830.pos = 2
      L2_1831 = myHero
      L2_1831 = L2_1831.networkID
      if L2_1831 == L3_1832 then
        L2_1831 = A0_1829.Packets
        L2_1831 = L2_1831.Block
        if L2_1831 then
          L2_1831 = A1_1830.header
          if L2_1831 ~= 255 then
            L2_1831 = A0_1829.Packets
            L2_1831 = L2_1831.Header
            if L2_1831 ~= L3_1832 then
              L2_1831 = {}
              L2_1831.Updated = false
              L2_1831.Sent = false
              L2_1831.Block = false
              L2_1831.Verified = false
              L2_1831.Verified2 = false
              L2_1831.Header = nil
              L2_1831.vTable = nil
              L2_1831.Size = nil
              L2_1831.Analysis = L3_1832
              L3_1832.Pos = nil
              L2_1831.From = L3_1832
              L3_1832.Pos = nil
              L2_1831.To = L3_1832
              A0_1829.Packets = L2_1831
              L2_1831 = A0_1829.Packets
              L2_1831.Header = L3_1832
              L2_1831 = A0_1829.Packets
              L2_1831.vTable = L3_1832
              L2_1831 = A0_1829.Packets
              L2_1831.Size = L3_1832
            end
            L2_1831 = A0_1829.Packets
            L2_1831 = L2_1831.Sent
            if not L2_1831 then
              L2_1831 = A0_1829.Packets
              L2_1831.Sent = true
            end
            L2_1831 = A0_1829.Packets
            L2_1831 = L2_1831.From
            L2_1831 = L2_1831.Pos
            if L2_1831 == nil then
              L2_1831 = A0_1829.Packets
              L2_1831 = L2_1831.To
              L2_1831 = L2_1831.Pos
              if L2_1831 == nil then
                L2_1831 = {}
                L2_1831.startPos = L3_1832
                L2_1831.endPos = L3_1832
                for L6_1835 = 6, A1_1830.size do
                  A1_1830.pos = L6_1835
                  L2_1831[L6_1835] = L7_1836
                end
                L3_1832(L4_1833, L5_1834)
                if L3_1832 > 2 then
                  for L10_1839 = 6, A1_1830.size do
                    L11_1840 = {}
                    for _FORV_16_ = 1, #A0_1829.Packets.Analysis do
                      if A0_1829.Packets.Analysis[_FORV_16_][L10_1839] and (_FORV_16_ == 1 and true or _FORV_16_ > 1 and 0 < GetDistanceSqr(A0_1829.Packets.Analysis[_FORV_16_ - 1].startPos, A0_1829.Packets.Analysis[_FORV_16_].startPos) and 0 < GetDistanceSqr(A0_1829.Packets.Analysis[_FORV_16_ - 1].endPos, A0_1829.Packets.Analysis[_FORV_16_].endPos)) then
                        if L11_1840[A0_1829.Packets.Analysis[_FORV_16_][L10_1839]] == nil then
                          L11_1840[A0_1829.Packets.Analysis[_FORV_16_][L10_1839]] = 1
                        else
                          L11_1840[A0_1829.Packets.Analysis[_FORV_16_][L10_1839]] = L11_1840[A0_1829.Packets.Analysis[_FORV_16_][L10_1839]] + 1
                        end
                      end
                    end
                    for _FORV_17_, _FORV_18_ in pairs(L11_1840) do
                      if L13_1842 == nil then
                      else
                      end
                    end
                    if L13_1842 and 100 * L11_1840[L13_1842] / L12_1841 <= 60 then
                      if L3_1832 == 8 then
                        if L5_1834 == 0 then
                        elseif L6_1835 == 0 then
                        end
                      end
                    end
                  end
                  if L5_1834 > 0 and L6_1835 > 0 then
                    L7_1836.Pos = L6_1835
                    L7_1836.Pos = L5_1834
                    for L10_1839 = 1, #L8_1837 do
                      L11_1840 = CLoLPacket
                      L11_1840 = L11_1840(L12_1841)
                      L11_1840.pos = 2
                      L12_1841(L13_1842, A0_1829.Packets.Analysis[L10_1839].startPos.x)
                      L12_1841(L13_1842, A0_1829.Packets.Analysis[L10_1839].startPos.z)
                      L11_1840.pos = 2
                      for _FORV_15_ = L12_1841.Pos, L13_1842 + 4 do
                        A0_1829.Packets.From[L11_1840:Decode1()] = A0_1829.Packets.Analysis[L10_1839][_FORV_15_]
                      end
                      L11_1840.pos = 2
                      L12_1841(L13_1842, A0_1829.Packets.Analysis[L10_1839].endPos.x)
                      L12_1841(L13_1842, A0_1829.Packets.Analysis[L10_1839].endPos.z)
                      L11_1840.pos = 2
                      for _FORV_15_ = L12_1841.Pos, L13_1842 + 4 do
                        A0_1829.Packets.To[L11_1840:Decode1()] = A0_1829.Packets.Analysis[L10_1839][_FORV_15_]
                      end
                    end
                  end
                end
              end
            else
              L2_1831 = CLoLPacket
              L2_1831 = L2_1831(L3_1832)
              L2_1831.pos = 2
              L3_1832(L4_1833, L5_1834)
              L3_1832(L4_1833, L5_1834)
              L2_1831.pos = 2
              for L6_1835 = L3_1832.Pos, L4_1833 + 7 do
                A1_1830.pos = L6_1835
                L9_1838[L7_1836] = L8_1837
              end
              L2_1831.pos = 2
              L3_1832(L4_1833, L5_1834)
              L3_1832(L4_1833, L5_1834)
              L2_1831.pos = 2
              for L6_1835 = L3_1832.Pos, L4_1833 + 7 do
                A1_1830.pos = L6_1835
                L9_1838[L7_1836] = L8_1837
              end
            end
            L2_1831 = Packet
            L2_1831 = L2_1831(L3_1832)
            L2_1831 = L2_1831.block
            L2_1831(L3_1832)
          end
        else
          L2_1831 = A0_1829.E
          L2_1831 = L2_1831.Sent
          if L2_1831 then
            L2_1831 = A0_1829.EndPosIsReady
            L2_1831 = L2_1831(L3_1832, L4_1833)
            if L2_1831 then
              L2_1831 = CLoLPacket
              L2_1831 = L2_1831(L3_1832)
              L3_1832(L4_1833, L5_1834)
              L3_1832(L4_1833, L5_1834)
              L2_1831.pos = 2
              for L6_1835 = L3_1832.Pos, L4_1833 + 7 do
                A1_1830.pos = L6_1835
                L11_1840 = L2_1831
                L10_1839 = L2_1831.Decode1
                L10_1839 = L10_1839(L11_1840)
                L7_1836(L8_1837, L9_1838)
              end
              if not L3_1832 then
                L3_1832(L4_1833, L5_1834)
              end
            end
          else
            L2_1831 = os
            L2_1831 = L2_1831.clock
            L2_1831 = L2_1831()
            L2_1831 = L2_1831 - L3_1832
            if L2_1831 < 0.1 then
              L2_1831 = A0_1829.Packets
              L2_1831 = L2_1831.Sent
              if L2_1831 then
                L2_1831 = A1_1830.header
                if L2_1831 == L3_1832 then
                  L2_1831 = A0_1829.Packets
                  L2_1831 = L2_1831.Verified
                  if L2_1831 then
                    L2_1831 = A0_1829.Packets
                    L2_1831 = L2_1831.Verified2
                  elseif not L2_1831 then
                    L2_1831 = GetDistanceSqr
                    L2_1831 = L2_1831(L3_1832, L4_1833)
                    if L2_1831 > 0 then
                      L2_1831 = A0_1829.EndPosIsReady
                      L2_1831 = L2_1831(L3_1832, L4_1833)
                      if L2_1831 then
                        L2_1831 = CLoLPacket
                        L2_1831 = L2_1831(L3_1832)
                        L3_1832(L4_1833, L5_1834)
                        L3_1832(L4_1833, L5_1834)
                        L2_1831.pos = 2
                        for L7_1836 = L4_1833.Pos, L5_1834 + 7 do
                          A1_1830.pos = L7_1836
                          L11_1840 = L2_1831
                          L10_1839 = L2_1831.Decode1
                          L10_1839 = L10_1839(L11_1840)
                        end
                        if L3_1832 == 8 then
                          L4_1833.Verified = true
                          L4_1833.Verified2 = true
                        else
                          L2_1831.pos = 2
                          for L8_1837 = L5_1834.Pos, L6_1835 + 7 do
                            A1_1830.pos = L8_1837
                            L10_1839 = A1_1830
                            L10_1839 = A0_1829.Packets
                            L10_1839 = L10_1839.From
                            L11_1840 = L2_1831.Decode1
                            L11_1840 = L11_1840(L12_1841)
                            L10_1839 = L10_1839[L11_1840]
                          end
                          if L4_1833 == 8 then
                            L5_1834.Verified = true
                            L5_1834.Verified2 = true
                            L5_1834.Pos = L6_1835
                            for L9_1838 = 0, 255 do
                              L10_1839 = A0_1829.Packets
                              L10_1839 = L10_1839.From
                              L10_1839 = L10_1839[L9_1838]
                              if L10_1839 ~= nil then
                                L10_1839 = A0_1829.Packets
                                L10_1839 = L10_1839.From
                                L10_1839 = L10_1839[L9_1838]
                                L5_1834[L9_1838] = L10_1839
                              end
                            end
                            L6_1835.Pos = L7_1836
                            for L10_1839 = 0, 255 do
                              L11_1840 = A0_1829.Packets
                              L11_1840 = L11_1840.To
                              L11_1840 = L11_1840[L10_1839]
                              if L11_1840 ~= nil then
                                L11_1840 = A0_1829.Packets
                                L11_1840 = L11_1840.To
                                L11_1840 = L11_1840[L10_1839]
                                L6_1835[L10_1839] = L11_1840
                              end
                            end
                            L7_1836.From = L6_1835
                            L7_1836.To = L5_1834
                          else
                            L5_1834.Updated = false
                            L5_1834.Sent = false
                            L5_1834.Block = false
                            L5_1834.Verified = false
                            L5_1834.Verified2 = false
                            L5_1834.Header = nil
                            L5_1834.vTable = nil
                            L5_1834.Size = nil
                            L5_1834.Analysis = L6_1835
                            L6_1835.Pos = nil
                            L5_1834.From = L6_1835
                            L6_1835.Pos = nil
                            L5_1834.To = L6_1835
                            A0_1829.Packets = L5_1834
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  function __Viktor.ELastHit(A0_1843, A1_1844)
    local L2_1845, L3_1846, L4_1847, L5_1848, L6_1849, L7_1850, L8_1851, L9_1852, L10_1853, L11_1854, L12_1855
    L2_1845 = 0
    L2_1845 = _ENV[L2_1845]
    if not L2_1845 then
      return
    end
    L2_1845 = L2_1845 * L2_1845
    L2_1845 = SpellManager
    L2_1845 = L2_1845.AddLastHit
    L2_1845(L3_1846)
    if A1_1844 ~= nil then
      L2_1845 = type
      L2_1845 = L2_1845(L3_1846)
    else
      L2_1845 = L2_1845 == "number" and A1_1844 or L2_1845.SMART
    end
    if L2_1845 ~= L3_1846 then
      if L3_1846 then
        if L3_1846 then
          L3_1846(L4_1847)
          for L6_1849, L7_1850 in L3_1846(L4_1847) do
            L8_1851 = A0_1843.E
            L9_1852 = L8_1851
            L8_1851 = L8_1851.IsReady
            L8_1851 = L8_1851(L9_1852)
            if L8_1851 then
              L8_1851 = A0_1843.E
              L9_1852 = L8_1851
              L8_1851 = L8_1851.ValidTarget
              L10_1853 = L7_1850
              L8_1851 = L8_1851(L9_1852, L10_1853)
              if L8_1851 then
                L8_1851 = L7_1850.dead
                if not L8_1851 then
                  L8_1851 = L7_1850.health
                  if L8_1851 > 0 then
                    L8_1851 = _G
                    L8_1851 = L8_1851.SpellManagerMenu
                    L8_1851 = L8_1851.FarmDelay
                    if L8_1851 ~= nil then
                      L8_1851 = _G
                      L8_1851 = L8_1851.SpellManagerMenu
                      L8_1851 = L8_1851.FarmDelay
                    else
                      L8_1851 = L8_1851 or 0
                    end
                    L9_1852 = false
                    L10_1853 = LASTHIT_MODE
                    L10_1853 = L10_1853.SMART
                    if L2_1845 == L10_1853 then
                      L10_1853 = OrbwalkManager
                      L11_1854 = L10_1853
                      L10_1853 = L10_1853.CanAttack
                      L10_1853 = L10_1853(L11_1854)
                      if not L10_1853 then
                        L10_1853 = OrbwalkManager
                        L10_1853 = L10_1853.AA
                        L10_1853 = L10_1853.LastTarget
                        if L10_1853 then
                          L10_1853 = L7_1850.networkID
                          L11_1854 = OrbwalkManager
                          L11_1854 = L11_1854.AA
                          L11_1854 = L11_1854.LastTarget
                          L11_1854 = L11_1854.networkID
                          if L10_1853 ~= L11_1854 then
                            L10_1853 = OrbwalkManager
                            L11_1854 = L10_1853
                            L10_1853 = L10_1853.IsAttacking
                            L10_1853 = L10_1853(L11_1854)
                            if not L10_1853 then
                              L9_1852 = true
                            end
                          end
                        end
                      else
                        L10_1853 = OrbwalkManager
                        L11_1854 = L10_1853
                        L10_1853 = L10_1853.InRange
                        L12_1855 = L7_1850
                        L10_1853 = L10_1853(L11_1854, L12_1855)
                        if not L10_1853 then
                          L9_1852 = true
                        else
                          L10_1853 = Prediction
                          L10_1853 = L10_1853.VP
                          L11_1854 = L10_1853
                          L10_1853 = L10_1853.GetProjectileSpeed
                          L12_1855 = myHero
                          L10_1853 = L10_1853(L11_1854, L12_1855)
                          L11_1854 = OrbwalkManager
                          L12_1855 = L11_1854
                          L11_1854 = L11_1854.WindUpTime
                          L11_1854 = L11_1854(L12_1855)
                          L12_1855 = GetDistance
                          L12_1855 = L12_1855(myHero, L7_1850)
                          L12_1855 = L12_1855 / L10_1853
                          L11_1854 = L11_1854 + L12_1855
                          L12_1855 = ExtraTime
                          L12_1855 = L12_1855()
                          L11_1854 = L11_1854 + L12_1855
                          L12_1855 = Prediction
                          L12_1855 = L12_1855.VP
                          L12_1855 = L12_1855.GetPredictedHealth
                          L12_1855 = L12_1855(L12_1855, L7_1850, L11_1854, L8_1851)
                          if L12_1855 <= 0 then
                            L9_1852 = true
                          end
                        end
                      end
                    else
                      L10_1853 = LASTHIT_MODE
                      L10_1853 = L10_1853.ALWAYS
                      if L2_1845 == L10_1853 then
                        L9_1852 = true
                      end
                    end
                    if L9_1852 then
                      L10_1853 = A0_1843.E
                      L11_1854 = L10_1853
                      L10_1853 = L10_1853.Damage
                      L12_1855 = L7_1850
                      L10_1853 = L10_1853(L11_1854, L12_1855)
                      L11_1854 = Vector
                      L12_1855 = L7_1850
                      L11_1854 = L11_1854(L12_1855)
                      L12_1855 = Vector
                      L12_1855 = L12_1855(Vector(L7_1850) - Vector(myHero))
                      L12_1855 = L12_1855.normalized
                      L12_1855 = L12_1855(L12_1855)
                      L12_1855 = L12_1855 * math.min(GetDistance(myHero, L7_1850) - A0_1843.E.Width, A0_1843.E.Range1)
                      L11_1854 = L11_1854 + L12_1855
                      L12_1855 = A0_1843.E
                      L12_1855 = L12_1855.Delay
                      L12_1855 = L12_1855 + GetDistance(L7_1850, L11_1854) / A0_1843.E.Speed
                      L12_1855 = L12_1855 + ExtraTime()
                      if Prediction.VP:GetPredictedHealth(L7_1850, L12_1855, L8_1851) == L7_1850.health and 0 < A0_1843.E.Delay + GetDistance(L7_1850, L11_1854) / A0_1843.E.Speed and L2_1845 == LASTHIT_MODE.SMART then
                        return
                      end
                      if L10_1853 > Prediction.VP:GetPredictedHealth(L7_1850, L12_1855, L8_1851) and Prediction.VP:GetPredictedHealth(L7_1850, L12_1855, L8_1851) > -1 then
                        A0_1843:CastE(L7_1850)
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  function __Viktor.BestHitE(A0_1856, A1_1857, A2_1858)
    local L3_1859, L4_1860, L5_1861, L6_1862, L7_1863, L8_1864, L9_1865, L10_1866, L11_1867, L12_1868, L13_1869, L14_1870, L15_1871, L16_1872, L17_1873, L18_1874, L19_1875, L20_1876
    L3_1859 = 0
    L3_1859 = _ENV[L3_1859]
    if not L3_1859 then
      return
    end
    L3_1859 = L3_1859 * L3_1859
    L3_1859 = A0_1856.LastRequest
    L4_1860 = os
    L4_1860 = L4_1860.clock
    L4_1860 = L4_1860()
    if not (L3_1859 >= L4_1860) and A2_1858 ~= nil then
      L3_1859 = A0_1856.E
      L4_1860 = L3_1859
      L3_1859 = L3_1859.IsReady
      L3_1859 = L3_1859(L4_1860)
    elseif not L3_1859 then
      L3_1859, L4_1860 = nil, nil
      return L3_1859, L4_1860, L5_1861
    end
    function L3_1859(A0_1877, A1_1878, A2_1879)
      local L3_1880, L4_1881, L5_1882, L6_1883, L7_1884, L8_1885, L9_1886, L10_1887, L11_1888, L12_1889, L13_1890, L14_1891, L15_1892
      L3_1880 = 1
      L4_1881 = {}
      L4_1881[L5_1882] = true
      for L8_1885, L9_1886 in L5_1882(L6_1883) do
        if L9_1886 then
          L10_1887 = L9_1886.networkID
          L11_1888 = A1_1878.networkID
          if L10_1887 ~= L11_1888 then
            L10_1887 = GetDistanceSqr
            L11_1888 = A0_1877
            L12_1889 = L9_1886
            L10_1887 = L10_1887(L11_1888, L12_1889)
            L11_1888 = math
            L11_1888 = L11_1888.pow
            L12_1889 = A0_1856.E
            L12_1889 = L12_1889.Range2
            L12_1889 = L12_1889 * 1.1
            L13_1890 = 2
            L11_1888 = L11_1888(L12_1889, L13_1890)
            if L10_1887 <= L11_1888 then
              L10_1887 = VectorPointProjectionOnLineSegment
              L11_1888 = A0_1877
              L12_1889 = A1_1878
              L13_1890 = L9_1886
              L12_1889 = L10_1887(L11_1888, L12_1889, L13_1890)
              if L12_1889 then
                L13_1890 = math
                L13_1890 = L13_1890.pow
                L14_1891 = L10_1887.x
                L15_1892 = L9_1886.x
                L14_1891 = L14_1891 - L15_1892
                L15_1892 = 2
                L13_1890 = L13_1890(L14_1891, L15_1892)
                L14_1891 = math
                L14_1891 = L14_1891.pow
                L15_1892 = L10_1887.y
                L15_1892 = L15_1892 - L9_1886.z
                L14_1891 = L14_1891(L15_1892, 2)
                L13_1890 = L13_1890 + L14_1891
                L14_1891 = math
                L14_1891 = L14_1891.pow
                L15_1892 = A0_1856.E
                L15_1892 = L15_1892.Width
                L15_1892 = L15_1892 + L9_1886.boundingRadius
                L15_1892 = L15_1892 * 1.4
                L14_1891 = L14_1891(L15_1892, 2)
                if L13_1890 < L14_1891 then
                  L13_1890 = GetDistanceSqr
                  L14_1891 = A0_1877
                  L15_1892 = A1_1878
                  L13_1890 = L13_1890(L14_1891, L15_1892)
                  L14_1891 = GetDistanceSqr
                  L15_1892 = A0_1877
                  L14_1891 = L14_1891(L15_1892, L10_1887)
                  if L13_1890 > L14_1891 then
                    L13_1890 = A0_1856.E
                    L14_1891 = L13_1890
                    L13_1890 = L13_1890.GetPrediction
                    L15_1892 = L9_1886
                    L14_1891 = L13_1890(L14_1891, L15_1892)
                    if L13_1890 and L14_1891 then
                      L15_1892 = GetDistanceSqr
                      L15_1892 = L15_1892(A0_1877, L13_1890)
                      if L15_1892 <= math.pow(A0_1856.E.Range2, 2) then
                        L15_1892 = VectorPointProjectionOnLineSegment
                        L15_1892 = L15_1892(A0_1877, A1_1878, L13_1890)
                        if L15_1892(A0_1877, A1_1878, L13_1890) and math.pow(L15_1892.x - L13_1890.x, 2) + math.pow(L15_1892.y - L13_1890.z, 2) < math.pow((A0_1856.E.Width + L9_1886.boundingRadius) * 2 / 3, 2) and GetDistanceSqr(A0_1877, A1_1878) > GetDistanceSqr(A0_1877, L15_1892) then
                          L4_1881[L9_1886.networkID] = true
                          L3_1880 = L3_1880 + 1
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
      return L5_1882, L6_1883
    end
    L4_1860 = {}
    for L8_1864, L9_1865 in L5_1861(L6_1862) do
      L12_1868 = L9_1865
      if L10_1866 then
        L12_1868 = L9_1865
        L10_1866(L11_1867, L12_1868)
      end
    end
    if L5_1861 == 0 then
      return L5_1861, L6_1862, L7_1863
    end
    L8_1864 = 2
    A0_1856.LastRequest = L5_1861
    L8_1864 = IsValidTarget
    L8_1864 = L8_1864(L9_1865)
    for L12_1868 = 1, #L4_1860 do
      L13_1869 = L4_1860[L12_1868]
      L14_1870 = Vector
      L14_1870 = L14_1870(L15_1871)
      L18_1874 = myHero
      L18_1874 = myHero
      L19_1875 = L13_1869
      L18_1874 = A0_1856.E
      L18_1874 = L18_1874.Width
      L18_1874 = A0_1856.E
      L18_1874 = L18_1874.Range1
      L14_1870 = L14_1870 + L15_1871
      L15_1871.Source = L14_1870
      L14_1870.networkID = L15_1871
      for L18_1874 = 1, #L4_1860 do
        L19_1875 = L4_1860[L18_1874]
        if L19_1875 then
          L20_1876 = GetDistanceSqr
          L20_1876 = L20_1876(L14_1870, L19_1875)
          if L20_1876 <= math.pow(A0_1856.E.Range2, 2) then
            L20_1876 = A0_1856.E
            L20_1876 = L20_1876.GetPrediction
            L20_1876 = L20_1876(L20_1876, L19_1875)
            if L20_1876 and L20_1876(L20_1876, L19_1875) and GetDistanceSqr(L14_1870, L20_1876) <= math.pow(A0_1856.E.Range2, 2) then
              if not A0_1856:EndPosIsReady(L20_1876) then
                L14_1870 = Vector(myHero) + Vector(Vector(L20_1876) - Vector(myHero)):normalized() * math.min(GetDistance(myHero, L20_1876) - A0_1856.E.Width, A0_1856.E.Range1)
              end
              L20_1876 = Vector(L14_1870) + Vector(Vector(L20_1876) - Vector(L14_1870)):normalized() * A0_1856.E.Range2
              L20_1876.networkID = L19_1875.networkID
              if L7_1863 < L3_1859(L14_1870, L20_1876, L4_1860) and L8_1864 and L3_1859(L14_1870, L20_1876, L4_1860)[A1_1857.networkID] == true then
              end
            end
          end
        end
        if not (L7_1863 >= #L4_1860) then
        end
      end
      if not (L7_1863 >= L15_1871) then
      end
    end
    return L9_1865, L10_1866, L11_1867
  end
  function __Viktor.CompareAnalysis(A0_1893, A1_1894, A2_1895, A3_1896, A4_1897)
    local L5_1898, L6_1899, L7_1900, L8_1901
    if not L5_1898 then
      return
    end
    for L8_1901 = 6, A3_1896 do
      if A1_1894[L8_1901] and A2_1895[L8_1901] and GetDistanceSqr(A1_1894.startPos, A2_1895.startPos) > 0 and 0 < GetDistanceSqr(A1_1894.endPos, A2_1895.endPos) then
        if A4_1897[L8_1901] == nil and A1_1894[L8_1901] == A2_1895[L8_1901] then
          A4_1897[L8_1901] = true
        elseif A4_1897[L8_1901] == true and A1_1894[L8_1901] ~= A2_1895[L8_1901] then
          A4_1897[L8_1901] = nil
        end
      end
    end
    return A4_1897
  end
  function __Viktor.EndPosIsReady(A0_1902, A1_1903)
    if not _ENV[0] then
      return
    end
    if A1_1903 then
      if A0_1902.Packets.Updated then
        return true
      end
      if A0_1902.Packets.Sent then
        CLoLPacket(A0_1902.Packets.Header).pos = 2
        CLoLPacket(A0_1902.Packets.Header):EncodeF(A1_1903.x)
        CLoLPacket(A0_1902.Packets.Header):EncodeF(A1_1903.z)
        CLoLPacket(A0_1902.Packets.Header).pos = 2
        for _FORV_6_ = 0, 7 do
          if A0_1902.Packets.To[CLoLPacket(A0_1902.Packets.Header):Decode1()] == nil then
            return false
          end
        end
        return _FOR_
      end
    end
    return false
  end
  function __Viktor.GenerateRandomPosition(A0_1904)
    if not _ENV[0] then
      return
    end
    return Vector(math.random(0, 15000) * math.random(), 0, math.random(0, 15000) * math.random())
  end
  class("__TwistedFate")
  function __TwistedFate.__init(A0_1905)
    local L1_1906, L2_1907, L3_1908, L4_1909, L5_1910, L6_1911, L7_1912, L8_1913, L9_1914, L10_1915, L11_1916, L12_1917, L13_1918, L14_1919, L15_1920, L16_1921, L17_1922, L18_1923, L19_1924, L20_1925, L21_1926, L22_1927, L23_1928, L24_1929, L25_1930, L26_1931, L27_1932, L28_1933, L29_1934, L30_1935, L31_1936, L32_1937, L33_1938, L34_1939, L35_1940, L36_1941, L37_1942, L38_1943, L39_1944, L40_1945, L41_1946, L42_1947, L43_1948, L44_1949, L45_1950, L46_1951, L47_1952, L48_1953, L49_1954, L50_1955, L51_1956, L52_1957, L53_1958, L54_1959, L55_1960, L56_1961, L57_1962, L58_1963, L59_1964, L60_1965, L61_1966, L62_1967, L63_1968, L64_1969, L65_1970, L66_1971, L67_1972, L68_1973, L69_1974, L70_1975, L71_1976, L72_1977, L73_1978, L74_1979, L75_1980, L76_1981, L77_1982, L78_1983, L79_1984, L80_1985, L81_1986, L82_1987, L83_1988, L84_1989, L85_1990, L86_1991, L87_1992, L88_1993, L89_1994, L90_1995, L91_1996, L92_1997, L93_1998, L94_1999, L95_2000, L96_2001, L97_2002, L98_2003, L99_2004, L100_2005, L101_2006, L102_2007, L103_2008, L104_2009, L105_2010, L106_2011, L107_2012, L108_2013, L109_2014, L110_2015, L111_2016, L112_2017, L113_2018, L114_2019, L115_2020, L116_2021, L117_2022, L118_2023, L119_2024, L120_2025, L121_2026, L122_2027, L123_2028, L124_2029, L125_2030, L126_2031, L127_2032, L128_2033, L129_2034, L130_2035, L131_2036, L132_2037, L133_2038, L134_2039, L135_2040, L136_2041, L137_2042, L138_2043, L139_2044, L140_2045, L141_2046, L142_2047, L143_2048, L144_2049, L145_2050, L146_2051, L147_2052, L148_2053, L149_2054, L150_2055, L151_2056, L152_2057, L153_2058, L154_2059, L155_2060, L156_2061, L157_2062, L158_2063, L159_2064, L160_2065, L161_2066, L162_2067, L163_2068, L164_2069, L165_2070, L166_2071, L167_2072, L168_2073, L169_2074, L170_2075, L171_2076, L172_2077, L173_2078, L174_2079, L175_2080, L176_2081, L177_2082, L178_2083, L179_2084, L180_2085, L181_2086, L182_2087, L183_2088, L184_2089, L185_2090, L186_2091, L187_2092, L188_2093, L189_2094, L190_2095, L191_2096, L192_2097, L193_2098, L194_2099, L195_2100, L196_2101, L197_2102, L198_2103, L199_2104, L200_2105, L201_2106, L202_2107, L203_2108, L204_2109, L205_2110, L206_2111, L207_2112, L208_2113, L209_2114, L210_2115, L211_2116, L212_2117, L213_2118, L214_2119, L215_2120, L216_2121, L217_2122, L218_2123, L219_2124, L220_2125, L221_2126, L222_2127, L223_2128, L224_2129, L225_2130, L226_2131, L227_2132, L228_2133, L229_2134, L230_2135, L231_2136, L232_2137, L233_2138, L234_2139, L235_2140, L236_2141, L237_2142, L238_2143, L239_2144, L240_2145, L241_2146, L242_2147, L243_2148, L244_2149, L245_2150, L246_2151, L247_2152, L248_2153, L249_2154, L250_2155, L251_2156, L252_2157, L253_2158, L254_2159
    A0_1905.ScriptName = "Forbidden TwistedFate"
    A0_1905.Author = "Da Vinci"
    A0_1905.MenuLoaded = false
    A0_1905.Menu = nil
    A0_1905.TS = nil
    L1_1906 = {}
    L1_1906.None = -1
    L1_1906.Blue = 1
    L1_1906.Red = 2
    L1_1906.Gold = 3
    A0_1905.Cards = L1_1906
    L1_1906 = A0_1905.Cards
    L1_1906 = L1_1906.None
    A0_1905.SelectedCard = L1_1906
    L1_1906 = A0_1905.Cards
    L1_1906 = L1_1906.None
    A0_1905.SelectingCard = L1_1906
    L1_1906 = A0_1905.Cards
    L1_1906 = L1_1906.None
    A0_1905.ForceCard = L1_1906
    L1_1906 = A0_1905.Cards
    L1_1906 = L1_1906.None
    A0_1905.TryingToSelectCard = L1_1906
    A0_1905.MouseClicked = false
    A0_1905.DataUpdated = false
    A0_1905.BaseWindUpTime = 3
    A0_1905.BaseAnimationTime = 0.665
    A0_1905.ProjectileSpeed = 1500
    L1_1906 = {}
    L1_1906.LastTime = 0
    L1_1906.LastTarget = nil
    L1_1906.LastSpellName = nil
    L1_1906.Sent = false
    L1_1906.Packet = nil
    L1_1906.Object = nil
    A0_1905.AA = L1_1906
    L1_1906 = {}
    L1_1906.Sent = false
    L1_1906.Packet = nil
    A0_1905.Move = L1_1906
    A0_1905.KillableMinion = nil
    A0_1905.AlmostKillableMinion = nil
    A0_1905.MeanwhileMinion = nil
    A0_1905.JungleMinion = nil
    A0_1905.LimitHealth = -1
    A0_1905.LastCastTime = 0
    A0_1905.StackReady = false
    A0_1905.SheenReady = false
    A0_1905.LichbaneReady = false
    A0_1905.LastRequest = 0
    A0_1905.LastCardTime = 0
  end
  function __TwistedFate.OnTick(A0_2160)
    if not _ENV[0] then
      return
    end
    if myHero.dead or A0_2160.Menu == nil or not A0_2160.MenuLoaded then
      return
    end
    if OrbwalkManager:IsHarass() then
      A0_2160.TS.range = A0_2160.Menu.TS.Harass
    else
      A0_2160.TS.range = A0_2160.Menu.TS.Combo
    end
    A0_2160.TS:update()
    A0_2160.OrbwalkTS:update()
    A0_2160.Target = A0_2160.OrbwalkTS.target
    if A0_2160:CanAttack() and not A0_2160:IsGold(A0_2160.SelectedCard) then
      OrbwalkManager:EnableAttacks()
    else
      OrbwalkManager:DisableAttacks()
    end
    if A0_2160:CanMove() then
      OrbwalkManager:EnableMovement()
      if not OrbwalkManager:IsNone() and A0_2160.Move.Packet == nil then
        A0_2160.Move.Sent = true
        myHero:MoveTo(mousePos.x, mousePos.z)
        A0_2160.Move.Sent = false
      end
    else
      OrbwalkManager:DisableMovement()
    end
    if A0_2160.W:GetSpellData().name and A0_2160.W:IsReady() and A0_2160.W:GetSpellData().name:lower():find("cardlock") then
      if A0_2160.W:GetSpellData().name:lower():find("blue") then
        A0_2160.SelectingCard = A0_2160.Cards.Blue
      elseif A0_2160.W:GetSpellData().name:lower():find("red") then
        A0_2160.SelectingCard = A0_2160.Cards.Red
      elseif A0_2160.W:GetSpellData().name:lower():find("gold") then
        A0_2160.SelectingCard = A0_2160.Cards.Gold
      end
    else
      A0_2160.SelectingCard = A0_2160.Cards.None
    end
    if A0_2160.W:CanUseSpell() == 5 then
      A0_2160.SelectedCard = A0_2160.Cards.None
    end
    if not A0_2160:IsNone(A0_2160.ForceCard) then
      A0_2160:SelectCard(A0_2160.ForceCard)
    end
    A0_2160:KillSteal()
    if OrbwalkManager:IsCombo() then
      A0_2160:Combo()
    elseif OrbwalkManager:IsHarass() then
      A0_2160:Harass()
    elseif OrbwalkManager:IsClear() then
      A0_2160:Clear()
    elseif OrbwalkManager:IsLastHit() then
      A0_2160:LastHit()
    end
    if os.clock() - A0_2160.LastCardTime > 1.5 and os.clock() - A0_2160.LastCardTime < 2 and not A0_2160:IsNone(A0_2160.ForceCard) then
      A0_2160.ForceCard = A0_2160.Cards.None
    end
    if A0_2160.Menu.Keys.HarassToggle then
      A0_2160:Harass()
    end
    if A0_2160:CanAttack() and A0_2160:IsGold(A0_2160.SelectedCard) then
      if OrbwalkManager:IsCombo() then
        if IsValidTarget(A0_2160.Target) then
          A0_2160:Attack(A0_2160.Target)
        end
      elseif OrbwalkManager:IsHarass() then
        if not A0_2160.Menu.Harass.Priorize and IsValidTarget(A0_2160.Target) then
          A0_2160:Attack(A0_2160.Target)
        end
        A0_2160.EnemyMinions:update()
        A0_2160.KillableMinion = A0_2160:GetKillableMinion()
        A0_2160.AlmostKillableMinion = A0_2160:GetAlmostKillableMinion()
        if IsValidTarget(A0_2160.KillableMinion) then
          A0_2160:Attack(A0_2160.KillableMinion)
        end
        if IsValidTarget(A0_2160.AlmostKillableMinion) then
          return
        end
        if IsValidTarget(A0_2160.Target) then
          A0_2160:Attack(A0_2160.Target)
        end
      elseif OrbwalkManager:IsClear() then
        A0_2160.EnemyMinions:update()
        A0_2160.JungleMinions:update()
        A0_2160.KillableMinion = A0_2160:GetKillableMinion()
        A0_2160.AlmostKillableMinion = A0_2160:GetAlmostKillableMinion()
        A0_2160.MeanwhileMinion = A0_2160:GetMeanwhileMinion()
        A0_2160.JungleMinion = A0_2160:GetJungleMinion()
        if IsValidTarget(A0_2160.KillableMinion) then
          A0_2160:Attack(A0_2160.KillableMinion)
        end
        if IsValidTarget(A0_2160.AlmostKillableMinion) then
          return
        end
        if IsValidTarget(A0_2160.MeanwhileMinion) then
          A0_2160:Attack(A0_2160.MeanwhileMinion)
        end
        if IsValidTarget(A0_2160.JungleMinion) then
          A0_2160:Attack(A0_2160.JungleMinion)
        end
      elseif OrbwalkManager:IsLastHit() then
        A0_2160.EnemyMinions:update()
        A0_2160.KillableMinion = A0_2160:GetKillableMinion()
        if IsValidTarget(A0_2160.KillableMinion) then
          A0_2160:Attack(A0_2160.KillableMinion)
        end
      end
    end
  end
  function __TwistedFate.KillSteal(A0_2161)
    local L1_2162, L2_2163, L3_2164, L4_2165, L5_2166
    if not L1_2162 then
      return
    end
    L5_2166 = L2_2163()
    for L4_2165, L5_2166 in L1_2162(L2_2163, L3_2164, L4_2165, L5_2166, L2_2163()) do
      if IsValidTarget(L5_2166, A0_2161.TS.range) and L5_2166.health > 0 and PercentageHealth(L5_2166) <= 35 then
        if GetBestCombo(L5_2166, A0_2161) >= L5_2166.health then
          if A0_2161.Menu.KillSteal.Q and (GetBestCombo(L5_2166, A0_2161) or A0_2161.Q:Damage(L5_2166) > L5_2166.health) then
            A0_2161:CastQ(L5_2166)
          end
          if A0_2161.Menu.KillSteal.W and (GetBestCombo(L5_2166, A0_2161) or A0_2161.W:Damage(L5_2166) > L5_2166.health) then
            A0_2161:SelectCard(A0_2161.Cards.Gold)
            A0_2161.Target = L5_2166
            if A0_2161.W:CanUseSpell() == 3 and not OrbwalkManager:IsNone() then
              A0_2161:Attack(L5_2166)
            end
          end
        end
        if A0_2161.Menu.KillSteal.Ignite and A3_3:IsReady() and A3_3:Damage(L5_2166) > L5_2166.health then
          A3_3:Cast(L5_2166)
        end
      end
    end
  end
  function __TwistedFate.Combo(A0_2167)
    local L1_2168
    L1_2168 = 0
    L1_2168 = _ENV[L1_2168]
    if not L1_2168 then
      return
    end
    L1_2168 = L1_2168 * L1_2168
    L1_2168 = A0_2167.TS
    L1_2168 = L1_2168.target
    if IsValidTarget(L1_2168) then
      if A0_2167.Menu.Combo.Items then
        UseItems(L1_2168)
      end
      if A0_2167.Menu.Combo.Zhonyas > 0 and PercentageHealth() <= A0_2167.Menu.Combo.Zhonyas and L6_6.Zhonyas:IsReady() then
        L6_6.Zhonyas:Cast()
      end
      if PercentageMana() <= A0_2167.Menu.Combo.BlueMana then
        A0_2167:SelectCard(A0_2167.Cards.Blue)
      elseif A0_2167.Menu.Combo.Gold and OrbwalkManager:InRange(L1_2168, 500) then
        A0_2167:SelectCard(A0_2167.Cards.Gold)
      end
      if A0_2167.Menu.Combo.Q2 then
        if A0_2167.Menu.Keys.StartW then
          if os.clock() - A0_2167.W.LastCastTime < 0.25 then
            return
          end
          if OrbwalkManager:InRange(L1_2168, 500) and (not A0_2167:IsNone(A0_2167.SelectedCard) or not A0_2167:IsNone(A0_2167.SelectingCard)) then
            return
          end
        end
        if A0_2167.AA.LastSpellName ~= nil and A0_2167.AA.LastSpellName:find("card") then
          if not A0_2167:CanMove() then
            return
          end
          if OrbwalkManager.AA.Object ~= nil then
            return
          end
        end
        A0_2167:CastQ(L1_2168, A0_2167.Menu.Combo.Q2)
      end
    end
  end
  function __TwistedFate.Harass(A0_2169)
    local L1_2170
    L1_2170 = 0
    L1_2170 = _ENV[L1_2170]
    if not L1_2170 then
      return
    end
    L1_2170 = L1_2170 * L1_2170
    L1_2170 = A0_2169.TS
    L1_2170 = L1_2170.target
    if PercentageMana() <= A0_2169.Menu.Harass.BlueMana then
      if not IsValidTarget(L1_2170) then
      elseif IsValidTarget(A0_2169.W:LaneClear({UseCast = false})) then
        A0_2169:SelectCard(A0_2169.Cards.Blue)
      end
    elseif IsValidTarget(L1_2170) and PercentageMana() >= A0_2169.Menu.Harass.Mana then
      if A0_2169.Menu.Harass.Turret and UnderTurret(L1_2170) and UnderTurret(myHero) then
        return
      end
      if A0_2169.Menu.Harass.Gold and OrbwalkManager:InRange(L1_2170, 500) then
        A0_2169:SelectCard(A0_2169.Cards.Gold)
      end
      if A0_2169.Menu.Harass.Q then
        if A0_2169.Menu.Keys.StartW then
          if os.clock() - A0_2169.W.LastCastTime < 0.25 then
            return
          end
          if OrbwalkManager:InRange(L1_2170, 500) and (not A0_2169:IsNone(A0_2169.SelectedCard) or not A0_2169:IsNone(A0_2169.SelectingCard)) then
            return
          end
        end
        if A0_2169.AA.LastSpellName ~= nil and A0_2169.AA.LastSpellName:find("card") then
          if not A0_2169:CanMove() then
            return
          end
          if OrbwalkManager.AA.Object ~= nil then
            return
          end
        end
        A0_2169:CastQ(L1_2170)
      end
    end
  end
  function __TwistedFate.Clear(A0_2171)
    local L1_2172, L2_2173, L3_2174, L4_2175, L5_2176, L6_2177
    L1_2172 = 0
    L1_2172 = _ENV[L1_2172]
    if not L1_2172 then
      return
    end
    L1_2172 = L1_2172 * L1_2172
    L1_2172 = OrbwalkManager
    L1_2172 = L1_2172.GetClearMode
    L1_2172 = L1_2172(L2_2173)
    if L1_2172 ~= nil then
      if L2_2173 then
        if L2_2173 >= L3_2174 then
          if L2_2173 then
            L2_2173(L3_2174)
            for L5_2176, L6_2177 in L2_2173(L3_2174) do
              A0_2171:CastQ(L6_2177, A0_2171.Menu.LaneClear.Q)
            end
            if L2_2173 > 1 then
              L5_2176 = L4_2175
              L6_2177 = {}
              L6_2177.UseCast = false
              L6_2177 = L4_2175(L5_2176, L6_2177)
              L2_2173(L3_2174, L4_2175, L5_2176, L6_2177, L4_2175(L5_2176, L6_2177))
            end
          end
        end
        if L2_2173 then
          if L2_2173 <= L3_2174 then
            L2_2173(L3_2174, L4_2175)
          end
        elseif L2_2173 >= L3_2174 then
          L2_2173(L3_2174)
          if L2_2173 >= L3_2174 then
            if L2_2173 > 0 then
              L5_2176 = A0_2171.KillableMinion
              if L4_2175 then
                L5_2176 = A0_2171.KillableMinion
                L6_2177 = A0_2171.W
                L6_2177 = L6_2177.Range
                if L2_2173 < L4_2175 then
                end
              end
              L5_2176 = A0_2171.MeanwhileMinion
              if L4_2175 then
                L5_2176 = A0_2171.MeanwhileMinion
                L6_2177 = A0_2171.W
                L6_2177 = L6_2177.Range
                if L2_2173 < L4_2175 then
                end
              end
              if L2_2173 > 0 then
                if L2_2173 >= L4_2175 then
                end
              end
              L5_2176 = A0_2171
              L6_2177 = A0_2171.Cards
              L6_2177 = L6_2177.Red
              L4_2175(L5_2176, L6_2177)
            end
          end
        end
      else
        if L2_2173 then
          if L2_2173 then
            L2_2173(L3_2174)
            for L5_2176, L6_2177 in L2_2173(L3_2174) do
              A0_2171:CastQ(L6_2177, A0_2171.Menu.JungleClear.Q2)
            end
          end
        end
        if L2_2173 then
          if L2_2173 <= L3_2174 then
            L2_2173(L3_2174, L4_2175)
          end
        elseif L2_2173 then
          if L2_2173 >= L3_2174 then
            L2_2173(L3_2174, L4_2175)
          end
        end
      end
    end
  end
  function __TwistedFate.LastHit(A0_2178)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_2178.Menu.LastHit.Mana then
      A0_2178:CastQ(A0_2178.Q:LastHit({
        Mode = A0_2178.Menu.LastHit.Q,
        UseCast = false
      }))
    end
  end
  function __TwistedFate.BestHitQ(A0_2179, A1_2180, A2_2181)
    local L3_2182, L4_2183, L5_2184, L6_2185, L7_2186, L8_2187, L9_2188, L10_2189, L11_2190, L12_2191, L13_2192, L14_2193, L15_2194, L16_2195, L17_2196, L18_2197
    L3_2182 = 0
    L3_2182 = _ENV[L3_2182]
    if not L3_2182 then
      return
    end
    L3_2182 = L3_2182 * L3_2182
    L3_2182 = os
    L3_2182 = L3_2182.clock
    L3_2182 = L3_2182()
    L4_2183 = A0_2179.LastRequest
    L3_2182 = L3_2182 - L4_2183
    if not (L3_2182 < 0.2) and A2_2181 ~= nil then
      L3_2182 = IsValidTarget
      L4_2183 = A1_2180
      L3_2182 = L3_2182(L4_2183)
    elseif not L3_2182 then
      L3_2182 = nil
      L4_2183 = -1
      return L3_2182, L4_2183
    end
    L3_2182 = os
    L3_2182 = L3_2182.clock
    L3_2182 = L3_2182()
    A0_2179.LastRequest = L3_2182
    L3_2182 = {}
    function L4_2183(A0_2198, A1_2199)
      local L2_2200, L3_2201, L4_2202, L5_2203, L6_2204, L7_2205, L8_2206
      L2_2200 = 0
      for L6_2204, L7_2205 in L3_2201(L4_2202) do
        L8_2206 = VectorPointProjectionOnLineSegment
        L8_2206 = L8_2206(myHero, A0_2198, L7_2205)
        if L8_2206(myHero, A0_2198, L7_2205) and GetDistanceSqr(L8_2206, L7_2205) < math.pow((A0_2179.Q.Width + L7_2205.boundingRadius) * 2 / 3, 2) and GetDistanceSqr(myHero, A0_2198) > GetDistanceSqr(myHero, L7_2205) and L3_2182[L7_2205.networkID] == nil then
          L2_2200 = L2_2200 + 1
          L3_2182[L7_2205.networkID] = true
        end
      end
      return L2_2200
    end
    L5_2184 = {}
    L6_2185 = 60
    L7_2186 = A0_2179.Q
    L7_2186 = L7_2186.PredictionSelected
    L7_2186 = L7_2186(L8_2187)
    if L7_2186 == "HPrediction" then
      L6_2185 = L8_2187 - 25
    elseif L7_2186 == "DivinePred" then
      L6_2185 = L8_2187 - 25
    end
    L6_2185 = L8_2187
    for L11_2190, L12_2191 in L8_2187(L9_2188) do
      L14_2193 = L13_2192
      L15_2194 = L12_2191
      if L13_2192 then
        L14_2193 = L13_2192
        L15_2194 = L12_2191
        L16_2195 = {}
        L16_2195.Accuracy = L6_2185
        L14_2193 = L13_2192(L14_2193, L15_2194, L16_2195)
        if L13_2192 and L14_2193 then
          L15_2194 = L12_2191.boundingRadius
          L13_2192.boundingRadius = L15_2194
          L15_2194 = L12_2191.networkID
          L13_2192.networkID = L15_2194
          L15_2194 = table
          L15_2194 = L15_2194.insert
          L16_2195 = L5_2184
          L17_2196 = L13_2192
          L15_2194(L16_2195, L17_2196)
        end
      end
    end
    if L8_2187 == 0 then
      return L8_2187, L9_2188
    end
    for L14_2193, L15_2194 in L11_2190(L12_2191) do
      L16_2195 = Vector
      L17_2196 = myHero
      L16_2195 = L16_2195(L17_2196)
      L17_2196 = Vector
      L18_2197 = myHero
      L18_2197 = L15_2194 - L18_2197
      L17_2196 = L17_2196(L18_2197)
      L18_2197 = L17_2196
      L17_2196 = L17_2196.normalized
      L17_2196 = L17_2196(L18_2197)
      L18_2197 = A0_2179.Q
      L18_2197 = L18_2197.Range
      L17_2196 = L17_2196 * L18_2197
      L16_2195 = L16_2195 + L17_2196
      L17_2196 = Vector
      L18_2197 = myHero
      L17_2196 = L17_2196(L18_2197)
      L18_2197 = Vector
      L18_2197 = L18_2197(L15_2194 - myHero)
      L18_2197 = L18_2197.normalized
      L18_2197 = L18_2197(L18_2197)
      L18_2197 = L18_2197.rotated
      L18_2197 = L18_2197(L18_2197, 0, L8_2187, 0)
      L18_2197 = L18_2197 * A0_2179.Q.Range
      L17_2196 = L17_2196 + L18_2197
      L18_2197 = Vector
      L18_2197 = L18_2197(myHero)
      L18_2197 = L18_2197 + Vector(L15_2194 - myHero):normalized():rotated(0, -L8_2187, 0) * A0_2179.Q.Range
      L3_2182 = {}
      if L10_2189 < L4_2183(L16_2195, L5_2184) + L4_2183(L17_2196, L5_2184) + L4_2183(L18_2197, L5_2184) and L3_2182[A1_2180.networkID] == true then
      end
      if not (L10_2189 >= #L5_2184) then
      end
    end
    return L11_2190, L12_2191
  end
  function __TwistedFate.CastQ(A0_2207, A1_2208, A2_2209)
    local L3_2210, L4_2211, L5_2212
    L3_2210 = 0
    L3_2210 = _ENV[L3_2210]
    if not L3_2210 then
      return
    end
    L3_2210 = L3_2210 * L3_2210
    L3_2210 = A0_2207.Q
    L4_2211 = L3_2210
    L3_2210 = L3_2210.IsReady
    L3_2210 = L3_2210(L4_2211)
    if L3_2210 then
      L3_2210 = A0_2207.Q
      L4_2211 = L3_2210
      L3_2210 = L3_2210.ValidTarget
      L5_2212 = A1_2208
      L3_2210 = L3_2210(L4_2211, L5_2212)
      if L3_2210 then
        L3_2210 = nil
        L4_2211 = A2_2209 ~= nil and A2_2209 or 1
        L5_2212 = A1_2208.type
        if L5_2212 == myHero.type then
          L5_2212 = GetEnemyHeroes
          L5_2212 = L5_2212()
          L3_2210 = L5_2212
        else
          L5_2212 = A0_2207.Q
          L5_2212 = L5_2212.EnemyMinions
          L5_2212 = L5_2212.update
          L5_2212(L5_2212)
          L5_2212 = A0_2207.Q
          L5_2212 = L5_2212.EnemyMinions
          L5_2212 = L5_2212.objects
          L5_2212 = #L5_2212
          if L5_2212 > 0 then
            L5_2212 = A0_2207.Q
            L5_2212 = L5_2212.EnemyMinions
            L3_2210 = L5_2212.objects
          else
            L5_2212 = A0_2207.Q
            L5_2212 = L5_2212.JungleMinions
            L5_2212 = L5_2212.update
            L5_2212(L5_2212)
            L5_2212 = A0_2207.Q
            L5_2212 = L5_2212.JungleMinions
            L5_2212 = L5_2212.objects
            L5_2212 = #L5_2212
            if L5_2212 > 0 then
              L5_2212 = A0_2207.Q
              L5_2212 = L5_2212.JungleMinions
              L3_2210 = L5_2212.objects
            end
          end
        end
        L5_2212 = A0_2207.BestHitQ
        L5_2212 = L5_2212(A0_2207, A1_2208, L3_2210)
        if not L5_2212 or L5_2212(A0_2207, A1_2208, L3_2210) < 0 then
          return
        end
        if L5_2212 and L5_2212(A0_2207, A1_2208, L3_2210) and L4_2211 <= L5_2212(A0_2207, A1_2208, L3_2210) then
          A0_2207.Q:CastToVector(L5_2212)
        end
      end
    end
  end
  function __TwistedFate.SelectCard(A0_2213, A1_2214)
    if not _ENV[0] then
      return
    end
    A0_2213.TryingToSelectCard = A1_2214 ~= nil and type(A1_2214) == "number" and A1_2214 or A0_2213.Cards.Gold
    if A0_2213.W:IsReady() and A0_2213.W:GetSpellData().name then
      if A0_2213.W:GetSpellData().name:lower():find("cardlock") then
        if A0_2213.SelectingCard == A0_2213.TryingToSelectCard then
          A0_2213.W:Cast()
        end
      elseif A0_2213.W:GetSpellData().name:lower():find("pickacard") then
        A0_2213.W:Cast()
      end
    end
  end
  function __TwistedFate.IsNone(A0_2215, A1_2216)
    local L2_2217, L3_2218, L4_2219, L5_2220, L6_2221, L7_2222, L8_2223, L9_2224, L10_2225, L11_2226, L12_2227, L13_2228, L14_2229, L15_2230, L16_2231, L17_2232, L18_2233, L19_2234, L20_2235, L21_2236, L22_2237, L23_2238, L24_2239, L25_2240, L26_2241, L27_2242, L28_2243, L29_2244, L30_2245, L31_2246, L32_2247, L33_2248, L34_2249, L35_2250, L36_2251, L37_2252, L38_2253, L39_2254, L40_2255, L41_2256, L42_2257, L43_2258, L44_2259, L45_2260, L46_2261, L47_2262, L48_2263, L49_2264, L50_2265, L51_2266, L52_2267, L53_2268, L54_2269, L55_2270, L56_2271, L57_2272, L58_2273, L59_2274, L60_2275, L61_2276, L62_2277, L63_2278, L64_2279, L65_2280, L66_2281, L67_2282, L68_2283, L69_2284, L70_2285, L71_2286, L72_2287, L73_2288, L74_2289, L75_2290, L76_2291, L77_2292, L78_2293, L79_2294, L80_2295, L81_2296, L82_2297, L83_2298, L84_2299, L85_2300, L86_2301, L87_2302, L88_2303, L89_2304, L90_2305, L91_2306, L92_2307, L93_2308, L94_2309, L95_2310, L96_2311, L97_2312, L98_2313, L99_2314, L100_2315, L101_2316, L102_2317, L103_2318, L104_2319, L105_2320, L106_2321, L107_2322, L108_2323, L109_2324, L110_2325, L111_2326, L112_2327, L113_2328, L114_2329, L115_2330, L116_2331, L117_2332, L118_2333, L119_2334, L120_2335, L121_2336, L122_2337, L123_2338, L124_2339, L125_2340, L126_2341, L127_2342, L128_2343, L129_2344, L130_2345, L131_2346, L132_2347, L133_2348, L134_2349, L135_2350, L136_2351, L137_2352, L138_2353, L139_2354, L140_2355, L141_2356, L142_2357, L143_2358, L144_2359, L145_2360, L146_2361, L147_2362, L148_2363, L149_2364, L150_2365, L151_2366, L152_2367, L153_2368, L154_2369, L155_2370, L156_2371, L157_2372, L158_2373, L159_2374, L160_2375, L161_2376, L162_2377, L163_2378, L164_2379, L165_2380, L166_2381, L167_2382, L168_2383, L169_2384, L170_2385, L171_2386, L172_2387, L173_2388, L174_2389, L175_2390, L176_2391, L177_2392, L178_2393, L179_2394, L180_2395, L181_2396, L182_2397, L183_2398, L184_2399, L185_2400, L186_2401, L187_2402, L188_2403, L189_2404, L190_2405, L191_2406, L192_2407, L193_2408, L194_2409, L195_2410, L196_2411, L197_2412, L198_2413, L199_2414, L200_2415, L201_2416, L202_2417, L203_2418, L204_2419, L205_2420, L206_2421, L207_2422, L208_2423, L209_2424, L210_2425, L211_2426, L212_2427, L213_2428, L214_2429, L215_2430, L216_2431, L217_2432, L218_2433, L219_2434, L220_2435, L221_2436, L222_2437, L223_2438, L224_2439, L225_2440, L226_2441, L227_2442, L228_2443, L229_2444, L230_2445, L231_2446, L232_2447, L233_2448, L234_2449, L235_2450, L236_2451, L237_2452, L238_2453, L239_2454, L240_2455, L241_2456, L242_2457, L243_2458, L244_2459, L245_2460, L246_2461, L247_2462, L248_2463, L249_2464, L250_2465, L251_2466, L252_2467, L253_2468, L254_2469
    L2_2217 = A0_2215.Cards
    L2_2217 = L2_2217.None
    L2_2217 = A1_2216 == L2_2217
    return L2_2217
  end
  function __TwistedFate.IsBlue(A0_2470, A1_2471)
    local L2_2472, L3_2473, L4_2474, L5_2475, L6_2476, L7_2477, L8_2478, L9_2479, L10_2480, L11_2481, L12_2482, L13_2483, L14_2484, L15_2485, L16_2486, L17_2487, L18_2488, L19_2489, L20_2490, L21_2491, L22_2492, L23_2493, L24_2494, L25_2495, L26_2496, L27_2497, L28_2498, L29_2499, L30_2500, L31_2501, L32_2502, L33_2503, L34_2504, L35_2505, L36_2506, L37_2507, L38_2508, L39_2509, L40_2510, L41_2511, L42_2512, L43_2513, L44_2514, L45_2515, L46_2516, L47_2517, L48_2518, L49_2519, L50_2520, L51_2521, L52_2522, L53_2523, L54_2524, L55_2525, L56_2526, L57_2527, L58_2528, L59_2529, L60_2530, L61_2531, L62_2532, L63_2533, L64_2534, L65_2535, L66_2536, L67_2537, L68_2538, L69_2539, L70_2540, L71_2541, L72_2542, L73_2543, L74_2544, L75_2545, L76_2546, L77_2547, L78_2548, L79_2549, L80_2550, L81_2551, L82_2552, L83_2553, L84_2554, L85_2555, L86_2556, L87_2557, L88_2558, L89_2559, L90_2560, L91_2561, L92_2562, L93_2563, L94_2564, L95_2565, L96_2566, L97_2567, L98_2568, L99_2569, L100_2570, L101_2571, L102_2572, L103_2573, L104_2574, L105_2575, L106_2576, L107_2577, L108_2578, L109_2579, L110_2580, L111_2581, L112_2582, L113_2583, L114_2584, L115_2585, L116_2586, L117_2587, L118_2588, L119_2589, L120_2590, L121_2591, L122_2592, L123_2593, L124_2594, L125_2595, L126_2596, L127_2597, L128_2598, L129_2599, L130_2600, L131_2601, L132_2602, L133_2603, L134_2604, L135_2605, L136_2606, L137_2607, L138_2608, L139_2609, L140_2610, L141_2611, L142_2612, L143_2613, L144_2614, L145_2615, L146_2616, L147_2617, L148_2618, L149_2619, L150_2620, L151_2621, L152_2622, L153_2623, L154_2624, L155_2625, L156_2626, L157_2627, L158_2628, L159_2629, L160_2630, L161_2631, L162_2632, L163_2633, L164_2634, L165_2635, L166_2636, L167_2637, L168_2638, L169_2639, L170_2640, L171_2641, L172_2642, L173_2643, L174_2644, L175_2645, L176_2646, L177_2647, L178_2648, L179_2649, L180_2650, L181_2651, L182_2652, L183_2653, L184_2654, L185_2655, L186_2656, L187_2657, L188_2658, L189_2659, L190_2660, L191_2661, L192_2662, L193_2663, L194_2664, L195_2665, L196_2666, L197_2667, L198_2668, L199_2669, L200_2670, L201_2671, L202_2672, L203_2673, L204_2674, L205_2675, L206_2676, L207_2677, L208_2678, L209_2679, L210_2680, L211_2681, L212_2682, L213_2683, L214_2684, L215_2685, L216_2686, L217_2687, L218_2688, L219_2689, L220_2690, L221_2691, L222_2692, L223_2693, L224_2694, L225_2695, L226_2696, L227_2697, L228_2698, L229_2699, L230_2700, L231_2701, L232_2702, L233_2703, L234_2704, L235_2705, L236_2706, L237_2707, L238_2708, L239_2709, L240_2710, L241_2711, L242_2712, L243_2713, L244_2714, L245_2715, L246_2716, L247_2717, L248_2718, L249_2719, L250_2720, L251_2721, L252_2722, L253_2723, L254_2724
    L2_2472 = A0_2470.Cards
    L2_2472 = L2_2472.Blue
    L2_2472 = A1_2471 == L2_2472
    return L2_2472
  end
  function __TwistedFate.IsRed(A0_2725, A1_2726)
    local L2_2727, L3_2728, L4_2729, L5_2730, L6_2731, L7_2732, L8_2733, L9_2734, L10_2735, L11_2736, L12_2737, L13_2738, L14_2739, L15_2740, L16_2741, L17_2742, L18_2743, L19_2744, L20_2745, L21_2746, L22_2747, L23_2748, L24_2749, L25_2750, L26_2751, L27_2752, L28_2753, L29_2754, L30_2755, L31_2756, L32_2757, L33_2758, L34_2759, L35_2760, L36_2761, L37_2762, L38_2763, L39_2764, L40_2765, L41_2766, L42_2767, L43_2768, L44_2769, L45_2770, L46_2771, L47_2772, L48_2773, L49_2774, L50_2775, L51_2776, L52_2777, L53_2778, L54_2779, L55_2780, L56_2781, L57_2782, L58_2783, L59_2784, L60_2785, L61_2786, L62_2787, L63_2788, L64_2789, L65_2790, L66_2791, L67_2792, L68_2793, L69_2794, L70_2795, L71_2796, L72_2797, L73_2798, L74_2799, L75_2800, L76_2801, L77_2802, L78_2803, L79_2804, L80_2805, L81_2806, L82_2807, L83_2808, L84_2809, L85_2810, L86_2811, L87_2812, L88_2813, L89_2814, L90_2815, L91_2816, L92_2817, L93_2818, L94_2819, L95_2820, L96_2821, L97_2822, L98_2823, L99_2824, L100_2825, L101_2826, L102_2827, L103_2828, L104_2829, L105_2830, L106_2831, L107_2832, L108_2833, L109_2834, L110_2835, L111_2836, L112_2837, L113_2838, L114_2839, L115_2840, L116_2841, L117_2842, L118_2843, L119_2844, L120_2845, L121_2846, L122_2847, L123_2848, L124_2849, L125_2850, L126_2851, L127_2852, L128_2853, L129_2854, L130_2855, L131_2856, L132_2857, L133_2858, L134_2859, L135_2860, L136_2861, L137_2862, L138_2863, L139_2864, L140_2865, L141_2866, L142_2867, L143_2868, L144_2869, L145_2870, L146_2871, L147_2872, L148_2873, L149_2874, L150_2875, L151_2876, L152_2877, L153_2878, L154_2879, L155_2880, L156_2881, L157_2882, L158_2883, L159_2884, L160_2885, L161_2886, L162_2887, L163_2888, L164_2889, L165_2890, L166_2891, L167_2892, L168_2893, L169_2894, L170_2895, L171_2896, L172_2897, L173_2898, L174_2899, L175_2900, L176_2901, L177_2902, L178_2903, L179_2904, L180_2905, L181_2906, L182_2907, L183_2908, L184_2909, L185_2910, L186_2911, L187_2912, L188_2913, L189_2914, L190_2915, L191_2916, L192_2917, L193_2918, L194_2919, L195_2920, L196_2921, L197_2922, L198_2923, L199_2924, L200_2925, L201_2926, L202_2927, L203_2928, L204_2929, L205_2930, L206_2931, L207_2932, L208_2933, L209_2934, L210_2935, L211_2936, L212_2937, L213_2938, L214_2939, L215_2940, L216_2941, L217_2942, L218_2943, L219_2944, L220_2945, L221_2946, L222_2947, L223_2948, L224_2949, L225_2950, L226_2951, L227_2952, L228_2953, L229_2954, L230_2955, L231_2956, L232_2957, L233_2958, L234_2959, L235_2960, L236_2961, L237_2962, L238_2963, L239_2964, L240_2965, L241_2966, L242_2967, L243_2968, L244_2969, L245_2970, L246_2971, L247_2972, L248_2973, L249_2974, L250_2975, L251_2976, L252_2977, L253_2978, L254_2979
    L2_2727 = A0_2725.Cards
    L2_2727 = L2_2727.Red
    L2_2727 = A1_2726 == L2_2727
    return L2_2727
  end
  function __TwistedFate.IsGold(A0_2980, A1_2981)
    local L2_2982, L3_2983, L4_2984, L5_2985, L6_2986, L7_2987, L8_2988, L9_2989, L10_2990, L11_2991, L12_2992, L13_2993, L14_2994, L15_2995, L16_2996, L17_2997, L18_2998, L19_2999, L20_3000, L21_3001, L22_3002, L23_3003, L24_3004, L25_3005, L26_3006, L27_3007, L28_3008, L29_3009, L30_3010, L31_3011, L32_3012, L33_3013, L34_3014, L35_3015, L36_3016, L37_3017, L38_3018, L39_3019, L40_3020, L41_3021, L42_3022, L43_3023, L44_3024, L45_3025, L46_3026, L47_3027, L48_3028, L49_3029, L50_3030, L51_3031, L52_3032, L53_3033, L54_3034, L55_3035, L56_3036, L57_3037, L58_3038, L59_3039, L60_3040, L61_3041, L62_3042, L63_3043, L64_3044, L65_3045, L66_3046, L67_3047, L68_3048, L69_3049, L70_3050, L71_3051, L72_3052, L73_3053, L74_3054, L75_3055, L76_3056, L77_3057, L78_3058, L79_3059, L80_3060, L81_3061, L82_3062, L83_3063, L84_3064, L85_3065, L86_3066, L87_3067, L88_3068, L89_3069, L90_3070, L91_3071, L92_3072, L93_3073, L94_3074, L95_3075, L96_3076, L97_3077, L98_3078, L99_3079, L100_3080, L101_3081, L102_3082, L103_3083, L104_3084, L105_3085, L106_3086, L107_3087, L108_3088, L109_3089, L110_3090, L111_3091, L112_3092, L113_3093, L114_3094, L115_3095, L116_3096, L117_3097, L118_3098, L119_3099, L120_3100, L121_3101, L122_3102, L123_3103, L124_3104, L125_3105, L126_3106, L127_3107, L128_3108, L129_3109, L130_3110, L131_3111, L132_3112, L133_3113, L134_3114, L135_3115, L136_3116, L137_3117, L138_3118, L139_3119, L140_3120, L141_3121, L142_3122, L143_3123, L144_3124, L145_3125, L146_3126, L147_3127, L148_3128, L149_3129, L150_3130, L151_3131, L152_3132, L153_3133, L154_3134, L155_3135, L156_3136, L157_3137, L158_3138, L159_3139, L160_3140, L161_3141, L162_3142, L163_3143, L164_3144, L165_3145, L166_3146, L167_3147, L168_3148, L169_3149, L170_3150, L171_3151, L172_3152, L173_3153, L174_3154, L175_3155, L176_3156, L177_3157, L178_3158, L179_3159, L180_3160, L181_3161, L182_3162, L183_3163, L184_3164, L185_3165, L186_3166, L187_3167, L188_3168, L189_3169, L190_3170, L191_3171, L192_3172, L193_3173, L194_3174, L195_3175, L196_3176, L197_3177, L198_3178, L199_3179, L200_3180, L201_3181, L202_3182, L203_3183, L204_3184, L205_3185, L206_3186, L207_3187, L208_3188, L209_3189, L210_3190, L211_3191, L212_3192, L213_3193, L214_3194, L215_3195, L216_3196, L217_3197, L218_3198, L219_3199, L220_3200, L221_3201, L222_3202, L223_3203, L224_3204, L225_3205, L226_3206, L227_3207, L228_3208, L229_3209, L230_3210, L231_3211, L232_3212, L233_3213, L234_3214, L235_3215, L236_3216, L237_3217, L238_3218, L239_3219, L240_3220, L241_3221, L242_3222, L243_3223, L244_3224, L245_3225, L246_3226, L247_3227, L248_3228, L249_3229, L250_3230, L251_3231, L252_3232, L253_3233, L254_3234
    L2_2982 = A0_2980.Cards
    L2_2982 = L2_2982.Gold
    L2_2982 = A1_2981 == L2_2982
    return L2_2982
  end
  function __TwistedFate.Attack(A0_3235, A1_3236)
    if not _ENV[0] then
      return
    end
    if OrbwalkManager:InRange(A1_3236) and A0_3235:CanAttack() then
      myHero:HoldPosition()
      OrbwalkManager:DisableMovement()
      A0_3235.AA.Sent = true
      myHero:Attack(A1_3236)
      A0_3235.AA.Sent = false
      A0_3235.AA.LastTime = A0_3235:GetTime() - 2 * A0_3235:Latency()
    end
  end
  function __TwistedFate.OnProcessSpell(A0_3237, A1_3238, A2_3239)
    local L3_3240
    L3_3240 = 0
    L3_3240 = _ENV[L3_3240]
    if not L3_3240 then
      return
    end
    L3_3240 = L3_3240 * L3_3240
    L3_3240 = A0_3237.Menu
    if L3_3240 ~= nil then
      L3_3240 = A0_3237.MenuLoaded
    elseif not L3_3240 then
      return
    end
    if A1_3238 and A2_3239 then
      L3_3240 = A1_3238.isMe
      if L3_3240 then
        L3_3240 = A2_3239.name
        if L3_3240 then
          L3_3240 = A2_3239.name
          L3_3240 = L3_3240.lower
          L3_3240 = L3_3240(L3_3240)
          if OrbwalkManager:IsAutoAttack(L3_3240) then
            if not A0_3237.DataUpdated then
              if not L3_3240:find("card") then
                A0_3237.BaseAnimationTime = 1 / (A2_3239.animationTime * myHero.attackSpeed)
                A0_3237.BaseWindUpTime = 1 / (A2_3239.windUpTime * myHero.attackSpeed)
                OrbwalkManager.BaseAnimationTime = 1 / (A2_3239.animationTime * myHero.attackSpeed)
                OrbwalkManager.BaseWindUpTime = 1 / (A2_3239.windUpTime * myHero.attackSpeed)
                A0_3237.DataUpdated = true
              elseif OrbwalkManager.OrbLoaded == "AutoCarry" then
                DelayAction(function()
                  _G.AutoCarry.Orbwalker:ResetOrbwalkValues()
                end, 2 * A0_3237:Latency())
              end
            end
            A0_3237.AA.LastTarget = A2_3239.target
            A0_3237.AA.LastTime = A0_3237:GetTime() - A0_3237:Latency()
            A0_3237.AA.LastSpellName = A2_3239.name
          elseif L3_3240:find("pickacard") then
            A0_3237.W.LastCastTime = os.clock()
            A0_3237.SelectingCard = A0_3237.Cards.None
            A0_3237.SelectedCard = A0_3237.Cards.None
            A0_3237.TryingToSelectCard = A0_3237.Cards.None
          elseif L3_3240:find("cardlock") then
            A0_3237.W.LastCastTime = os.clock()
            A0_3237.SelectingCard = A0_3237.Cards.None
            A0_3237.ForceCard = A0_3237.Cards.None
            A0_3237.TryingToSelectCard = A0_3237.Cards.None
            if L3_3240:find("blue") then
              A0_3237.SelectedCard = A0_3237.Cards.Blue
            elseif L3_3240:find("red") then
              A0_3237.SelectedCard = A0_3237.Cards.Red
            elseif L3_3240:find("gold") then
              A0_3237.SelectedCard = A0_3237.Cards.Gold
            end
          elseif L3_3240:find("gate") and A0_3237.Menu.General.Gold then
            A0_3237.ForceCard = A0_3237.Cards.Gold
            A0_3237:SelectCard(A0_3237.ForceCard)
          end
        end
      end
    end
  end
  function __TwistedFate.OnCreateObj(A0_3241, A1_3242)
    if not _ENV[0] then
      return
    end
    if A0_3241.Menu == nil or not A0_3241.MenuLoaded then
      return
    end
    if A1_3242 and A1_3242.name then
      if string.sub(A1_3242.name:lower(), 0, myHero.charName:len()) == myHero.charName:lower() or GetDistanceSqr(myHero, A1_3242) < 2500 then
      end
      if GetDistanceSqr(myHero, A1_3242) < 1600 then
        if A1_3242.name:lower() == "cardmaster_stackready.troy" then
          A0_3241.StackReady = true
        elseif A1_3242.name:lower() == "purplehands_buf.troy" then
          A0_3241.LichbaneReady = true
        elseif A1_3242.name:lower() == "enrage_buf.troy" then
          A0_3241.SheenReady = true
        elseif A1_3242.name:lower():find("_w_") and A1_3242.name:lower():find("card") then
          if A1_3242.name:lower():find("blue") then
            A0_3241.LastCardTime = os.clock()
          elseif A1_3242.name:lower():find("red") then
            A0_3241.LastCardTime = os.clock()
          elseif A1_3242.name:lower():find("gold") then
            A0_3241.LastCardTime = os.clock()
          end
        end
      end
    end
  end
  function __TwistedFate.OnDeleteObj(A0_3243, A1_3244)
    if not _ENV[0] then
      return
    end
    if A0_3243.Menu == nil or not A0_3243.MenuLoaded then
      return
    end
    if A1_3244 and A1_3244.name then
      if string.sub(A1_3244.name:lower(), 0, myHero.charName:len()) == myHero.charName:lower() or GetDistanceSqr(myHero, A1_3244) < 2500 then
      end
      if GetDistanceSqr(myHero, A1_3244) < 1600 then
        if A1_3244.name:lower() == "cardmaster_stackready.troy" then
          A0_3243.StackReady = false
        elseif A1_3244.name:lower() == "purplehands_buf.troy" then
          A0_3243.LichbaneReady = false
        elseif A1_3244.name:lower() == "enrage_buf.troy" then
          A0_3243.SheenReady = false
        end
      end
    end
  end
  function __TwistedFate.GetComboDamage(A0_3245, A1_3246, A2_3247, A3_3248, A4_3249, A5_3250)
    local L6_3251, L7_3252
    L6_3251 = 0
    L6_3251 = _ENV[L6_3251]
    if not L6_3251 then
      return
    end
    L6_3251 = L6_3251 * L6_3251
    L6_3251 = 0
    L7_3252 = 0
    if IsValidTarget(A1_3246) then
      if A2_3247 then
        L6_3251 = L6_3251 + A0_3245.Q:Damage(A1_3246)
        L7_3252 = L7_3252 + A0_3245.Q:Mana()
      end
      if A3_3248 then
        L6_3251 = L6_3251 + A0_3245.W:Damage(A1_3246)
        L7_3252 = L7_3252 + A0_3245.W:Mana()
      end
      if A4_3249 then
        L6_3251 = L6_3251 + A0_3245.E:Damage(A1_3246)
        L7_3252 = L7_3252 + A0_3245.E:Mana()
      end
      if A5_3250 then
        L6_3251 = L6_3251 + A0_3245.R:Damage(A1_3246)
        L7_3252 = L7_3252 + A0_3245.R:Mana()
      end
      if A3_3:IsReady() then
        L6_3251 = L6_3251 + A3_3:Damage(A1_3246)
      end
      L6_3251 = L6_3251 + A0_3245:MyDamage(A1_3246) * 2
    end
    L6_3251 = L6_3251 * A0_3245:GetOverkill()
    return L6_3251, L7_3252
  end
  function __TwistedFate.GetOverkill(A0_3253)
    local L1_3254, L2_3255, L3_3256, L4_3257, L5_3258, L6_3259, L7_3260, L8_3261, L9_3262, L10_3263, L11_3264, L12_3265, L13_3266, L14_3267, L15_3268, L16_3269, L17_3270, L18_3271, L19_3272, L20_3273, L21_3274, L22_3275, L23_3276, L24_3277, L25_3278, L26_3279, L27_3280, L28_3281, L29_3282, L30_3283, L31_3284, L32_3285, L33_3286, L34_3287, L35_3288, L36_3289, L37_3290, L38_3291, L39_3292, L40_3293, L41_3294, L42_3295, L43_3296, L44_3297, L45_3298, L46_3299, L47_3300, L48_3301, L49_3302, L50_3303, L51_3304, L52_3305, L53_3306, L54_3307, L55_3308, L56_3309, L57_3310, L58_3311, L59_3312, L60_3313, L61_3314, L62_3315, L63_3316, L64_3317, L65_3318, L66_3319, L67_3320, L68_3321, L69_3322, L70_3323, L71_3324, L72_3325, L73_3326, L74_3327, L75_3328, L76_3329, L77_3330, L78_3331, L79_3332, L80_3333, L81_3334, L82_3335, L83_3336, L84_3337, L85_3338, L86_3339, L87_3340, L88_3341, L89_3342, L90_3343, L91_3344, L92_3345, L93_3346, L94_3347, L95_3348, L96_3349, L97_3350, L98_3351, L99_3352, L100_3353, L101_3354, L102_3355, L103_3356, L104_3357, L105_3358, L106_3359, L107_3360, L108_3361, L109_3362, L110_3363, L111_3364, L112_3365, L113_3366, L114_3367, L115_3368, L116_3369, L117_3370, L118_3371, L119_3372, L120_3373, L121_3374, L122_3375, L123_3376, L124_3377, L125_3378, L126_3379, L127_3380, L128_3381, L129_3382, L130_3383, L131_3384, L132_3385, L133_3386, L134_3387, L135_3388, L136_3389, L137_3390, L138_3391, L139_3392, L140_3393, L141_3394, L142_3395, L143_3396, L144_3397, L145_3398, L146_3399, L147_3400, L148_3401, L149_3402, L150_3403, L151_3404, L152_3405, L153_3406, L154_3407, L155_3408, L156_3409, L157_3410, L158_3411, L159_3412, L160_3413, L161_3414, L162_3415, L163_3416, L164_3417, L165_3418, L166_3419, L167_3420, L168_3421, L169_3422, L170_3423, L171_3424, L172_3425, L173_3426, L174_3427, L175_3428, L176_3429, L177_3430, L178_3431, L179_3432, L180_3433, L181_3434, L182_3435, L183_3436, L184_3437, L185_3438, L186_3439, L187_3440, L188_3441, L189_3442, L190_3443, L191_3444, L192_3445, L193_3446, L194_3447, L195_3448, L196_3449, L197_3450, L198_3451, L199_3452, L200_3453, L201_3454, L202_3455, L203_3456, L204_3457, L205_3458, L206_3459, L207_3460, L208_3461, L209_3462, L210_3463, L211_3464, L212_3465, L213_3466, L214_3467, L215_3468, L216_3469, L217_3470, L218_3471, L219_3472, L220_3473, L221_3474, L222_3475, L223_3476, L224_3477, L225_3478, L226_3479, L227_3480, L228_3481, L229_3482, L230_3483, L231_3484, L232_3485, L233_3486, L234_3487, L235_3488, L236_3489, L237_3490, L238_3491, L239_3492, L240_3493, L241_3494, L242_3495, L243_3496, L244_3497, L245_3498, L246_3499, L247_3500, L248_3501, L249_3502, L250_3503, L251_3504, L252_3505, L253_3506, L254_3507
    L1_3254 = A0_3253.Menu
    L1_3254 = L1_3254.General
    L1_3254 = L1_3254.Overkill
    L1_3254 = 100 + L1_3254
    L1_3254 = L1_3254 / 100
    return L1_3254
  end
  function __TwistedFate.OnCastSpell(A0_3508, A1_3509, A2_3510, A3_3511, A4_3512)
    if not _ENV[0] then
      return
    end
    if A0_3508.Menu == nil or not A0_3508.MenuLoaded then
      return
    end
    A0_3508.LastCastTime = os.clock()
    if A1_3509 == A0_3508.Q.Slot and A0_3508.Q:IsReady() then
    elseif A1_3509 == A0_3508.W.Slot and A0_3508.W:IsReady() then
      A0_3508.W.LastCastTime = os.clock()
    end
  end
  function __TwistedFate.OnRemoveBuff(A0_3513, A1_3514, A2_3515)
    if A1_3514 and A2_3515 and A1_3514.isMe and A2_3515.name:lower():find("pickacard_tracker") then
      A0_3513.SelectedCard = A0_3513.Cards.None
      A0_3513.SelectingCard = A0_3513.Cards.None
      A0_3513.ForceCard = A0_3513.Cards.None
      A0_3513.TryingToSelectCard = A0_3513.Cards.None
    end
  end
  function __TwistedFate.Damage(A0_3516, A1_3517, A2_3518)
    local L3_3519, L4_3520, L5_3521, L6_3522
    L3_3519 = 0
    L3_3519 = _ENV[L3_3519]
    if not L3_3519 then
      return
    end
    L3_3519 = L3_3519 * L3_3519
    L3_3519 = 0
    L4_3520 = IsValidTarget
    L5_3521 = A2_3518
    L4_3520 = L4_3520(L5_3521)
    if L4_3520 then
      L4_3520 = myHero
      L4_3520 = L4_3520.ap
      L5_3521 = myHero
      L5_3521 = L5_3521.totalDamage
      if A1_3517 == "E" then
        L6_3522 = A0_3516.E
        L6_3522 = L6_3522.GetSpellData
        L6_3522 = L6_3522(L6_3522)
        if L6_3522 ~= nil then
          L6_3522 = A0_3516.E
          L6_3522 = L6_3522.GetSpellData
          L6_3522 = L6_3522(L6_3522)
          L6_3522 = L6_3522.level
          if L6_3522 ~= nil then
            L6_3522 = A0_3516.E
            L6_3522 = L6_3522.GetSpellData
            L6_3522 = L6_3522(L6_3522)
            L6_3522 = L6_3522.level
          end
        else
          L6_3522 = L6_3522 or 0
        end
        L3_3519 = 25 * L6_3522 + 30 + 0.5 * L4_3520
      elseif A1_3517 == "W" then
        L6_3522 = A0_3516.IsNone
        L6_3522 = L6_3522(A0_3516, A0_3516.SelectedCard)
        if not L6_3522 then
          L6_3522 = A0_3516.SelectedCard
        elseif not L6_3522 then
          L6_3522 = A0_3516.Cards
          L6_3522 = L6_3522.Red
        end
        if A0_3516:IsBlue(L6_3522) then
          L3_3519 = 20 * (A0_3516.W:GetSpellData() ~= nil and A0_3516.W:GetSpellData().level ~= nil and A0_3516.W:GetSpellData().level or 0) + 20 + 0.5 * L4_3520 + 1 * L5_3521
        elseif A0_3516:IsRed(L6_3522) then
          L3_3519 = 15 * (A0_3516.W:GetSpellData() ~= nil and A0_3516.W:GetSpellData().level ~= nil and A0_3516.W:GetSpellData().level or 0) + 15 + 0.5 * L4_3520 + 1 * L5_3521
        elseif A0_3516:IsGold(L6_3522) then
          L3_3519 = 7.5 * (A0_3516.W:GetSpellData() ~= nil and A0_3516.W:GetSpellData().level ~= nil and A0_3516.W:GetSpellData().level or 0) + 7.5 + 0.5 * L4_3520 + 1 * L5_3521
        end
      end
    end
    if L3_3519 > 0 then
      L4_3520 = myHero
      L5_3521 = L4_3520
      L4_3520 = L4_3520.CalcMagicDamage
      L6_3522 = A2_3518
      L4_3520 = L4_3520(L5_3521, L6_3522, L3_3519)
      L3_3519 = L4_3520
    end
    return L3_3519
  end
  function __TwistedFate.OnWndMsg(A0_3523, A1_3524, A2_3525)
    local L3_3526
    L3_3526 = 0
    L3_3526 = _ENV[L3_3526]
    if not L3_3526 then
      return
    end
    L3_3526 = L3_3526 * L3_3526
    L3_3526 = A0_3523.Menu
    if L3_3526 ~= nil then
      L3_3526 = A0_3523.MenuLoaded
    elseif not L3_3526 then
      return
    end
    L3_3526 = KEY_DOWN
    if A1_3524 == L3_3526 then
      L3_3526 = A0_3523.Menu
      L3_3526 = L3_3526.Keys
      L3_3526 = L3_3526._param
      L3_3526 = L3_3526[A0_3523.Menu.Keys:getParamIndex("Gold")]
      L3_3526 = L3_3526.key
      if A2_3525 == L3_3526 then
        L3_3526 = A0_3523.Cards
        L3_3526 = L3_3526.Gold
        A0_3523.ForceCard = L3_3526
      else
        L3_3526 = A0_3523.Menu
        L3_3526 = L3_3526.Keys
        L3_3526 = L3_3526._param
        L3_3526 = L3_3526[A0_3523.Menu.Keys:getParamIndex("Red")]
        L3_3526 = L3_3526.key
        if A2_3525 == L3_3526 then
          L3_3526 = A0_3523.Cards
          L3_3526 = L3_3526.Red
          A0_3523.ForceCard = L3_3526
        else
          L3_3526 = A0_3523.Menu
          L3_3526 = L3_3526.Keys
          L3_3526 = L3_3526._param
          L3_3526 = L3_3526[A0_3523.Menu.Keys:getParamIndex("Blue")]
          L3_3526 = L3_3526.key
          if A2_3525 == L3_3526 then
            L3_3526 = A0_3523.Cards
            L3_3526 = L3_3526.Blue
            A0_3523.ForceCard = L3_3526
          end
        end
      end
    end
  end
  function __TwistedFate.OnSendPacket(A0_3527, A1_3528)
    if not _ENV[0] then
      return
    end
    if A1_3528 then
      A1_3528.pos = 2
      if myHero.networkID == A1_3528:DecodeF() then
        if A0_3527.AA.Sent and A0_3527.AA.Packet == nil then
          A0_3527.AA.Packet = A1_3528.header
        end
        if A0_3527.Move.Sent and A0_3527.Move.Packet == nil then
          A0_3527.Move.Packet = A1_3528.header
        end
        if A0_3527.AA.Packet ~= A1_3528.header and A0_3527:GetTime() - A0_3527.AA.LastTime + A0_3527:Latency() <= 1 * A0_3527:WindUpTime() and not OrbwalkManager:IsNone() and not IsEvading() and os.clock() - A0_3527.LastCastTime > 0.2 then
          Packet(A1_3528):block()
        elseif os.clock() - A0_3527.W.LastCastTime < 0.05 and A0_3527.W:GetSpellData().name and A0_3527.W:IsReady() and A0_3527.W:GetSpellData().name:lower():find("cardlock") then
          if A0_3527.W:GetSpellData().name:lower():find("blue") then
          elseif A0_3527.W:GetSpellData().name:lower():find("red") then
          else
          end
          if A0_3527.Cards.Gold ~= A0_3527.TryingToSelectCard or os.clock() - A0_3527.LastCardTime > 0.48 then
          end
        end
      end
    end
  end
  function __TwistedFate.OnAnimation(A0_3529, A1_3530, A2_3531)
    if not A1_3530 or not A2_3531 or not (A0_3529:GetTime() - A0_3529.AA.LastTime + A0_3529:Latency() <= 1 * A0_3529:WindUpTime()) or A2_3531:lower():find("idle") then
    end
  end
  function __TwistedFate.GetKillableMinion(A0_3532, A1_3533)
    local L2_3534, L3_3535, L4_3536, L5_3537, L6_3538, L7_3539, L8_3540, L9_3541, L10_3542
    L2_3534 = 0
    L2_3534 = _ENV[L2_3534]
    if not L2_3534 then
      return
    end
    L2_3534 = L2_3534 * L2_3534
    L2_3534 = A1_3533 ~= nil and A1_3533 or 0
    L3_3535 = {}
    if L4_3536 > 0 then
      for L7_3539, L8_3540 in L4_3536(L5_3537) do
        L9_3541 = L8_3540.dead
        if not L9_3541 then
          L9_3541 = L8_3540.health
          if L9_3541 > 0 then
            L9_3541 = IsValidTarget
            L10_3542 = L8_3540
            L9_3541 = L9_3541(L10_3542)
            if L9_3541 then
              L9_3541 = L8_3540.charName
              L10_3542 = L9_3541
              L9_3541 = L9_3541.lower
              L9_3541 = L9_3541(L10_3542)
              L10_3542 = L9_3541
              L9_3541 = L9_3541.find
              L9_3541 = L9_3541(L10_3542, "cannon")
              if L9_3541 then
                L9_3541, L10_3542 = nil, nil
                if OrbwalkManager:InRange(L8_3540) then
                  L9_3541 = A0_3532:MyDamage(L8_3540)
                  L10_3542 = A0_3532:WindUpTime() + A0_3532:AnimationTime() + GetDistance(myHero, L8_3540) / A0_3532.ProjectileSpeed + ExtraTime()
                  L10_3542 = L10_3542 * 2
                end
                if L9_3541 ~= nil and L9_3541 > Prediction.VP:GetPredictedHealth2(L8_3540, L10_3542) then
                  table.insert(L3_3535, L8_3540)
                end
              end
            end
          end
        end
      end
    end
    if L4_3536 > 0 then
      for L7_3539 = #L3_3535, 1, -1 do
        L8_3540 = L3_3535[L7_3539]
        if L8_3540 then
          L9_3541 = L8_3540.dead
          if not L9_3541 then
            L9_3541 = L8_3540.health
            if L9_3541 > 0 then
              L9_3541 = IsValidTarget
              L10_3542 = L8_3540
              L9_3541 = L9_3541(L10_3542)
              if L9_3541 then
                L9_3541, L10_3542 = nil, nil
                if OrbwalkManager:InRange(L8_3540) then
                  L9_3541 = A0_3532:MyDamage(L8_3540)
                  L10_3542 = A0_3532:WindUpTime() + GetDistance(myHero, L8_3540) / A0_3532.ProjectileSpeed + ExtraTime()
                end
                if L9_3541 ~= nil and L9_3541 > Prediction.VP:GetPredictedHealth(L8_3540, L10_3542, _G.OrbwalkManagerMenu.FarmDelay / 1000) and Prediction.VP:GetPredictedHealth(L8_3540, L10_3542, _G.OrbwalkManagerMenu.FarmDelay / 1000) > A0_3532.LimitHealth then
                  return L8_3540
                end
              end
            end
          end
        end
      end
    else
      for L7_3539, L8_3540 in L4_3536(L5_3537) do
        L9_3541 = L8_3540.dead
        if not L9_3541 then
          L9_3541 = L8_3540.health
          if L9_3541 > 0 then
            L9_3541 = IsValidTarget
            L10_3542 = L8_3540
            L9_3541 = L9_3541(L10_3542)
            if L9_3541 then
              L9_3541, L10_3542 = nil, nil
              if OrbwalkManager:InRange(L8_3540) then
                L9_3541 = A0_3532:MyDamage(L8_3540)
                L10_3542 = A0_3532:WindUpTime() + GetDistance(myHero, L8_3540) / A0_3532.ProjectileSpeed + ExtraTime()
              end
              if L9_3541 ~= nil and L9_3541 > Prediction.VP:GetPredictedHealth(L8_3540, L10_3542, _G.OrbwalkManagerMenu.FarmDelay / 1000) and Prediction.VP:GetPredictedHealth(L8_3540, L10_3542, _G.OrbwalkManagerMenu.FarmDelay / 1000) > A0_3532.LimitHealth then
                return L8_3540
              end
            end
          end
        end
      end
    end
    return L4_3536
  end
  function __TwistedFate.GetAlmostKillableMinion(A0_3543, A1_3544)
    local L2_3545, L3_3546, L4_3547, L5_3548, L6_3549, L7_3550, L8_3551, L9_3552
    L2_3545 = 0
    L2_3545 = _ENV[L2_3545]
    if not L2_3545 then
      return
    end
    L2_3545 = L2_3545 * L2_3545
    L2_3545 = A1_3544 ~= nil and A1_3544 or 0
    for L6_3549, L7_3550 in L3_3546(L4_3547) do
      L8_3551 = IsValidTarget
      L9_3552 = L7_3550
      L8_3551 = L8_3551(L9_3552)
      if L8_3551 then
        L8_3551, L9_3552 = nil, nil
        if OrbwalkManager:InRange(L7_3550) then
          L8_3551 = A0_3543:MyDamage(L7_3550)
          L9_3552 = A0_3543:WindUpTime() + A0_3543:AnimationTime() + GetDistance(myHero, L7_3550) / A0_3543.ProjectileSpeed + ExtraTime()
          L9_3552 = L9_3552 * 2
        end
        if L8_3551 ~= nil and L8_3551 > Prediction.VP:GetPredictedHealth2(L7_3550, L9_3552) then
          return L7_3550
        end
      end
    end
    return L3_3546
  end
  function __TwistedFate.GetMeanwhileMinion(A0_3553, A1_3554)
    local L2_3555, L3_3556, L4_3557, L5_3558, L6_3559, L7_3560, L8_3561, L9_3562, L10_3563
    L2_3555 = 0
    L2_3555 = _ENV[L2_3555]
    if not L2_3555 then
      return
    end
    L2_3555 = L2_3555 * L2_3555
    L2_3555 = A1_3554 ~= nil and A1_3554 or 0
    for L6_3559, L7_3560 in L3_3556(L4_3557) do
      L8_3561 = IsValidTarget
      L9_3562 = L7_3560
      L8_3561 = L8_3561(L9_3562)
      if L8_3561 then
        L8_3561, L9_3562, L10_3563 = nil, nil, nil
        if OrbwalkManager:InRange(L7_3560) then
          L8_3561 = A0_3553:MyDamage(L7_3560)
          L10_3563 = A0_3553:WindUpTime() + A0_3553:AnimationTime() + GetDistance(myHero, L7_3560) / A0_3553.ProjectileSpeed + ExtraTime()
          L10_3563 = L10_3563 * 2
          L9_3562 = A0_3553:WindUpTime() + GetDistance(myHero, L7_3560) / A0_3553.ProjectileSpeed + ExtraTime()
        end
        if L8_3561 ~= nil and (Prediction.VP:GetPredictedHealth2(L7_3560, L10_3563) > 2 * L8_3561 or L7_3560.health == Prediction.VP:GetPredictedHealth(L7_3560, L9_3562, _G.OrbwalkManagerMenu.FarmDelay / 1000)) then
          return L7_3560
        end
      end
    end
    return L3_3556
  end
  function __TwistedFate.GetJungleMinion(A0_3564, A1_3565)
    local L2_3566, L3_3567, L4_3568, L5_3569, L6_3570, L7_3571
    L2_3566 = 0
    L2_3566 = _ENV[L2_3566]
    if not L2_3566 then
      return
    end
    L2_3566 = L2_3566 * L2_3566
    L2_3566 = A1_3565 ~= nil and A1_3565 or 0
    for L6_3570, L7_3571 in L3_3567(L4_3568) do
      if IsValidTarget(L7_3571) and OrbwalkManager:InRange(L7_3571) then
        return L7_3571
      end
    end
    return L3_3567
  end
  function __TwistedFate.MyDamage(A0_3572, A1_3573)
    if not _ENV[0] then
      return
    end
    if IsValidTarget(A1_3573) then
    else
    end
    if not A0_3572:IsNone(A0_3572.SelectedCard) then
      return A0_3572.W:Damage(A1_3573)
    end
    return (Prediction.VP:CalcDamageOfAttack(myHero, A1_3573, {
      name = "BasicAttack"
    }, 0) or 0) + (A0_3572.StackReady and A0_3572.E:Damage(A1_3573) or 0) + (0 + getDmg("SHEEN", A1_3573, myHero) + getDmg("LICHBANE", A1_3573, myHero))
  end
  function __TwistedFate.GetTime(A0_3574)
    if not _ENV[0] then
      return
    end
    return 1 * os.clock()
  end
  function __TwistedFate.Latency(A0_3575)
    if not _ENV[0] then
      return
    end
    return GetLatency() / 2000
  end
  function __TwistedFate.ExtraWindUp(A0_3576)
    local L1_3577, L2_3578, L3_3579, L4_3580, L5_3581, L6_3582, L7_3583, L8_3584, L9_3585, L10_3586, L11_3587, L12_3588, L13_3589, L14_3590, L15_3591, L16_3592, L17_3593, L18_3594, L19_3595, L20_3596, L21_3597, L22_3598, L23_3599, L24_3600, L25_3601, L26_3602, L27_3603, L28_3604, L29_3605, L30_3606, L31_3607, L32_3608, L33_3609, L34_3610, L35_3611, L36_3612, L37_3613, L38_3614, L39_3615, L40_3616, L41_3617, L42_3618, L43_3619, L44_3620, L45_3621, L46_3622, L47_3623, L48_3624, L49_3625, L50_3626, L51_3627, L52_3628, L53_3629, L54_3630, L55_3631, L56_3632, L57_3633, L58_3634, L59_3635, L60_3636, L61_3637, L62_3638, L63_3639, L64_3640, L65_3641, L66_3642, L67_3643, L68_3644, L69_3645, L70_3646, L71_3647, L72_3648, L73_3649, L74_3650, L75_3651, L76_3652, L77_3653, L78_3654, L79_3655, L80_3656, L81_3657, L82_3658, L83_3659, L84_3660, L85_3661, L86_3662, L87_3663, L88_3664, L89_3665, L90_3666, L91_3667, L92_3668, L93_3669, L94_3670, L95_3671, L96_3672, L97_3673, L98_3674, L99_3675, L100_3676, L101_3677, L102_3678, L103_3679, L104_3680, L105_3681, L106_3682, L107_3683, L108_3684, L109_3685, L110_3686, L111_3687, L112_3688, L113_3689, L114_3690, L115_3691, L116_3692, L117_3693, L118_3694, L119_3695, L120_3696, L121_3697, L122_3698, L123_3699, L124_3700, L125_3701, L126_3702, L127_3703, L128_3704, L129_3705, L130_3706, L131_3707, L132_3708, L133_3709, L134_3710, L135_3711, L136_3712, L137_3713, L138_3714, L139_3715, L140_3716, L141_3717, L142_3718, L143_3719, L144_3720, L145_3721, L146_3722, L147_3723, L148_3724, L149_3725, L150_3726, L151_3727, L152_3728, L153_3729, L154_3730, L155_3731, L156_3732, L157_3733, L158_3734, L159_3735, L160_3736, L161_3737, L162_3738, L163_3739, L164_3740, L165_3741, L166_3742, L167_3743, L168_3744, L169_3745, L170_3746, L171_3747, L172_3748, L173_3749, L174_3750, L175_3751, L176_3752, L177_3753, L178_3754, L179_3755, L180_3756, L181_3757, L182_3758, L183_3759, L184_3760, L185_3761, L186_3762, L187_3763, L188_3764, L189_3765, L190_3766, L191_3767, L192_3768, L193_3769, L194_3770, L195_3771, L196_3772, L197_3773, L198_3774, L199_3775, L200_3776, L201_3777, L202_3778, L203_3779, L204_3780, L205_3781, L206_3782, L207_3783, L208_3784, L209_3785, L210_3786, L211_3787, L212_3788, L213_3789, L214_3790, L215_3791, L216_3792, L217_3793, L218_3794, L219_3795, L220_3796, L221_3797, L222_3798, L223_3799, L224_3800, L225_3801, L226_3802, L227_3803, L228_3804, L229_3805, L230_3806, L231_3807, L232_3808, L233_3809, L234_3810, L235_3811, L236_3812, L237_3813, L238_3814, L239_3815, L240_3816, L241_3817, L242_3818, L243_3819, L244_3820, L245_3821, L246_3822, L247_3823, L248_3824, L249_3825, L250_3826, L251_3827, L252_3828, L253_3829, L254_3830
    L1_3577 = 0
    L1_3577 = _ENV[L1_3577]
    if not L1_3577 then
      return
    end
    L1_3577 = L1_3577 * L1_3577
    L1_3577 = _G
    L1_3577 = L1_3577.OrbwalkManagerMenu
    if L1_3577 ~= nil then
      L1_3577 = _G
      L1_3577 = L1_3577.OrbwalkManagerMenu
      L1_3577 = L1_3577.ExtraWindUp
      if L1_3577 ~= nil then
        L1_3577 = _G
        L1_3577 = L1_3577.OrbwalkManagerMenu
        L1_3577 = L1_3577.ExtraWindUp
        L1_3577 = L1_3577 / 1000
      end
    else
      L1_3577 = L1_3577 or 0
    end
    return L1_3577
  end
  function __TwistedFate.WindUpTime(A0_3831)
    local L1_3832
    L1_3832 = 0
    L1_3832 = _ENV[L1_3832]
    if not L1_3832 then
      return
    end
    L1_3832 = L1_3832 * L1_3832
    L1_3832 = myHero
    L1_3832 = L1_3832.attackSpeed
    L1_3832 = L1_3832 * A0_3831.BaseWindUpTime
    L1_3832 = 1 / L1_3832
    L1_3832 = L1_3832 + A0_3831:ExtraWindUp()
    return L1_3832
  end
  function __TwistedFate.AnimationTime(A0_3833)
    local L1_3834, L3_3835, L4_3836, L5_3837, L6_3838, L7_3839, L8_3840, L9_3841, L10_3842, L11_3843, L12_3844, L13_3845, L14_3846, L15_3847, L16_3848, L17_3849, L18_3850, L19_3851, L20_3852, L21_3853, L22_3854, L23_3855, L24_3856, L25_3857, L26_3858, L27_3859, L28_3860, L29_3861, L30_3862, L31_3863, L32_3864, L33_3865, L34_3866, L35_3867, L36_3868, L37_3869, L38_3870, L39_3871, L40_3872, L41_3873, L42_3874, L43_3875, L44_3876, L45_3877, L46_3878, L47_3879, L48_3880, L49_3881, L50_3882, L51_3883, L52_3884, L53_3885, L54_3886, L55_3887, L56_3888, L57_3889, L58_3890, L59_3891, L60_3892, L61_3893, L62_3894, L63_3895, L64_3896, L65_3897, L66_3898, L67_3899, L68_3900, L69_3901, L70_3902, L71_3903, L72_3904, L73_3905, L74_3906, L75_3907, L76_3908, L77_3909, L78_3910, L79_3911, L80_3912, L81_3913, L82_3914, L83_3915, L84_3916, L85_3917, L86_3918, L87_3919, L88_3920, L89_3921, L90_3922, L91_3923, L92_3924, L93_3925, L94_3926, L95_3927, L96_3928, L97_3929, L98_3930, L99_3931, L100_3932, L101_3933, L102_3934, L103_3935, L104_3936, L105_3937, L106_3938, L107_3939, L108_3940, L109_3941, L110_3942, L111_3943, L112_3944, L113_3945, L114_3946, L115_3947, L116_3948, L117_3949, L118_3950, L119_3951, L120_3952, L121_3953, L122_3954, L123_3955, L124_3956, L125_3957, L126_3958, L127_3959, L128_3960, L129_3961, L130_3962, L131_3963, L132_3964, L133_3965, L134_3966, L135_3967, L136_3968, L137_3969, L138_3970, L139_3971, L140_3972, L141_3973, L142_3974, L143_3975, L144_3976, L145_3977, L146_3978, L147_3979, L148_3980, L149_3981, L150_3982, L151_3983, L152_3984, L153_3985, L154_3986, L155_3987, L156_3988, L157_3989, L158_3990, L159_3991, L160_3992, L161_3993, L162_3994, L163_3995, L164_3996, L165_3997, L166_3998, L167_3999, L168_4000, L169_4001, L170_4002, L171_4003, L172_4004, L173_4005, L174_4006, L175_4007, L176_4008, L177_4009, L178_4010, L179_4011, L180_4012, L181_4013, L182_4014, L183_4015, L184_4016, L185_4017, L186_4018, L187_4019, L188_4020, L189_4021, L190_4022, L191_4023, L192_4024, L193_4025, L194_4026, L195_4027, L196_4028, L197_4029, L198_4030, L199_4031, L200_4032, L201_4033, L202_4034, L203_4035, L204_4036, L205_4037, L206_4038, L207_4039, L208_4040, L209_4041, L210_4042, L211_4043, L212_4044, L213_4045, L214_4046, L215_4047, L216_4048, L217_4049, L218_4050, L219_4051, L220_4052, L221_4053, L222_4054, L223_4055, L224_4056, L225_4057, L226_4058, L227_4059, L228_4060, L229_4061, L230_4062, L231_4063, L232_4064, L233_4065, L234_4066, L235_4067, L236_4068, L237_4069, L238_4070, L239_4071, L240_4072, L241_4073, L242_4074, L243_4075, L244_4076, L245_4077, L246_4078, L247_4079, L248_4080, L249_4081, L250_4082, L251_4083, L252_4084, L253_4085, L254_4086
    L1_3834 = 0
    L1_3834 = _ENV[L1_3834]
    if not L1_3834 then
      return
    end
    L1_3834 = L1_3834 * L1_3834
    L1_3834 = myHero
    L1_3834 = L1_3834.attackSpeed
    L3_3835 = A0_3833.BaseAnimationTime
    L1_3834 = L1_3834 * L3_3835
    L1_3834 = 1 / L1_3834
    return L1_3834
  end
  function __TwistedFate.CanAttack(A0_4087, A1_4088)
    local L2_4089
    L2_4089 = 0
    L2_4089 = _ENV[L2_4089]
    if not L2_4089 then
      return
    end
    L2_4089 = L2_4089 * L2_4089
    L2_4089 = A1_4088 ~= nil and A1_4088 or 0
    return A0_4087:GetTime() - A0_4087.AA.LastTime + A0_4087:Latency() >= 1 * A0_4087:AnimationTime() - 0.025 + L2_4089 and not IsEvading()
  end
  function __TwistedFate.CanMove(A0_4090, A1_4091)
    local L2_4092
    L2_4092 = 0
    L2_4092 = _ENV[L2_4092]
    if not L2_4092 then
      return
    end
    L2_4092 = L2_4092 * L2_4092
    L2_4092 = A1_4091 ~= nil and A1_4091 or 0
    return A0_4090:GetTime() - A0_4090.AA.LastTime + A0_4090:Latency() >= 1 * A0_4090:WindUpTime() + L2_4092 and not IsEvading()
  end
  function __TwistedFate.OnDraw(A0_4093)
    local L1_4094, L2_4095, L3_4096, L4_4097, L5_4098, L6_4099
    L1_4094 = 0
    L1_4094 = _ENV[L1_4094]
    if not L1_4094 then
      return
    end
    L1_4094 = L1_4094 * L1_4094
    L1_4094 = myHero
    L1_4094 = L1_4094.dead
    if not L1_4094 then
      L1_4094 = A0_4093.Menu
      if L1_4094 ~= nil then
        L1_4094 = A0_4093.MenuLoaded
      end
    elseif not L1_4094 then
      return
    end
    L1_4094 = A0_4093.Menu
    L1_4094 = L1_4094.Draw
    L1_4094 = L1_4094.Killable
    if L1_4094 then
      L1_4094 = A0_4093.R
      L1_4094 = L1_4094.IsReady
      L1_4094 = L1_4094(L2_4095)
      if L1_4094 then
        L1_4094 = myHero
        L1_4094 = L1_4094.mana
        if L1_4094 >= L2_4095 then
          L1_4094 = 0
          L6_4099 = L3_4096()
          for L5_4098, L6_4099 in L2_4095(L3_4096, L4_4097, L5_4098, L6_4099, L3_4096()) do
            if A0_4093.R:ValidTarget(L6_4099) and GetBestCombo(L6_4099, A0_4093) >= L6_4099.health then
              if OnScreen(WorldToScreen(D3DXVECTOR3(L6_4099.x, L6_4099.y, L6_4099.z)).x, WorldToScreen(D3DXVECTOR3(L6_4099.x, L6_4099.y, L6_4099.z)).y) then
                DrawText("R KILL", 25, WorldToScreen(D3DXVECTOR3(L6_4099.x, L6_4099.y, L6_4099.z)).x, WorldToScreen(D3DXVECTOR3(L6_4099.x, L6_4099.y, L6_4099.z)).y, L11_11.Red)
              end
              DrawText(L6_4099.charName:upper() .. " KILLABLE", 35, 100, 50 + 50 * L1_4094, L11_11.Red)
              L1_4094 = L1_4094 + 1
            end
          end
        end
      end
    end
  end
  class("__Syndra")
  function __Syndra.__init(A0_4100)
    local L1_4101
    if not L1_4101 then
      return
    end
    A0_4100.ScriptName = "Forbidden Syndra"
    A0_4100.Author = "Da Vinci"
    A0_4100.MenuLoaded = false
    A0_4100.Menu = nil
    A0_4100.TS = nil
    A0_4100.Spheres = L1_4101
    A0_4100.ComboQE = 0
    A0_4100.ComboWE = 0
    A0_4100.WObject = nil
    A0_4100.MouseClicked = false
    A0_4100.LastPacketReceived = 0
    A0_4100.EnemiesOnProcessSpell = L1_4101
    for _FORV_4_, _FORV_5_ in L1_4101(GetEnemyHeroes()) do
      A0_4100.EnemiesOnProcessSpell[_FORV_5_.networkID] = {
        CanMove = true,
        LastClock = 0,
        LastWindUpTime = 0.25
      }
    end
    L1_4101.Updated = false
    L1_4101.Header = nil
    A0_4100.Packets = L1_4101
  end
  function __Syndra.OnTick(A0_4102)
    local L1_4103, L2_4104, L3_4105, L4_4106, L5_4107, L6_4108
    if not L1_4103 then
      return
    end
    if not L1_4103 then
    elseif not L1_4103 then
      return
    end
    L1_4103.Width = L2_4104
    if L1_4103 then
      if L1_4103 ~= nil then
        L1_4103.Speed = L2_4104
      end
      if L1_4103 ~= nil then
        L1_4103.Delay = L2_4104
      end
    end
    L1_4103.range = L2_4104
    L1_4103.Speed = L2_4104
    L1_4103.Width = L2_4104
    L1_4103(L2_4104)
    L1_4103.Source = L2_4104
    L6_4108 = L2_4104()
    for L4_4106, L5_4107 in L1_4103(L2_4104, L3_4105, L4_4106, L5_4107, L6_4108, L2_4104()) do
      L6_4108 = A0_4102.EnemiesOnProcessSpell
      L6_4108 = L6_4108[L5_4107.networkID]
      L6_4108.CanMove = os.clock() + Latency() - A0_4102.EnemiesOnProcessSpell[L5_4107.networkID].LastClock >= A0_4102.EnemiesOnProcessSpell[L5_4107.networkID].LastWindUpTime
    end
    if L1_4103 then
      if L1_4103 > 1 then
        A0_4102.WObject = nil
      end
    end
    L1_4103(L2_4104)
    if L1_4103 then
      L1_4103(L2_4104)
    elseif L1_4103 then
      L1_4103(L2_4104)
    elseif L1_4103 then
      L1_4103(L2_4104)
    elseif L1_4103 then
      L1_4103(L2_4104)
    end
    if L1_4103 then
      L1_4103(L2_4104)
    end
    if L1_4103 then
      L6_4108 = L2_4104()
      for L4_4106, L5_4107 in L1_4103(L2_4104, L3_4105, L4_4106, L5_4107, L6_4108, L2_4104()) do
        L6_4108 = nil
        if IsValidTarget(L5_4107) and GetDistanceSqr(L5_4107, mousePos) < math.pow(500, 2) then
          if L6_4108 == nil then
            L6_4108 = L5_4107
          elseif GetPriority(L5_4107) < GetPriority(L6_4108) then
            L6_4108 = L5_4107
          end
        end
        if IsValidTarget(L6_4108) then
          A0_4102:CastE(L6_4108)
          A0_4102:CastQE(L6_4108)
          A0_4102:CastWE(L6_4108)
        end
      end
    end
  end
  function __Syndra.KillSteal(A0_4109)
    local L1_4110, L2_4111, L3_4112, L4_4113, L5_4114
    if not L1_4110 then
      return
    end
    L5_4114 = L2_4111()
    for L4_4113, L5_4114 in L1_4110(L2_4111, L3_4112, L4_4113, L5_4114, L2_4111()) do
      if IsValidTarget(L5_4114, A0_4109.TS.range) and L5_4114.health > 0 and PercentageHealth(L5_4114) <= 35 then
        if GetBestCombo(L5_4114, A0_4109) >= L5_4114.health then
          if A0_4109.Menu.KillSteal.Q and (GetBestCombo(L5_4114, A0_4109) or A0_4109.Q:Damage(L5_4114) > L5_4114.health) then
            A0_4109:CastQ(L5_4114)
          end
          if A0_4109.Menu.KillSteal.W and (GetBestCombo(L5_4114, A0_4109) or A0_4109.W:Damage(L5_4114) > L5_4114.health) then
            A0_4109:CastW(L5_4114)
          end
          if A0_4109.Menu.KillSteal.E and (GetBestCombo(L5_4114, A0_4109) or A0_4109.E:Damage(L5_4114) > L5_4114.health) then
            A0_4109:CastE(L5_4114)
          end
          if A0_4109.Menu.KillSteal.R and A0_4109.R:Damage(L5_4114) > L5_4114.health then
            A0_4109:CastR(L5_4114)
          end
        end
        if A0_4109.Menu.KillSteal.Ignite and A3_3:IsReady() and A3_3:Damage(L5_4114) > L5_4114.health then
          A3_3:Cast(L5_4114)
        end
      end
    end
  end
  function __Syndra.GetBestComboR(A0_4115, A1_4116)
    local L2_4117, L3_4118, L4_4119, L5_4120, L6_4121, L7_4122, L8_4123, L9_4124, L10_4125, L11_4126, L12_4127, L13_4128
    L2_4117 = 0
    L2_4117 = _ENV[L2_4117]
    if not L2_4117 then
      return
    end
    L2_4117 = L2_4117 * L2_4117
    L2_4117 = A0_4115.Menu
    L2_4117 = L2_4117.Combo
    L2_4117 = L2_4117.Cooldown
    L3_4118 = A0_4115.Q
    L4_4119 = L3_4118
    L3_4118 = L3_4118.GetSpellData
    L3_4118 = L3_4118(L4_4119)
    if L3_4118 ~= nil then
      L3_4118 = A0_4115.Q
      L4_4119 = L3_4118
      L3_4118 = L3_4118.GetSpellData
      L3_4118 = L3_4118(L4_4119)
      L3_4118 = L3_4118.currentCd
      if L3_4118 ~= nil then
        L3_4118 = A0_4115.Q
        L4_4119 = L3_4118
        L3_4118 = L3_4118.GetSpellData
        L3_4118 = L3_4118(L4_4119)
        L3_4118 = L3_4118.currentCd
      end
    else
      L3_4118 = L3_4118 or 10
    end
    L4_4119 = A0_4115.W
    L5_4120 = L4_4119
    L4_4119 = L4_4119.GetSpellData
    L4_4119 = L4_4119(L5_4120)
    if L4_4119 ~= nil then
      L4_4119 = A0_4115.W
      L5_4120 = L4_4119
      L4_4119 = L4_4119.GetSpellData
      L4_4119 = L4_4119(L5_4120)
      L4_4119 = L4_4119.currentCd
      if L4_4119 ~= nil then
        L4_4119 = A0_4115.W
        L5_4120 = L4_4119
        L4_4119 = L4_4119.GetSpellData
        L4_4119 = L4_4119(L5_4120)
        L4_4119 = L4_4119.currentCd
      end
    else
      L4_4119 = L4_4119 or 10
    end
    L5_4120 = A0_4115.E
    L6_4121 = L5_4120
    L5_4120 = L5_4120.GetSpellData
    L5_4120 = L5_4120(L6_4121)
    if L5_4120 ~= nil then
      L5_4120 = A0_4115.E
      L6_4121 = L5_4120
      L5_4120 = L5_4120.GetSpellData
      L5_4120 = L5_4120(L6_4121)
      L5_4120 = L5_4120.currentCd
      if L5_4120 ~= nil then
        L5_4120 = A0_4115.E
        L6_4121 = L5_4120
        L5_4120 = L5_4120.GetSpellData
        L5_4120 = L5_4120(L6_4121)
        L5_4120 = L5_4120.currentCd
      end
    else
      L5_4120 = L5_4120 or 15
    end
    L6_4121 = A0_4115.Q
    L7_4122 = L6_4121
    L6_4121 = L6_4121.IsReady
    L6_4121 = L6_4121(L7_4122)
    L6_4121 = L6_4121 or L2_4117 > L3_4118
    L7_4122 = A0_4115.W
    L8_4123 = L7_4122
    L7_4122 = L7_4122.IsReady
    L7_4122 = L7_4122(L8_4123)
    L7_4122 = L7_4122 or L2_4117 > L4_4119
    L8_4123 = A0_4115.E
    L9_4124 = L8_4123
    L8_4123 = L8_4123.IsReady
    L8_4123 = L8_4123(L9_4124)
    L8_4123 = L8_4123 or L2_4117 > L5_4120
    L9_4124 = {L10_4125}
    L10_4125 = false
    L10_4125 = {L11_4126}
    L11_4126 = false
    L11_4126 = {L12_4127}
    L12_4127 = false
    if L6_4121 then
      L12_4127 = {L13_4128, true}
      L13_4128 = false
      L9_4124 = L12_4127
    end
    if L7_4122 then
      L12_4127 = {L13_4128, true}
      L13_4128 = false
      L10_4125 = L12_4127
    end
    if L8_4123 then
      L12_4127 = {L13_4128, true}
      L13_4128 = false
      L11_4126 = L12_4127
    end
    L12_4127 = nil
    L13_4128 = {
      false,
      false,
      false,
      false
    }
    if L6_4121 or L7_4122 or L8_4123 then
      for _FORV_17_ = 1, #L9_4124 do
        for _FORV_21_ = 1, #L10_4125 do
          for _FORV_25_ = 1, #L11_4126 do
            if A0_4115:GetComboDamage(A1_4116, L9_4124[_FORV_17_], L10_4125[_FORV_21_], L11_4126[_FORV_25_], false) >= A1_4116.health and A0_4115:GetComboDamage(A1_4116, L9_4124[_FORV_17_], L10_4125[_FORV_21_], L11_4126[_FORV_25_], false) <= myHero.mana then
              if L12_4127 == nil then
                L12_4127, L13_4128 = A0_4115:GetComboDamage(A1_4116, L9_4124[_FORV_17_], L10_4125[_FORV_21_], L11_4126[_FORV_25_], false)
                L12_4127, L13_4128 = A0_4115:GetComboDamage(A1_4116, L9_4124[_FORV_17_], L10_4125[_FORV_21_], L11_4126[_FORV_25_], false)
              elseif L12_4127 > A0_4115:GetComboDamage(A1_4116, L9_4124[_FORV_17_], L10_4125[_FORV_21_], L11_4126[_FORV_25_], false) then
                L12_4127, L13_4128 = A0_4115:GetComboDamage(A1_4116, L9_4124[_FORV_17_], L10_4125[_FORV_21_], L11_4126[_FORV_25_], false)
                L12_4127, L13_4128 = A0_4115:GetComboDamage(A1_4116, L9_4124[_FORV_17_], L10_4125[_FORV_21_], L11_4126[_FORV_25_], false)
              end
            end
          end
        end
      end
    end
    if L12_4127 == nil then
      L12_4127 = 0
    end
    return L13_4128[1], L13_4128[2], L13_4128[3], L13_4128[4], L12_4127
  end
  function __Syndra.Combo(A0_4129)
    local L1_4130
    L1_4130 = 0
    L1_4130 = _ENV[L1_4130]
    if not L1_4130 then
      return
    end
    L1_4130 = L1_4130 * L1_4130
    L1_4130 = A0_4129.TS
    L1_4130 = L1_4130.target
    if IsValidTarget(L1_4130) then
      if A0_4129.Menu.Combo.Zhonyas > 0 and PercentageHealth() <= A0_4129.Menu.Combo.Zhonyas and L6_6.Zhonyas:IsReady() then
        L6_6.Zhonyas:Cast()
      end
      if A0_4129.Menu.Combo.QE then
        A0_4129:CastQE(L1_4130)
      end
      if A0_4129.Menu.Combo.WE then
        A0_4129:CastWE(L1_4130)
      end
      if A0_4129.Menu.Combo.E then
        A0_4129:CastE(L1_4130)
      end
      if A0_4129.Menu.Combo.W then
        A0_4129:CastW(L1_4130)
      end
      if A0_4129.Menu.Combo.Q then
        A0_4129:CastQ(L1_4130)
      end
      if A0_4129.Menu.Combo.R > 1 and A0_4129.R:IsReady() then
        if A0_4129.Menu.Combo.R == 2 then
          if GetBestCombo(L1_4130, A0_4129) >= L1_4130.health and GetBestCombo(L1_4130, A0_4129) then
            if false then
              A0_4129:CastR(L1_4130)
            end
          end
        elseif A0_4129.Menu.Combo.R == 3 then
          if GetBestCombo(L1_4130, A0_4129) >= L1_4130.health and A0_4129.R:Damage(L1_4130) >= L1_4130.health and (A0_4129:GetBestComboR(L1_4130) < L1_4130.health or PercentageHealth() <= PercentageHealth(L1_4130) and PercentageHealth() <= 40) then
            A0_4129:CastR(L1_4130)
          end
        elseif A0_4129.Menu.Combo.R == 4 then
          A0_4129:CastR(L1_4130)
        end
      end
    end
  end
  function __Syndra.Harass(A0_4131)
    local L1_4132
    L1_4132 = 0
    L1_4132 = _ENV[L1_4132]
    if not L1_4132 then
      return
    end
    L1_4132 = L1_4132 * L1_4132
    L1_4132 = PercentageMana
    L1_4132 = L1_4132()
    if L1_4132 >= A0_4131.Menu.Harass.Mana then
      L1_4132 = A0_4131.TS
      L1_4132 = L1_4132.target
      if A0_4131.Menu.Harass.Turret and UnderTurret(L1_4132) and UnderTurret(myHero) then
        return
      end
      if IsValidTarget(L1_4132) then
        if A0_4131.Menu.Harass.E then
          A0_4131:CastE(L1_4132)
        end
        if A0_4131.Menu.Harass.QE then
          A0_4131:CastQE(L1_4132)
        end
        if A0_4131.Menu.Harass.WE then
          A0_4131:CastWE(L1_4132)
        end
        if A0_4131.Menu.Harass.W then
          A0_4131:CastW(L1_4132)
        end
        if A0_4131.Menu.Harass.Q then
          A0_4131:CastQ(L1_4132)
        end
        if A0_4131.Menu.Harass.Q2 and A0_4131.EnemiesOnProcessSpell[L1_4132.networkID] and not A0_4131.EnemiesOnProcessSpell[L1_4132.networkID].CanMove then
          A0_4131:CastQ(L1_4132)
        end
      end
    end
  end
  function __Syndra.Clear(A0_4133)
    local L1_4134, L2_4135
    L1_4134 = 0
    L1_4134 = _ENV[L1_4134]
    if not L1_4134 then
      return
    end
    L1_4134 = L1_4134 * L1_4134
    L1_4134 = OrbwalkManager
    L2_4135 = L1_4134
    L1_4134 = L1_4134.GetClearMode
    L1_4134 = L1_4134(L2_4135)
    if L1_4134 ~= nil then
      L2_4135 = L1_4134.find
      L2_4135 = L2_4135(L1_4134, "lane")
      if L2_4135 then
        L2_4135 = PercentageMana
        L2_4135 = L2_4135()
        if L2_4135 >= A0_4133.Menu.LaneClear.Mana then
          L2_4135 = A0_4133.Q
          L2_4135 = L2_4135.LaneClear
          L2_4135(L2_4135, {
            NumberOfHits = A0_4133.Menu.LaneClear.Q
          })
          L2_4135 = A0_4133.W
          L2_4135 = L2_4135.LaneClear
          L2_4135 = L2_4135(L2_4135, {
            NumberOfHits = A0_4133.Menu.LaneClear.W,
            UseCast = false
          })
          if A0_4133.W:ValidTarget(L2_4135) then
            A0_4133:CastW(L2_4135)
          end
          A0_4133.E:LaneClear({
            NumberOfHits = A0_4133.Menu.LaneClear.E
          })
          if A0_4133.Menu.LastHit.Q > 1 then
            A0_4133.Q:LastHit()
          end
        end
      else
        L2_4135 = A0_4133.W
        L2_4135 = L2_4135.JungleClear
        L2_4135 = L2_4135(L2_4135, {UseCast = false})
        if IsValidTarget(L2_4135) and A0_4133.Menu.JungleClear.W then
          A0_4133:CastW(L2_4135)
        end
        if A0_4133.Menu.JungleClear.E then
          A0_4133.E:JungleClear()
        end
        if A0_4133.Menu.JungleClear.Q then
          A0_4133.Q:JungleClear()
        end
      end
    end
  end
  function __Syndra.LastHit(A0_4136)
    local L1_4137
    L1_4137 = 0
    L1_4137 = _ENV[L1_4137]
    if not L1_4137 then
      return
    end
    L1_4137 = L1_4137 * L1_4137
    L1_4137 = PercentageMana
    L1_4137 = L1_4137()
    if L1_4137 >= A0_4136.Menu.LastHit.Mana then
      L1_4137 = A0_4136.Q
      L1_4137 = L1_4137.LastHit
      L1_4137(L1_4137, {
        Mode = A0_4136.Menu.LastHit.Q
      })
      L1_4137 = A0_4136.W
      L1_4137 = L1_4137.LastHit
      L1_4137 = L1_4137(L1_4137, {
        Mode = A0_4136.Menu.LastHit.W,
        UseCast = false
      })
      if A0_4136.W:ValidTarget(L1_4137) then
        A0_4136:CastW(L1_4137)
      end
    end
  end
  function __Syndra.IsW2(A0_4138)
    return A0_4138.W:GetSpellData().name:lower() == "syndrawcast"
  end
  function __Syndra.CastQ(A0_4139, A1_4140)
    if A0_4139.Q:IsReady() and A0_4139.Q:ValidTarget(A1_4140) then
      A0_4139.Q:Cast(A1_4140, {
        Width = A0_4139.Q.Width2
      })
    end
  end
  function __Syndra.CastW(A0_4141, A1_4142)
    local L2_4143, L3_4144, L4_4145, L5_4146, L6_4147, L7_4148, L8_4149, L9_4150
    L2_4143 = 0
    L2_4143 = _ENV[L2_4143]
    if not L2_4143 then
      return
    end
    L2_4143 = L2_4143 * L2_4143
    L3_4144 = A0_4141
    L2_4143 = A0_4141.IsW2
    L2_4143 = L2_4143(L3_4144)
    if L2_4143 then
      L2_4143 = A0_4141.Menu
      L2_4143 = L2_4143.W
      if L2_4143 ~= nil then
        L2_4143 = A0_4141.Menu
        L2_4143 = L2_4143.W
      else
        L2_4143 = L2_4143 or 1
      end
      if L2_4143 == 1 then
        L3_4144 = A0_4141.W
        L4_4145 = myHero
        L3_4144.Source = L4_4145
        L3_4144 = A0_4141.W
        L3_4144.Speed = 1450
        L3_4144 = A0_4141.W
        L3_4144.Delay = 0
      elseif L2_4143 == 2 then
        L3_4144 = A0_4141.W
        L4_4145 = A0_4141.WObject
        L3_4144.Source = L4_4145
        L3_4144 = A0_4141.W
        L3_4144.Speed = 1100
        L3_4144 = A0_4141.W
        L3_4144.Delay = 0.07
        L3_4144 = A0_4141.W
        L3_4144 = L3_4144.Source
        if not L3_4144 then
          return
        end
      end
      L3_4144 = A0_4141.W
      L4_4145 = L3_4144
      L3_4144 = L3_4144.Cast
      L6_4147.Width = L7_4148
      L3_4144(L4_4145, L5_4146, L6_4147)
    else
      L2_4143 = A0_4141.W
      L3_4144 = L2_4143
      L2_4143 = L2_4143.ValidTarget
      L4_4145 = A1_4142
      L2_4143 = L2_4143(L3_4144, L4_4145)
      if L2_4143 then
        L2_4143 = A0_4141.W
        L3_4144 = L2_4143
        L2_4143 = L2_4143.GetPrediction
        L4_4145 = A1_4142
        L3_4144 = L2_4143(L3_4144, L4_4145)
        if L2_4143 and L3_4144 then
          L4_4145 = nil
          if L4_4145 == nil then
            L5_4146(L6_4147)
            for L8_4149, L9_4150 in L5_4146(L6_4147) do
              if GetDistanceSqr(myHero, L9_4150) < math.pow(A0_4141.W.Range, 2) and L9_4150.networkID ~= A1_4142.networkID then
                L4_4145 = L9_4150
              end
            end
          end
          if L4_4145 == nil then
            L5_4146(L6_4147)
            for L8_4149, L9_4150 in L5_4146(L6_4147) do
              if GetDistanceSqr(myHero, L9_4150) < math.pow(A0_4141.W.Range, 2) and L9_4150.networkID ~= A1_4142.networkID then
                L4_4145 = L9_4150
              end
            end
          end
          if L4_4145 == nil then
            L5_4146(L6_4147)
            for L8_4149, L9_4150 in L5_4146(L6_4147) do
              if GetDistanceSqr(myHero, L9_4150) < math.pow(A0_4141.W.Range, 2) and L9_4150.networkID ~= A1_4142.networkID then
                L4_4145 = L9_4150
              end
            end
          end
          if L4_4145 == nil then
            for L8_4149, L9_4150 in L5_4146(L6_4147) do
              if not (GetDistanceSqr(myHero, L9_4150) < math.pow(A0_4141.W.Range, 2)) or L9_4150.networkID == A1_4142.networkID or L9_4150.LastAnimation:lower():find("run") and GetDistanceSqr(myHero, A1_4142) > GetDistanceSqr(myHero, L9_4150) or os.clock() + Latency() - A0_4141.E.LastCastTime <= A0_4141.E.Delay + 1.5 * GetDistance(myHero, L9_4150) / A0_4141.E.Speed and GetDistanceSqr(myHero, L9_4150) < math.pow((A0_4141.E.Range + A0_4141.E.ExtraWidth) * 1.2, 2) then
              else
                L4_4145 = L9_4150
              end
            end
          end
          if L4_4145 ~= nil then
            if L5_4146 > 0.12 then
              L5_4146(L6_4147, L7_4148)
            end
          end
        end
      end
    end
  end
  function __Syndra.CastE(A0_4151, A1_4152)
    local L2_4153, L3_4154, L4_4155, L5_4156, L6_4157
    if not L2_4153 then
      return
    end
    if L2_4153 then
      if L2_4153 then
        for L5_4156, L6_4157 in L2_4153(L3_4154) do
          A0_4151:CastE2(A1_4152, L6_4157)
        end
      end
    end
  end
  function __Syndra.CastE2(A0_4158, A1_4159, A2_4160)
    local L3_4161, L4_4162, L5_4163, L6_4164, L7_4165, L8_4166, L9_4167, L10_4168
    L3_4161 = 0
    L3_4161 = _ENV[L3_4161]
    if not L3_4161 then
      return
    end
    L3_4161 = L3_4161 * L3_4161
    L3_4161 = A0_4158.E
    L4_4162 = L3_4161
    L3_4161 = L3_4161.IsReady
    L3_4161 = L3_4161(L4_4162)
    if L3_4161 then
      L3_4161 = IsValidTarget
      L4_4162 = A1_4159
      L3_4161 = L3_4161(L4_4162)
      if L3_4161 and A2_4160 ~= nil then
        L3_4161 = A2_4160.LastAnimation
        if L3_4161 ~= nil then
          L3_4161 = A2_4160.LastAnimation
          if L3_4161 ~= nil then
            L3_4161 = A2_4160.LastAnimation
            L4_4162 = L3_4161
            L3_4161 = L3_4161.lower
            L3_4161 = L3_4161(L4_4162)
            L4_4162 = L3_4161
            L3_4161 = L3_4161.find
            L5_4163 = "idle"
            L3_4161 = L3_4161(L4_4162, L5_4163)
          end
        elseif L3_4161 then
          L3_4161 = GetDistanceSqr
          L4_4162 = myHero
          L5_4163 = A2_4160
          L3_4161 = L3_4161(L4_4162, L5_4163)
          L4_4162 = math
          L4_4162 = L4_4162.pow
          L5_4163 = A0_4158.E
          L5_4163 = L5_4163.Range
          L6_4164 = A0_4158.E
          L6_4164 = L6_4164.ExtraWidth
          L5_4163 = L5_4163 + L6_4164
          L6_4164 = 2
          L4_4162 = L4_4162(L5_4163, L6_4164)
          if L3_4161 < L4_4162 then
            L3_4161 = Vector
            L4_4162 = myHero
            L3_4161 = L3_4161(L4_4162)
            L4_4162 = Vector
            L5_4163 = Vector
            L6_4164 = A2_4160
            L5_4163 = L5_4163(L6_4164)
            L6_4164 = Vector
            L7_4165 = myHero
            L6_4164 = L6_4164(L7_4165)
            L5_4163 = L5_4163 - L6_4164
            L4_4162 = L4_4162(L5_4163)
            L5_4163 = L4_4162
            L4_4162 = L4_4162.normalized
            L4_4162 = L4_4162(L5_4163)
            L5_4163 = math
            L5_4163 = L5_4163.min
            L6_4164 = GetDistance
            L7_4165 = myHero
            L8_4166 = A2_4160
            L6_4164 = L6_4164(L7_4165, L8_4166)
            L7_4165 = A0_4158.E
            L7_4165 = L7_4165.Range
            L7_4165 = L7_4165 / 2
            L5_4163 = L5_4163(L6_4164, L7_4165)
            L4_4162 = L4_4162 * L5_4163
            L3_4161 = L3_4161 + L4_4162
            L4_4162 = Vector
            L5_4163 = myHero
            L4_4162 = L4_4162(L5_4163)
            L5_4163 = Vector
            L6_4164 = Vector
            L7_4165 = A2_4160
            L6_4164 = L6_4164(L7_4165)
            L7_4165 = Vector
            L8_4166 = myHero
            L7_4165 = L7_4165(L8_4166)
            L6_4164 = L6_4164 - L7_4165
            L5_4163 = L5_4163(L6_4164)
            L6_4164 = L5_4163
            L5_4163 = L5_4163.normalized
            L5_4163 = L5_4163(L6_4164)
            L6_4164 = GetDistance
            L7_4165 = myHero
            L8_4166 = A2_4160
            L6_4164 = L6_4164(L7_4165, L8_4166)
            if L6_4164 > 200 then
              L6_4164 = A0_4158.QE
              L6_4164 = L6_4164.Range
            else
              L6_4164 = L6_4164 or 1000
            end
            L5_4163 = L5_4163 * L6_4164
            L4_4162 = L4_4162 + L5_4163
            L5_4163 = VectorPointProjectionOnLineSegment
            L6_4164 = L3_4161
            L7_4165 = L4_4162
            L8_4166 = A1_4159
            L7_4165 = L5_4163(L6_4164, L7_4165, L8_4166)
            if L7_4165 then
              L8_4166 = math
              L8_4166 = L8_4166.pow
              L9_4167 = L5_4163.x
              L10_4168 = A1_4159.x
              L9_4167 = L9_4167 - L10_4168
              L10_4168 = 2
              L8_4166 = L8_4166(L9_4167, L10_4168)
              L9_4167 = math
              L9_4167 = L9_4167.pow
              L10_4168 = L5_4163.y
              L10_4168 = L10_4168 - A1_4159.z
              L9_4167 = L9_4167(L10_4168, 2)
              L8_4166 = L8_4166 + L9_4167
              L9_4167 = math
              L9_4167 = L9_4167.pow
              L10_4168 = A0_4158.QE
              L10_4168 = L10_4168.Width
              L10_4168 = L10_4168 + A1_4159.boundingRadius
              L10_4168 = L10_4168 * 1.6
              L9_4167 = L9_4167(L10_4168, 2)
              if L8_4166 < L9_4167 then
                L8_4166 = GetDistanceSqr
                L9_4167 = L3_4161
                L10_4168 = L4_4162
                L8_4166 = L8_4166(L9_4167, L10_4168)
                L9_4167 = GetDistanceSqr
                L10_4168 = L3_4161
                L9_4167 = L9_4167(L10_4168, A1_4159)
                if L8_4166 > L9_4167 then
                  L8_4166 = GetDistanceSqr
                  L9_4167 = myHero
                  L10_4168 = A1_4159
                  L8_4166 = L8_4166(L9_4167, L10_4168)
                  L9_4167 = GetDistanceSqr
                  L10_4168 = myHero
                  L9_4167 = L9_4167(L10_4168, A2_4160)
                  if L8_4166 >= L9_4167 then
                    L8_4166 = A0_4158.QE
                    L8_4166 = L8_4166.Speed1
                  elseif not L8_4166 then
                    L8_4166 = math
                    L8_4166 = L8_4166.huge
                  end
                  L9_4167 = A0_4158.E
                  L9_4167 = L9_4167.Delay
                  L10_4168 = math
                  L10_4168 = L10_4168.min
                  L10_4168 = L10_4168(GetDistance(myHero, A2_4160), GetDistance(myHero, A1_4159))
                  L10_4168 = L10_4168 / A0_4158.E.Speed
                  L9_4167 = L9_4167 + L10_4168
                  L10_4168 = A0_4158.QE
                  L10_4168.Source = A2_4160
                  L10_4168 = A0_4158.QE
                  L10_4168 = L10_4168.GetPrediction
                  L10_4168 = L10_4168(L10_4168, A1_4159, {
                    Speed = L8_4166,
                    Delay = L9_4167,
                    Source = A2_4160
                  })
                  if L10_4168 and L10_4168(L10_4168, A1_4159, {
                    Speed = L8_4166,
                    Delay = L9_4167,
                    Source = A2_4160
                  }) and VectorPointProjectionOnLineSegment(L3_4161, L4_4162, L10_4168) and math.pow(VectorPointProjectionOnLineSegment(L3_4161, L4_4162, L10_4168).x - L10_4168.x, 2) + math.pow(VectorPointProjectionOnLineSegment(L3_4161, L4_4162, L10_4168).y - L10_4168.z, 2) < math.pow((A0_4158.QE.Width + A1_4159.boundingRadius) * 3 / 4, 2) and GetDistanceSqr(L3_4161, L4_4162) > GetDistanceSqr(L3_4161, L10_4168) then
                    A0_4158.E:CastToVector(A2_4160)
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  function __Syndra.CastQE(A0_4169, A1_4170)
    local L2_4171, L3_4172, L4_4173, L5_4174, L6_4175
    L2_4171 = 0
    L2_4171 = _ENV[L2_4171]
    if not L2_4171 then
      return
    end
    L2_4171 = L2_4171 * L2_4171
    L2_4171 = A0_4169.E
    L3_4172 = L2_4171
    L2_4171 = L2_4171.IsReady
    L2_4171 = L2_4171(L3_4172)
    if L2_4171 then
      L2_4171 = A0_4169.QE
      L3_4172 = L2_4171
      L2_4171 = L2_4171.ValidTarget
      L4_4173 = A1_4170
      L2_4171 = L2_4171(L3_4172, L4_4173)
      if L2_4171 then
        L2_4171 = A0_4169.Q
        L3_4172 = L2_4171
        L2_4171 = L2_4171.IsReady
        L2_4171 = L2_4171(L3_4172)
        if L2_4171 then
          L2_4171 = myHero
          L2_4171 = L2_4171.mana
          L3_4172 = A0_4169.Q
          L4_4173 = L3_4172
          L3_4172 = L3_4172.Mana
          L3_4172 = L3_4172(L4_4173)
          L4_4173 = A0_4169.E
          L5_4174 = L4_4173
          L4_4173 = L4_4173.Mana
          L4_4173 = L4_4173(L5_4174)
          L3_4172 = L3_4172 + L4_4173
          if L2_4171 >= L3_4172 then
            L2_4171 = A0_4169.Q
            L3_4172 = L2_4171
            L2_4171 = L2_4171.ValidTarget
            L4_4173 = A1_4170
            L2_4171 = L2_4171(L3_4172, L4_4173)
            if not L2_4171 then
              L2_4171 = A0_4169.QE
              L3_4172 = L2_4171
              L2_4171 = L2_4171.GetPrediction
              L4_4173 = A1_4170
              L5_4174 = {}
              L6_4175 = A0_4169.Q
              L6_4175 = L6_4175.Delay
              L6_4175 = L6_4175 + A0_4169.E.Delay
              L5_4174.Delay = L6_4175
              L5_4174.Accuracy = 35
              L6_4175 = math
              L6_4175 = L6_4175.huge
              L5_4174.Speed = L6_4175
              L6_4175 = myHero
              L5_4174.Source = L6_4175
              L3_4172 = L2_4171(L3_4172, L4_4173, L5_4174)
              if L2_4171 ~= nil then
                L4_4173 = A0_4169.QE
                L5_4174 = L4_4173
                L4_4173 = L4_4173.GetPrediction
                L6_4175 = A1_4170
                L5_4174 = L4_4173(L5_4174, L6_4175, {
                  Speed = A0_4169.QE.Speed1,
                  Source = Vector(myHero) + Vector(Vector(L2_4171) - Vector(myHero)):normalized() * (A0_4169.E.Range + A0_4169.E.ExtraWidth),
                  Delay = A0_4169.Q.Delay2 + A0_4169.E.Delay + GetDistance(myHero, A0_4169.QE.Source) / A0_4169.E.Speed
                })
                if L4_4173 ~= nil and L5_4174 then
                  L6_4175 = Vector
                  L6_4175 = L6_4175(myHero)
                  L6_4175 = L6_4175 + Vector(Vector(L4_4173) - Vector(myHero)):normalized() * (A0_4169.E.Range + A0_4169.E.ExtraWidth)
                  A0_4169.Q:CastToVector(L6_4175)
                  A0_4169.ComboQE = os.clock() - Latency()
                end
              end
            else
              L2_4171 = A0_4169.Q
              L3_4172 = L2_4171
              L2_4171 = L2_4171.GetPrediction
              L4_4173 = A1_4170
              L5_4174 = {}
              L5_4174.Accuracy = 33
              L3_4172 = L2_4171(L3_4172, L4_4173, L5_4174)
              if L2_4171 and L3_4172 then
                L4_4173 = A0_4169.Q
                L5_4174 = L4_4173
                L4_4173 = L4_4173.CastToVector
                L6_4175 = L2_4171
                L4_4173(L5_4174, L6_4175)
                L4_4173 = os
                L4_4173 = L4_4173.clock
                L4_4173 = L4_4173()
                L5_4174 = Latency
                L5_4174 = L5_4174()
                L4_4173 = L4_4173 - L5_4174
                A0_4169.ComboQE = L4_4173
              end
            end
          end
        else
          L2_4171 = A0_4169.Q
          L3_4172 = L2_4171
          L2_4171 = L2_4171.IsReady
          L2_4171 = L2_4171(L3_4172)
          if not L2_4171 then
            L2_4171 = os
            L2_4171 = L2_4171.clock
            L2_4171 = L2_4171()
            L3_4172 = Latency
            L3_4172 = L3_4172()
            L2_4171 = L2_4171 + L3_4172
            L3_4172 = A0_4169.ComboQE
            L2_4171 = L2_4171 - L3_4172
            L3_4172 = A0_4169.Q
            L3_4172 = L3_4172.Delay
            L3_4172 = L3_4172 * 1.5
            if L2_4171 <= L3_4172 then
              L2_4171 = A0_4169.Q
              L2_4171 = L2_4171.Delay2
              L3_4172 = os
              L3_4172 = L3_4172.clock
              L3_4172 = L3_4172()
              L4_4173 = Latency
              L4_4173 = L4_4173()
              L3_4172 = L3_4172 + L4_4173
              L4_4173 = A0_4169.Q
              L4_4173 = L4_4173.LastCastTime
              L3_4172 = L3_4172 - L4_4173
              L2_4171 = L2_4171 - L3_4172
              if L2_4171 >= 0 then
                L3_4172 = GetDistance
                L4_4173 = A0_4169.Q
                L4_4173 = L4_4173.EndPos
                L5_4174 = myHero
                L3_4172 = L3_4172(L4_4173, L5_4174)
                L4_4173 = A0_4169.E
                L4_4173 = L4_4173.Speed
                L3_4172 = L3_4172 / L4_4173
                L4_4173 = A0_4169.E
                L4_4173 = L4_4173.Delay2
                L3_4172 = L3_4172 + L4_4173
                if L2_4171 <= L3_4172 then
                  L4_4173 = A0_4169
                  L3_4172 = A0_4169.CastE2
                  L5_4174 = A1_4170
                  L6_4175 = A0_4169.Q
                  L6_4175 = L6_4175.EndPos
                  L3_4172(L4_4173, L5_4174, L6_4175)
                  L3_4172 = A0_4169.Menu
                  L3_4172 = L3_4172.General
                  L3_4172 = L3_4172.Developer
                  if L3_4172 then
                    L3_4172 = print
                    L4_4173 = "CastQE"
                    L3_4172(L4_4173)
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  function __Syndra.CastWE(A0_4176, A1_4177)
    local L2_4178, L3_4179, L4_4180, L5_4181, L6_4182, L7_4183, L8_4184, L9_4185
    L2_4178 = 0
    L2_4178 = _ENV[L2_4178]
    if not L2_4178 then
      return
    end
    L2_4178 = L2_4178 * L2_4178
    L2_4178 = A0_4176.E
    L2_4178 = L2_4178.IsReady
    L2_4178 = L2_4178(L3_4179)
    if L2_4178 then
      L2_4178 = A0_4176.Spheres
      L2_4178 = #L2_4178
      if L2_4178 > 0 then
        L2_4178 = A0_4176.QE
        L2_4178 = L2_4178.ValidTarget
        L2_4178 = L2_4178(L3_4179, L4_4180)
        if L2_4178 then
          L2_4178 = A0_4176.W
          L2_4178 = L2_4178.IsReady
          L2_4178 = L2_4178(L3_4179)
          if L2_4178 then
            L2_4178 = A0_4176.IsW2
            L2_4178 = L2_4178(L3_4179)
            if not L2_4178 then
              L2_4178 = myHero
              L2_4178 = L2_4178.mana
              if L2_4178 >= L3_4179 then
                L2_4178 = nil
                if L2_4178 == nil then
                  for L6_4182, L7_4183 in L3_4179(L4_4180) do
                    L8_4184 = GetDistanceSqr
                    L9_4185 = myHero
                    L8_4184 = L8_4184(L9_4185, L7_4183)
                    L9_4185 = math
                    L9_4185 = L9_4185.pow
                    L9_4185 = L9_4185(A0_4176.W.Range, 2)
                    if L8_4184 < L9_4185 then
                      L8_4184 = L7_4183.networkID
                      L9_4185 = A1_4177.networkID
                      if L8_4184 ~= L9_4185 then
                        L8_4184 = L7_4183.LastAnimation
                        L9_4185 = L8_4184
                        L8_4184 = L8_4184.lower
                        L8_4184 = L8_4184(L9_4185)
                        L9_4185 = L8_4184
                        L8_4184 = L8_4184.find
                        L8_4184 = L8_4184(L9_4185, "idle")
                        if L8_4184 then
                          L8_4184 = Vector
                          L9_4185 = myHero
                          L8_4184 = L8_4184(L9_4185)
                          L9_4185 = Vector
                          L9_4185 = L9_4185(Vector(L7_4183) - Vector(myHero))
                          L9_4185 = L9_4185.normalized
                          L9_4185 = L9_4185(L9_4185)
                          L9_4185 = L9_4185 * (GetDistance(myHero, L7_4183) > 200 and A0_4176.QE.Range or 1000)
                          L8_4184 = L8_4184 + L9_4185
                          L9_4185 = VectorPointProjectionOnLineSegment
                          L9_4185 = L9_4185(L7_4183, L8_4184, A1_4177)
                          if not L9_4185(L7_4183, L8_4184, A1_4177) or GetDistanceSqr(L9_4185, A1_4177) > math.pow(A0_4176.QE.Width + A1_4177.boundingRadius, 2) then
                            L2_4178 = L7_4183
                          end
                        end
                      end
                    end
                  end
                end
                if L2_4178 ~= nil then
                  if L3_4179 > 0.12 then
                    L3_4179(L4_4180, L5_4181)
                  end
                end
              end
            end
          else
            L2_4178 = A0_4176.W
            L2_4178 = L2_4178.IsReady
            L2_4178 = L2_4178(L3_4179)
            if L2_4178 then
              L2_4178 = A0_4176.IsW2
              L2_4178 = L2_4178(L3_4179)
              if L2_4178 then
                L2_4178 = A0_4176.W
                L2_4178 = L2_4178.ValidTarget
                L2_4178 = L2_4178(L3_4179, L4_4180)
                if not L2_4178 then
                  L2_4178 = A0_4176.QE
                  L2_4178 = L2_4178.GetPrediction
                  L6_4182 = A0_4176.W
                  L6_4182 = L6_4182.Delay
                  L7_4183 = A0_4176.E
                  L7_4183 = L7_4183.Delay
                  L6_4182 = L6_4182 + L7_4183
                  L5_4181.Delay = L6_4182
                  L6_4182 = A0_4176.W
                  L6_4182 = L6_4182.Speed
                  L5_4181.Speed = L6_4182
                  L6_4182 = myHero
                  L5_4181.Source = L6_4182
                  L2_4178 = L2_4178(L3_4179, L4_4180, L5_4181)
                  if L2_4178 ~= nil then
                    L6_4182 = myHero
                    L6_4182 = Vector
                    L7_4183 = Vector
                    L8_4184 = L2_4178
                    L7_4183 = L7_4183(L8_4184)
                    L8_4184 = Vector
                    L9_4185 = myHero
                    L8_4184 = L8_4184(L9_4185)
                    L7_4183 = L7_4183 - L8_4184
                    L6_4182 = L6_4182(L7_4183)
                    L7_4183 = L6_4182
                    L6_4182 = L6_4182.normalized
                    L6_4182 = L6_4182(L7_4183)
                    L7_4183 = A0_4176.E
                    L7_4183 = L7_4183.Range
                    L8_4184 = A0_4176.E
                    L8_4184 = L8_4184.ExtraWidth
                    L7_4183 = L7_4183 + L8_4184
                    L6_4182 = L6_4182 * L7_4183
                    L4_4180.Source = L5_4181
                    L6_4182 = A0_4176.W
                    L6_4182 = L6_4182.Delay
                    L6_4182 = GetDistance
                    L7_4183 = myHero
                    L8_4184 = A1_4177
                    L6_4182 = L6_4182(L7_4183, L8_4184)
                    L7_4183 = A0_4176.W
                    L7_4183 = L7_4183.Speed
                    L6_4182 = L6_4182 / L7_4183
                    L6_4182 = GetDistance
                    L7_4183 = myHero
                    L8_4184 = A0_4176.QE
                    L8_4184 = L8_4184.Source
                    L6_4182 = L6_4182(L7_4183, L8_4184)
                    L7_4183 = A0_4176.E
                    L7_4183 = L7_4183.Speed
                    L6_4182 = L6_4182 / L7_4183
                    L4_4180.Delay = L5_4181
                    L6_4182 = A1_4177
                    if L4_4180 and L5_4181 then
                      L6_4182 = Vector
                      L7_4183 = myHero
                      L6_4182 = L6_4182(L7_4183)
                      L7_4183 = Vector
                      L8_4184 = Vector
                      L9_4185 = L4_4180
                      L8_4184 = L8_4184(L9_4185)
                      L9_4185 = Vector
                      L9_4185 = L9_4185(myHero)
                      L8_4184 = L8_4184 - L9_4185
                      L7_4183 = L7_4183(L8_4184)
                      L8_4184 = L7_4183
                      L7_4183 = L7_4183.normalized
                      L7_4183 = L7_4183(L8_4184)
                      L8_4184 = A0_4176.E
                      L8_4184 = L8_4184.Range
                      L9_4185 = A0_4176.E
                      L9_4185 = L9_4185.ExtraWidth
                      L8_4184 = L8_4184 + L9_4185
                      L7_4183 = L7_4183 * L8_4184
                      L6_4182 = L6_4182 + L7_4183
                      L7_4183 = A0_4176.W
                      L8_4184 = L7_4183
                      L7_4183 = L7_4183.CastToVector
                      L9_4185 = L6_4182
                      L7_4183(L8_4184, L9_4185)
                      L7_4183 = os
                      L7_4183 = L7_4183.clock
                      L7_4183 = L7_4183()
                      L8_4184 = Latency
                      L8_4184 = L8_4184()
                      L7_4183 = L7_4183 - L8_4184
                      A0_4176.ComboWE = L7_4183
                    end
                  end
                else
                  L2_4178 = A0_4176.W
                  L2_4178 = L2_4178.GetPrediction
                  L5_4181.Accuracy = 33
                  L2_4178 = L2_4178(L3_4179, L4_4180, L5_4181)
                  if L2_4178 and L3_4179 then
                    L6_4182 = L2_4178
                    L4_4180(L5_4181, L6_4182)
                    A0_4176.ComboWE = L4_4180
                  end
                end
              end
            else
              L2_4178 = A0_4176.W
              L2_4178 = L2_4178.IsReady
              L2_4178 = L2_4178(L3_4179)
              if not L2_4178 then
                L2_4178 = A0_4176.WObject
                if L2_4178 ~= nil then
                  L2_4178 = A0_4176.WObject
                  L2_4178 = L2_4178.name
                  if L2_4178 then
                    L2_4178 = A0_4176.WObject
                    L2_4178 = L2_4178.name
                    L2_4178 = L2_4178.lower
                    L2_4178 = L2_4178(L3_4179)
                    if L2_4178 == "seed" then
                      L2_4178 = os
                      L2_4178 = L2_4178.clock
                      L2_4178 = L2_4178()
                      L2_4178 = L2_4178 + L3_4179
                      L2_4178 = L2_4178 - L3_4179
                      L6_4182 = A0_4176.W
                      L6_4182 = L6_4182.EndPos
                      if L2_4178 <= L3_4179 then
                        L2_4178 = A0_4176.W
                        L2_4178 = L2_4178.Delay2
                        L2_4178 = L2_4178 + L3_4179
                        L2_4178 = L2_4178 - L3_4179
                        if L2_4178 >= 0 then
                          if L2_4178 <= L3_4179 then
                            L6_4182 = A0_4176.W
                            L6_4182 = L6_4182.EndPos
                            L3_4179(L4_4180, L5_4181, L6_4182)
                            if L3_4179 then
                              L3_4179(L4_4180)
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  function __Syndra.CastR(A0_4186, A1_4187)
    if A0_4186.R:IsReady() and A0_4186.R:ValidTarget(A1_4187) and A0_4186.Menu.General.DontR and not A0_4186.Menu.General.DontR[A1_4187.charName] then
      A0_4186.R:Cast(A1_4187)
    end
  end
  function __Syndra.Damage(A0_4188, A1_4189, A2_4190)
    local L3_4191
    L3_4191 = 0
    L3_4191 = _ENV[L3_4191]
    if not L3_4191 then
      return
    end
    L3_4191 = L3_4191 * L3_4191
    L3_4191 = 0
    if IsValidTarget(A2_4190) then
      if A1_4189 == "Q" then
        L3_4191 = 45 * (A0_4188.Q:GetSpellData() ~= nil and A0_4188.Q:GetSpellData().level ~= nil and A0_4188.Q:GetSpellData().level or 0) + 5 + 0.6 * myHero.ap
        if A2_4190.type == myHero.type and (A0_4188.Q:GetSpellData() ~= nil and A0_4188.Q:GetSpellData().level ~= nil and A0_4188.Q:GetSpellData().level or 0) == 5 then
          L3_4191 = L3_4191 * 1.15
        end
      elseif A1_4189 == "W" then
        L3_4191 = 40 * (A0_4188.W:GetSpellData() ~= nil and A0_4188.W:GetSpellData().level ~= nil and A0_4188.W:GetSpellData().level or 0) + 40 + 0.7 * myHero.ap
      elseif A1_4189 == "E" then
        L3_4191 = 45 * (A0_4188.E:GetSpellData() ~= nil and A0_4188.E:GetSpellData().level ~= nil and A0_4188.E:GetSpellData().level or 0) + 25 + 0.4 * myHero.ap
      elseif A1_4189 == "R" then
        L3_4191 = 45 * (A0_4188.R:GetSpellData() ~= nil and A0_4188.R:GetSpellData().level ~= nil and A0_4188.R:GetSpellData().level or 0) + 45 + 0.2 * myHero.ap
      end
    end
    if L3_4191 > 0 then
      L3_4191 = myHero:CalcMagicDamage(A2_4190, L3_4191)
    end
    return L3_4191
  end
  function __Syndra.GetComboDamage(A0_4192, A1_4193, A2_4194, A3_4195, A4_4196, A5_4197)
    local L6_4198, L7_4199
    L6_4198 = 0
    L6_4198 = _ENV[L6_4198]
    if not L6_4198 then
      return
    end
    L6_4198 = L6_4198 * L6_4198
    L6_4198 = 0
    L7_4199 = 0
    if IsValidTarget(A1_4193) then
      if A2_4194 then
        L6_4198 = L6_4198 + A0_4192.Q:Damage(A1_4193)
        L7_4199 = L7_4199 + A0_4192.Q:Mana()
      end
      if A3_4195 then
        L6_4198 = L6_4198 + A0_4192.W:Damage(A1_4193)
        L7_4199 = L7_4199 + A0_4192.W:Mana()
      end
      if A4_4196 then
        L6_4198 = L6_4198 + A0_4192.E:Damage(A1_4193)
        L7_4199 = L7_4199 + A0_4192.E:Mana()
      end
      if A5_4197 then
        L6_4198 = L6_4198 + A0_4192.R:Damage(A1_4193)
        L7_4199 = L7_4199 + A0_4192.R:Mana()
      end
      if A3_3:IsReady() then
        L6_4198 = L6_4198 + A3_3:Damage(A1_4193)
      end
      L6_4198 = L6_4198 + getDmg("AD", A1_4193, myHero) * 1
    end
    L6_4198 = L6_4198 * A0_4192:GetOverkill()
    return L6_4198, L7_4199
  end
  function __Syndra.GetOverkill(A0_4200)
    local L1_4201, L2_4202, L3_4203, L4_4204, L5_4205, L6_4206, L7_4207, L8_4208, L9_4209, L10_4210, L11_4211, L12_4212, L13_4213, L14_4214, L15_4215, L16_4216, L17_4217, L18_4218, L19_4219, L20_4220, L21_4221, L22_4222, L23_4223, L24_4224, L25_4225, L26_4226, L27_4227, L28_4228, L29_4229, L30_4230, L31_4231, L32_4232, L33_4233, L34_4234, L35_4235, L36_4236, L37_4237, L38_4238, L39_4239, L40_4240, L41_4241, L42_4242, L43_4243, L44_4244, L45_4245, L46_4246, L47_4247, L48_4248, L49_4249, L50_4250, L51_4251, L52_4252, L53_4253, L54_4254, L55_4255, L56_4256, L57_4257, L58_4258, L59_4259, L60_4260, L61_4261, L62_4262, L63_4263, L64_4264, L65_4265, L66_4266, L67_4267, L68_4268, L69_4269, L70_4270, L71_4271, L72_4272, L73_4273, L74_4274, L75_4275, L76_4276, L77_4277, L78_4278, L79_4279, L80_4280, L81_4281, L82_4282, L83_4283, L84_4284, L85_4285, L86_4286, L87_4287, L88_4288, L89_4289, L90_4290, L91_4291, L92_4292, L93_4293, L94_4294, L95_4295, L96_4296, L97_4297, L98_4298, L99_4299, L100_4300, L101_4301, L102_4302, L103_4303, L104_4304, L105_4305, L106_4306, L107_4307, L108_4308, L109_4309, L110_4310, L111_4311, L112_4312, L113_4313, L114_4314, L115_4315, L116_4316, L117_4317, L118_4318, L119_4319, L120_4320, L121_4321, L122_4322, L123_4323, L124_4324, L125_4325, L126_4326, L127_4327, L128_4328, L129_4329, L130_4330, L131_4331, L132_4332, L133_4333, L134_4334, L135_4335, L136_4336, L137_4337, L138_4338, L139_4339, L140_4340, L141_4341, L142_4342, L143_4343, L144_4344, L145_4345, L146_4346, L147_4347, L148_4348, L149_4349, L150_4350, L151_4351, L152_4352, L153_4353, L154_4354, L155_4355, L156_4356, L157_4357, L158_4358, L159_4359, L160_4360, L161_4361, L162_4362, L163_4363, L164_4364, L165_4365, L166_4366, L167_4367, L168_4368, L169_4369, L170_4370, L171_4371, L172_4372, L173_4373, L174_4374, L175_4375, L176_4376, L177_4377, L178_4378, L179_4379, L180_4380, L181_4381, L182_4382, L183_4383, L184_4384, L185_4385, L186_4386, L187_4387, L188_4388, L189_4389, L190_4390, L191_4391, L192_4392, L193_4393, L194_4394, L195_4395, L196_4396, L197_4397, L198_4398, L199_4399, L200_4400, L201_4401, L202_4402, L203_4403, L204_4404, L205_4405, L206_4406, L207_4407, L208_4408, L209_4409, L210_4410, L211_4411, L212_4412, L213_4413, L214_4414, L215_4415, L216_4416, L217_4417, L218_4418, L219_4419, L220_4420, L221_4421, L222_4422, L223_4423, L224_4424, L225_4425, L226_4426, L227_4427, L228_4428, L229_4429, L230_4430, L231_4431, L232_4432, L233_4433, L234_4434, L235_4435, L236_4436, L237_4437, L238_4438, L239_4439, L240_4440, L241_4441, L242_4442, L243_4443, L244_4444, L245_4445, L246_4446, L247_4447, L248_4448, L249_4449, L250_4450, L251_4451, L252_4452, L253_4453, L254_4454
    L1_4201 = A0_4200.Menu
    L1_4201 = L1_4201.General
    L1_4201 = L1_4201.Overkill
    L1_4201 = 100 + L1_4201
    L1_4201 = L1_4201 / 100
    return L1_4201
  end
  function __Syndra.OnProcessSpell(A0_4455, A1_4456, A2_4457)
    if not _ENV[0] then
      return
    end
    if A1_4456 and A2_4457 and A2_4457.name and A1_4456.team and A1_4456.networkID and A2_4457.windUpTime then
      if A1_4456.team ~= myHero.team and A1_4456.type == myHero.type then
        A0_4455.EnemiesOnProcessSpell[A1_4456.networkID] = {
          CanMove = false,
          LastClock = os.clock() - Latency(),
          LastWindUpTime = A2_4457.windUpTime
        }
      end
      if A1_4456.isMe then
        if A2_4457.name:lower():find("syndrawcast") then
          A0_4455.W.EndPos = Vector(A2_4457.endPos)
          A0_4455.W.LastCastTime = os.clock() - Latency()
        elseif A2_4457.name:lower() == "syndraw" then
          A0_4455.W.EndPos = Vector(A2_4457.endPos)
          A0_4455.W.LastSentTime = os.clock()
        elseif A2_4457.name:lower():find("syndraq") then
          A0_4455.Q.EndPos = Vector(A2_4457.endPos)
          A0_4455.Q.LastCastTime = os.clock() - Latency()
        elseif A2_4457.name:lower():find("syndrae") then
          A0_4455.E.LastCastTime = os.clock() - Latency()
        end
      end
    end
  end
  function __Syndra.OnCastSpell(A0_4458, A1_4459, A2_4460, A3_4461, A4_4462)
    if not _ENV[0] then
      return
    end
    if A1_4459 == A0_4458.Q.Slot and A0_4458.Q:IsReady() then
      A0_4458.Q.EndPos = Vector(A3_4461)
    elseif A1_4459 == A0_4458.W.Slot and A0_4458.W:IsReady() then
      A0_4458.W.EndPos = Vector(A3_4461)
      if not A0_4458:IsW2() then
        A0_4458.W.LastSentTime = os.clock()
      end
    end
  end
  function __Syndra.OnWndMsg(A0_4463, A1_4464, A2_4465)
    local L3_4466, L4_4467, L5_4468, L6_4469, L7_4470, L8_4471, L9_4472, L10_4473, L11_4474, L12_4475, L13_4476, L14_4477, L15_4478, L16_4479, L17_4480, L18_4481, L19_4482, L20_4483, L21_4484, L22_4485, L23_4486, L24_4487, L25_4488, L26_4489, L27_4490, L28_4491, L29_4492, L30_4493, L31_4494, L32_4495, L33_4496, L34_4497, L35_4498, L36_4499, L37_4500, L38_4501, L39_4502, L40_4503, L41_4504, L42_4505, L43_4506, L44_4507, L45_4508, L46_4509, L47_4510, L48_4511, L49_4512, L50_4513, L51_4514, L52_4515, L53_4516, L54_4517, L55_4518, L56_4519, L57_4520, L58_4521, L59_4522, L60_4523, L61_4524, L62_4525, L63_4526, L64_4527, L65_4528, L66_4529, L67_4530, L68_4531, L69_4532, L70_4533, L71_4534, L72_4535, L73_4536, L74_4537, L75_4538, L76_4539, L77_4540, L78_4541, L79_4542, L80_4543, L81_4544, L82_4545, L83_4546, L84_4547, L85_4548, L86_4549, L87_4550, L88_4551, L89_4552, L90_4553, L91_4554, L92_4555, L93_4556, L94_4557, L95_4558, L96_4559, L97_4560, L98_4561, L99_4562, L100_4563, L101_4564, L102_4565, L103_4566, L104_4567, L105_4568, L106_4569, L107_4570, L108_4571, L109_4572, L110_4573, L111_4574, L112_4575, L113_4576, L114_4577, L115_4578, L116_4579, L117_4580, L118_4581, L119_4582, L120_4583, L121_4584, L122_4585, L123_4586, L124_4587, L125_4588, L126_4589, L127_4590, L128_4591, L129_4592, L130_4593, L131_4594, L132_4595, L133_4596, L134_4597, L135_4598, L136_4599, L137_4600, L138_4601, L139_4602, L140_4603, L141_4604, L142_4605, L143_4606, L144_4607, L145_4608, L146_4609, L147_4610, L148_4611, L149_4612, L150_4613, L151_4614, L152_4615, L153_4616, L154_4617, L155_4618, L156_4619, L157_4620, L158_4621, L159_4622, L160_4623, L161_4624, L162_4625, L163_4626, L164_4627, L165_4628, L166_4629, L167_4630, L168_4631, L169_4632, L170_4633, L171_4634, L172_4635, L173_4636, L174_4637, L175_4638, L176_4639, L177_4640, L178_4641, L179_4642, L180_4643, L181_4644, L182_4645, L183_4646, L184_4647, L185_4648, L186_4649, L187_4650, L188_4651, L189_4652, L190_4653, L191_4654, L192_4655, L193_4656, L194_4657, L195_4658, L196_4659, L197_4660, L198_4661, L199_4662, L200_4663, L201_4664, L202_4665, L203_4666, L204_4667, L205_4668, L206_4669, L207_4670, L208_4671, L209_4672, L210_4673, L211_4674, L212_4675, L213_4676, L214_4677, L215_4678, L216_4679, L217_4680, L218_4681, L219_4682, L220_4683, L221_4684, L222_4685, L223_4686, L224_4687, L225_4688, L226_4689, L227_4690, L228_4691, L229_4692, L230_4693, L231_4694, L232_4695, L233_4696, L234_4697, L235_4698, L236_4699, L237_4700, L238_4701, L239_4702, L240_4703, L241_4704, L242_4705, L243_4706, L244_4707, L245_4708, L246_4709, L247_4710, L248_4711, L249_4712, L250_4713, L251_4714, L252_4715, L253_4716, L254_4717
    L3_4466 = 0
    L3_4466 = _ENV[L3_4466]
    if not L3_4466 then
      return
    end
    L3_4466 = L3_4466 * L3_4466
    L3_4466 = WM_LBUTTONDOWN
    if A1_4464 == L3_4466 then
      A0_4463.MouseClicked = true
    else
      L3_4466 = WM_LBUTTONUP
      if A1_4464 == L3_4466 then
        A0_4463.MouseClicked = false
      end
    end
  end
  function __Syndra.OnCreateObj(A0_4718, A1_4719)
    if not _ENV[0] then
      return
    end
    if A0_4718.Menu == nil or not A0_4718.MenuLoaded then
      return
    end
    if A1_4719 and A1_4719.name and A1_4719.name:lower() == "seed" and A1_4719.team == myHero.team then
      A1_4719.LastAnimation = "Idle1"
      table.insert(A0_4718.Spheres, A1_4719)
    end
  end
  function __Syndra.OnDeleteObj(A0_4720, A1_4721)
    if not _ENV[0] then
      return
    end
    if A0_4720.Menu == nil or not A0_4720.MenuLoaded then
      return
    end
    if not A1_4721 or not A1_4721.name or string.sub(A1_4721.name:lower(), 0, myHero.charName:len()) ~= myHero.charName:lower() or string.sub(A1_4721.name:lower(), -tostring("idle.troy"):len()) ~= "idle.troy" or A1_4721.name:lower():find("_q_") then
    end
  end
  function __Syndra.OnDraw(A0_4722)
    local L1_4723, L2_4724, L3_4725, L4_4726, L5_4727, L6_4728
    if not L1_4723 then
      return
    end
    if not L1_4723 then
    elseif not L1_4723 then
      return
    end
    if L1_4723 then
      if L1_4723 then
        for L4_4726, L5_4727 in L1_4723(L2_4724) do
          L6_4728 = L5_4727.LastAnimation
          if L6_4728 then
            L6_4728 = L5_4727.LastAnimation
            L6_4728 = L6_4728.lower
            L6_4728 = L6_4728(L6_4728)
            L6_4728 = L6_4728.find
            L6_4728 = L6_4728(L6_4728, "idle")
            if L6_4728 then
              L6_4728 = GetDistanceSqr
              L6_4728 = L6_4728(myHero, L5_4727)
              if L6_4728 < math.pow(A0_4722.E.Range + A0_4722.E.ExtraWidth, 2) then
                L6_4728 = Vector
                L6_4728 = L6_4728(L5_4727)
                DrawLine(WorldToScreen(D3DXVECTOR3(L6_4728.x, L6_4728.y, L6_4728.z)).x, WorldToScreen(D3DXVECTOR3(L6_4728.x, L6_4728.y, L6_4728.z)).y, WorldToScreen(D3DXVECTOR3((Vector(myHero) + Vector(Vector(L5_4727) - Vector(myHero)):normalized() * A0_4722.QE.Range).x, (Vector(myHero) + Vector(Vector(L5_4727) - Vector(myHero)):normalized() * A0_4722.QE.Range).y, (Vector(myHero) + Vector(Vector(L5_4727) - Vector(myHero)):normalized() * A0_4722.QE.Range).z)).x, WorldToScreen(D3DXVECTOR3((Vector(myHero) + Vector(Vector(L5_4727) - Vector(myHero)):normalized() * A0_4722.QE.Range).x, (Vector(myHero) + Vector(Vector(L5_4727) - Vector(myHero)):normalized() * A0_4722.QE.Range).y, (Vector(myHero) + Vector(Vector(L5_4727) - Vector(myHero)):normalized() * A0_4722.QE.Range).z)).y, A0_4722.QE.Width, ARGB(80, 255, 255, 255))
              end
            end
          end
        end
      end
    end
    if L1_4723 then
      if L1_4723 then
        if L1_4723 >= L2_4724 then
          L6_4728 = L3_4725()
          for L5_4727, L6_4728 in L2_4724(L3_4725, L4_4726, L5_4727, L6_4728, L3_4725()) do
            if ValidTarget(L6_4728) and A0_4722.R:Damage(L6_4728) >= L6_4728.health then
              if OnScreen(WorldToScreen(D3DXVECTOR3(L6_4728.x, L6_4728.y, L6_4728.z)).x, WorldToScreen(D3DXVECTOR3(L6_4728.x, L6_4728.y, L6_4728.z)).y) then
                DrawText("R KILL", 25, WorldToScreen(D3DXVECTOR3(L6_4728.x, L6_4728.y, L6_4728.z)).x, WorldToScreen(D3DXVECTOR3(L6_4728.x, L6_4728.y, L6_4728.z)).y, L11_11.Red)
              end
              DrawText(L6_4728.charName:upper() .. " KILLABLE", 35, 100, 50 + 50 * L1_4723, L11_11.Red)
            end
          end
        end
      end
    end
  end
  function __Syndra.OnAnimation(A0_4729, A1_4730, A2_4731)
    local L3_4732, L4_4733, L5_4734, L6_4735
    if not L3_4732 then
      return
    end
    if L3_4732 ~= nil then
    elseif not L3_4732 then
      return
    end
    if A1_4730 and A2_4731 then
      if L3_4732 then
        if L3_4732 == "seed" then
          for L6_4735, _FORV_7_ in L3_4732(L4_4733) do
            if _FORV_7_.networkID == A1_4730.networkID then
              if A2_4731:lower():find("death") then
                table.remove(A0_4729.Spheres, L6_4735)
                break
              end
              _FORV_7_.LastAnimation = A2_4731
            end
          end
        end
      end
    end
  end
  function __Syndra.OnRecvPacket(A0_4736, A1_4737)
    if not _ENV[0] then
      return
    end
    if A0_4736.Menu == nil or not A0_4736.MenuLoaded then
      return
    end
    if not A0_4736:IsW2() then
      return
    end
    A1_4737.pos = 2
    if not A0_4736.Packets.Updated and os.clock() - A0_4736.W.LastSentTime <= 0.05 and objManager:GetObjectByNetworkId(A1_4737:DecodeF()) and objManager:GetObjectByNetworkId(A1_4737:DecodeF()).name:lower() == "seed" then
      A0_4736.Packets.Updated = true
      A0_4736.Packets.Header = A1_4737.header
      if A0_4736.Menu.General.Developer then
        print("Header: " .. A1_4737.header)
      end
    end
    A1_4737.pos = 2
    if A0_4736.Packets.Updated and A1_4737.header == A0_4736.Packets.Header and objManager:GetObjectByNetworkId(A1_4737:DecodeF()) then
      A0_4736.WObject = objManager:GetObjectByNetworkId(A1_4737:DecodeF())
      A0_4736.LastPacketReceived = os.clock()
    end
  end
  class("__Kassadin")
  function __Kassadin.__init(A0_4738)
    local L1_4739, L2_4740, L3_4741, L4_4742, L5_4743, L6_4744, L7_4745, L8_4746, L9_4747, L10_4748, L11_4749, L12_4750, L13_4751, L14_4752, L15_4753, L16_4754, L17_4755, L18_4756, L19_4757, L20_4758, L21_4759, L22_4760, L23_4761, L24_4762, L25_4763, L26_4764, L27_4765, L28_4766, L29_4767, L30_4768, L31_4769, L32_4770, L33_4771, L34_4772, L35_4773, L36_4774, L37_4775, L38_4776, L39_4777, L40_4778, L41_4779, L42_4780, L43_4781, L44_4782, L45_4783, L46_4784, L47_4785, L48_4786, L49_4787, L50_4788, L51_4789, L52_4790, L53_4791, L54_4792, L55_4793, L56_4794, L57_4795, L58_4796, L59_4797, L60_4798, L61_4799, L62_4800, L63_4801, L64_4802, L65_4803, L66_4804, L67_4805, L68_4806, L69_4807, L70_4808, L71_4809, L72_4810, L73_4811, L74_4812, L75_4813, L76_4814, L77_4815, L78_4816, L79_4817, L80_4818, L81_4819, L82_4820, L83_4821, L84_4822, L85_4823, L86_4824, L87_4825, L88_4826, L89_4827, L90_4828, L91_4829, L92_4830, L93_4831, L94_4832, L95_4833, L96_4834, L97_4835, L98_4836, L99_4837, L100_4838, L101_4839, L102_4840, L103_4841, L104_4842, L105_4843, L106_4844, L107_4845, L108_4846, L109_4847, L110_4848, L111_4849, L112_4850, L113_4851, L114_4852, L115_4853, L116_4854, L117_4855, L118_4856, L119_4857, L120_4858, L121_4859, L122_4860, L123_4861, L124_4862, L125_4863, L126_4864, L127_4865, L128_4866, L129_4867, L130_4868, L131_4869, L132_4870, L133_4871, L134_4872, L135_4873, L136_4874, L137_4875, L138_4876, L139_4877, L140_4878, L141_4879, L142_4880, L143_4881, L144_4882, L145_4883, L146_4884, L147_4885, L148_4886, L149_4887, L150_4888, L151_4889, L152_4890, L153_4891, L154_4892, L155_4893, L156_4894, L157_4895, L158_4896, L159_4897, L160_4898, L161_4899, L162_4900, L163_4901, L164_4902, L165_4903, L166_4904, L167_4905, L168_4906, L169_4907, L170_4908, L171_4909, L172_4910, L173_4911, L174_4912, L175_4913, L176_4914, L177_4915, L178_4916, L179_4917, L180_4918, L181_4919, L182_4920, L183_4921, L184_4922, L185_4923, L186_4924, L187_4925, L188_4926, L189_4927, L190_4928, L191_4929, L192_4930, L193_4931, L194_4932, L195_4933, L196_4934, L197_4935, L198_4936, L199_4937, L200_4938, L201_4939, L202_4940, L203_4941, L204_4942, L205_4943, L206_4944, L207_4945, L208_4946, L209_4947, L210_4948, L211_4949, L212_4950, L213_4951, L214_4952, L215_4953, L216_4954, L217_4955, L218_4956, L219_4957, L220_4958, L221_4959, L222_4960, L223_4961, L224_4962, L225_4963, L226_4964, L227_4965, L228_4966, L229_4967, L230_4968, L231_4969, L232_4970, L233_4971, L234_4972, L235_4973, L236_4974, L237_4975, L238_4976, L239_4977, L240_4978, L241_4979, L242_4980, L243_4981, L244_4982, L245_4983, L246_4984, L247_4985, L248_4986, L249_4987, L250_4988, L251_4989, L252_4990, L253_4991, L254_4992
    A0_4738.ScriptName = "Forbidden Kassadin"
    A0_4738.Author = "Da Vinci"
    A0_4738.MenuLoaded = false
    A0_4738.Menu = nil
    A0_4738.TS = nil
  end
  function __Kassadin.OnTick(A0_4993)
    if not _ENV[0] then
      return
    end
    if myHero.dead or A0_4993.Menu == nil or not A0_4993.MenuLoaded then
      return
    end
    A0_4993.TS:update()
    A0_4993:KillSteal()
    if OrbwalkManager:IsCombo() then
      A0_4993:Combo()
    elseif OrbwalkManager:IsHarass() then
      A0_4993:Harass()
    elseif OrbwalkManager:IsClear() then
      A0_4993:Clear()
    elseif OrbwalkManager:IsLastHit() then
      A0_4993:LastHit()
    end
    if A0_4993.Menu.Keys.HarassToggle then
      A0_4993:Harass()
    end
  end
  function __Kassadin.KillSteal(A0_4994)
    local L1_4995, L2_4996, L3_4997, L4_4998, L5_4999
    if not L1_4995 then
      return
    end
    L5_4999 = L2_4996()
    for L4_4998, L5_4999 in L1_4995(L2_4996, L3_4997, L4_4998, L5_4999, L2_4996()) do
      if ValidTarget(L5_4999, A0_4994.TS.range) and L5_4999.health > 0 and PercentageHealth(L5_4999) <= 35 then
        if GetBestCombo(L5_4999, A0_4994) >= L5_4999.health then
          if A0_4994.Menu.KillSteal.useQ and A0_4994.Q:Damage(L5_4999) >= L5_4999.health and not L5_4999.dead then
            A0_4994.Q:Cast(L5_4999)
          end
          if A0_4994.Menu.KillSteal.useW and A0_4994.W:Damage(L5_4999) >= L5_4999.health and not L5_4999.dead then
            A0_4994.W:Cast(L5_4999)
          end
          if A0_4994.Menu.KillSteal.useE and A0_4994.E:Damage(L5_4999) >= L5_4999.health and not L5_4999.dead then
            A0_4994.E:Cast(L5_4999)
          end
          if A0_4994.Menu.KillSteal.useR and A0_4994.R:Damage(L5_4999) >= L5_4999.health and not L5_4999.dead then
            A0_4994.R:Cast(L5_4999)
          end
        end
        if A0_4994.Menu.KillSteal.useIgnite and A3_3:IsReady() and A3_3:Damage(L5_4999) >= L5_4999.health and not L5_4999.dead then
          A3_3:Cast(L5_4999)
        end
      end
    end
  end
  function __Kassadin.Combo(A0_5000)
    local L1_5001
    L1_5001 = 0
    L1_5001 = _ENV[L1_5001]
    if not L1_5001 then
      return
    end
    L1_5001 = L1_5001 * L1_5001
    L1_5001 = A0_5000.TS
    L1_5001 = L1_5001.target
    if OrbwalkManager.GotReset and OrbwalkManager:InRange(L1_5001) then
      return
    end
    if ValidTarget(L1_5001) then
      if A0_5000.Menu.Combo.useQ then
        A0_5000.Q:Cast(L1_5001)
      end
      if A0_5000.Menu.Combo.useW then
        A0_5000.W:Cast(L1_5001)
      end
      if A0_5000.Menu.Combo.useE then
        A0_5000.E:Cast(L1_5001)
      end
      if A0_5000.Menu.Combo.useR and GetBestCombo(L1_5001, A0_5000) >= L1_5001.health then
        A0_5000.R:Cast(L1_5001)
      end
    end
  end
  function __Kassadin.Harass(A0_5002)
    local L1_5003
    L1_5003 = 0
    L1_5003 = _ENV[L1_5003]
    if not L1_5003 then
      return
    end
    L1_5003 = L1_5003 * L1_5003
    L1_5003 = A0_5002.TS
    L1_5003 = L1_5003.target
    if ValidTarget(L1_5003) then
      if A0_5002.Menu.Harass.useQ then
        A0_5002.Q:Cast(L1_5003)
      end
      if A0_5002.Menu.Harass.useE then
        A0_5002.E:Cast(L1_5003)
      end
      if A0_5002.Menu.Harass.useW then
        A0_5002.W:Cast(L1_5003)
      end
    end
  end
  function __Kassadin.Clear(A0_5004)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_5004.Menu.LaneClear.Mana then
      if A0_5004.Menu.LaneClear.useQ then
        A0_5004.Q:LaneClear()
      end
      if A0_5004.Menu.LaneClear.useW then
        A0_5004.W:LaneClear()
      end
      if A0_5004.Menu.LaneClear.useE then
        A0_5004.E:LaneClear()
      end
    end
    if A0_5004.Menu.JungleClear.useE then
      A0_5004.E:JungleClear()
    end
    if A0_5004.Menu.JungleClear.useQ then
      A0_5004.Q:JungleClear()
    end
    if A0_5004.Menu.JungleClear.useW then
      A0_5004.W:JungleClear()
    end
  end
  function __Kassadin.LastHit(A0_5005)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_5005.Menu.LastHit.Mana and A0_5005.Menu.LastHit.useQ then
      A0_5005.Q:LastHit()
    end
  end
  function __Kassadin.GetComboDamage(A0_5006, A1_5007, A2_5008, A3_5009, A4_5010, A5_5011)
    local L6_5012, L7_5013
    L6_5012 = 0
    L6_5012 = _ENV[L6_5012]
    if not L6_5012 then
      return
    end
    L6_5012 = L6_5012 * L6_5012
    L6_5012 = 0
    L7_5013 = 0
    if IsValidTarget(A1_5007) then
      if A2_5008 then
        L6_5012 = L6_5012 + A0_5006.Q:Damage(A1_5007)
        L7_5013 = L7_5013 + A0_5006.Q:Mana()
      end
      if A3_5009 then
        L6_5012 = L6_5012 + A0_5006.W:Damage(A1_5007)
        L7_5013 = L7_5013 + A0_5006.W:Mana()
      end
      if A4_5010 then
        L6_5012 = L6_5012 + A0_5006.E:Damage(A1_5007)
        L7_5013 = L7_5013 + A0_5006.E:Mana()
      end
      if A5_5011 then
        L6_5012 = L6_5012 + A0_5006.R:Damage(A1_5007)
        L7_5013 = L7_5013 + A0_5006.R:Mana()
      end
      if A3_3:IsReady() then
        L6_5012 = L6_5012 + A3_3:Damage(A1_5007)
      end
      L6_5012 = L6_5012 + getDmg("AD", A1_5007, myHero) * 2
    end
    L6_5012 = L6_5012 * A0_5006:GetOverkill()
    return L6_5012, L7_5013
  end
  function __Kassadin.GetOverkill(A0_5014)
    local L1_5015, L2_5016, L3_5017, L4_5018, L5_5019, L6_5020, L7_5021, L8_5022, L9_5023, L10_5024, L11_5025, L12_5026, L13_5027, L14_5028, L15_5029, L16_5030, L17_5031, L18_5032, L19_5033, L20_5034, L21_5035, L22_5036, L23_5037, L24_5038, L25_5039, L26_5040, L27_5041, L28_5042, L29_5043, L30_5044, L31_5045, L32_5046, L33_5047, L34_5048, L35_5049, L36_5050, L37_5051, L38_5052, L39_5053, L40_5054, L41_5055, L42_5056, L43_5057, L44_5058, L45_5059, L46_5060, L47_5061, L48_5062, L49_5063, L50_5064, L51_5065, L52_5066, L53_5067, L54_5068, L55_5069, L56_5070, L57_5071, L58_5072, L59_5073, L60_5074, L61_5075, L62_5076, L63_5077, L64_5078, L65_5079, L66_5080, L67_5081, L68_5082, L69_5083, L70_5084, L71_5085, L72_5086, L73_5087, L74_5088, L75_5089, L76_5090, L77_5091, L78_5092, L79_5093, L80_5094, L81_5095, L82_5096, L83_5097, L84_5098, L85_5099, L86_5100, L87_5101, L88_5102, L89_5103, L90_5104, L91_5105, L92_5106, L93_5107, L94_5108, L95_5109, L96_5110, L97_5111, L98_5112, L99_5113, L100_5114, L101_5115, L102_5116, L103_5117, L104_5118, L105_5119, L106_5120, L107_5121, L108_5122, L109_5123, L110_5124, L111_5125, L112_5126, L113_5127, L114_5128, L115_5129, L116_5130, L117_5131, L118_5132, L119_5133, L120_5134, L121_5135, L122_5136, L123_5137, L124_5138, L125_5139, L126_5140, L127_5141, L128_5142, L129_5143, L130_5144, L131_5145, L132_5146, L133_5147, L134_5148, L135_5149, L136_5150, L137_5151, L138_5152, L139_5153, L140_5154, L141_5155, L142_5156, L143_5157, L144_5158, L145_5159, L146_5160, L147_5161, L148_5162, L149_5163, L150_5164, L151_5165, L152_5166, L153_5167, L154_5168, L155_5169, L156_5170, L157_5171, L158_5172, L159_5173, L160_5174, L161_5175, L162_5176, L163_5177, L164_5178, L165_5179, L166_5180, L167_5181, L168_5182, L169_5183, L170_5184, L171_5185, L172_5186, L173_5187, L174_5188, L175_5189, L176_5190, L177_5191, L178_5192, L179_5193, L180_5194, L181_5195, L182_5196, L183_5197, L184_5198, L185_5199, L186_5200, L187_5201, L188_5202, L189_5203, L190_5204, L191_5205, L192_5206, L193_5207, L194_5208, L195_5209, L196_5210, L197_5211, L198_5212, L199_5213, L200_5214, L201_5215, L202_5216, L203_5217, L204_5218, L205_5219, L206_5220, L207_5221, L208_5222, L209_5223, L210_5224, L211_5225, L212_5226, L213_5227, L214_5228, L215_5229, L216_5230, L217_5231, L218_5232, L219_5233, L220_5234, L221_5235, L222_5236, L223_5237, L224_5238, L225_5239, L226_5240, L227_5241, L228_5242, L229_5243, L230_5244, L231_5245, L232_5246, L233_5247, L234_5248, L235_5249, L236_5250, L237_5251, L238_5252, L239_5253, L240_5254, L241_5255, L242_5256, L243_5257, L244_5258, L245_5259, L246_5260, L247_5261, L248_5262, L249_5263, L250_5264, L251_5265, L252_5266, L253_5267, L254_5268
    L1_5015 = A0_5014.Menu
    L1_5015 = L1_5015.General
    L1_5015 = L1_5015.Overkill
    L1_5015 = 100 + L1_5015
    L1_5015 = L1_5015 / 100
    return L1_5015
  end
  class("__Corki")
  function __Corki.__init(A0_5269)
    local L1_5270
    L1_5270 = 0
    L1_5270 = _ENV[L1_5270]
    if not L1_5270 then
      return
    end
    L1_5270 = L1_5270 * L1_5270
    A0_5269.ScriptName = "Forbidden Corki"
    A0_5269.Author = "Da Vinci"
    A0_5269.MenuLoaded = false
    A0_5269.Menu = nil
    A0_5269.TS = nil
    A0_5269.RStack = 0
    A0_5269.IsR2 = false
    A0_5269.LastPacketReceived = 0
    A0_5269.IsCastingE = false
    A0_5269.MouseClicked = false
    L1_5270 = {}
    A0_5269.Packets = L1_5270
    L1_5270 = {}
    L1_5270["5.13"] = {
      ["Header"] = 259,
      ["Pos"] = 10,
      [239] = 1,
      [14] = 2,
      [207] = 3,
      [106] = 4,
      [155] = 5,
      [222] = 6,
      [213] = 7
    }
    L1_5270["5.14"] = {
      ["Header"] = 99,
      ["Pos"] = 6,
      [185] = 1,
      [147] = 2,
      [228] = 3,
      [2] = 4,
      [61] = 5,
      [226] = 6,
      [109] = 7
    }
    L1_5270["5.15"] = {
      ["Header"] = 89,
      ["Pos"] = 6,
      [84] = 1,
      [237] = 2,
      [130] = 3,
      [208] = 4,
      [150] = 5,
      [50] = 6,
      [250] = 7
    }
    L1_5270["5.16"] = {
      ["Header"] = 238,
      ["Pos"] = 23,
      [156] = 1,
      [57] = 2,
      [45] = 3,
      [254] = 4,
      [21] = 5,
      [13] = 6,
      [115] = 7
    }
    L1_5270["5.17"] = {
      ["Header"] = 224,
      ["Pos"] = 6,
      [198] = 1,
      [31] = 2,
      [9] = 3,
      [1] = 4,
      [118] = 5,
      [36] = 6,
      [213] = 7
    }
    A0_5269.Versions = L1_5270
    L1_5270 = A0_5269.Versions
    L1_5270 = L1_5270[string.sub(GetGameVersion(), 0, 4)]
    if L1_5270 ~= nil then
      L1_5270 = A0_5269.Versions
      L1_5270 = L1_5270[string.sub(GetGameVersion(), 0, 4)]
      A0_5269.Packets = L1_5270
    end
  end
  function __Corki.OnTick(A0_5271)
    local L1_5272
    L1_5272 = 0
    L1_5272 = _ENV[L1_5272]
    if not L1_5272 then
      return
    end
    L1_5272 = L1_5272 * L1_5272
    L1_5272 = myHero
    L1_5272 = L1_5272.dead
    if not L1_5272 then
      L1_5272 = A0_5271.Menu
      if L1_5272 ~= nil then
        L1_5272 = A0_5271.MenuLoaded
      end
    elseif not L1_5272 then
      return
    end
    L1_5272 = A0_5271.Q
    L1_5272 = L1_5272.Range
    L1_5272 = L1_5272 + A0_5271.Q.Width
    if A0_5271.R:IsReady() then
      L1_5272 = A0_5271.R.Range
    end
    A0_5271.TS.range = L1_5272
    A0_5271.TS:update()
    A0_5271.Q.Width = 250
    A0_5271:KillSteal()
    if A0_5271.RStack == 0 and A0_5271.R:GetSpellData() ~= nil and A0_5271.R:GetSpellData().level ~= nil and 0 < A0_5271.R:GetSpellData().level and os.clock() - A0_5271.LastPacketReceived > 12 then
      A0_5271.RStack = 7
    end
    if OrbwalkManager:IsCombo() then
      A0_5271:Combo()
    elseif OrbwalkManager:IsHarass() then
      A0_5271:Harass()
    elseif OrbwalkManager:IsClear() then
      A0_5271:Clear()
    elseif OrbwalkManager:IsLastHit() then
      A0_5271:LastHit()
    end
    if A0_5271.Menu.Keys.HarassToggle then
      A0_5271:Harass()
    end
  end
  function __Corki.KillSteal(A0_5273)
    local L1_5274, L2_5275, L3_5276, L4_5277, L5_5278
    if not L1_5274 then
      return
    end
    L5_5278 = L2_5275()
    for L4_5277, L5_5278 in L1_5274(L2_5275, L3_5276, L4_5277, L5_5278, L2_5275()) do
      if IsValidTarget(L5_5278, A0_5273.TS.range) and L5_5278.health > 0 and PercentageHealth(L5_5278) <= 35 then
        if GetBestCombo(L5_5278, A0_5273) >= L5_5278.health then
          if A0_5273.Menu.KillSteal.Q and (GetBestCombo(L5_5278, A0_5273) or A0_5273.Q:Damage(L5_5278) > L5_5278.health) then
            A0_5273:CastQ(L5_5278)
          end
          if A0_5273.Menu.KillSteal.W and (GetBestCombo(L5_5278, A0_5273) or A0_5273.W:Damage(L5_5278) > L5_5278.health) then
            A0_5273.W:Cast(L5_5278)
          end
          if A0_5273.Menu.KillSteal.E and (GetBestCombo(L5_5278, A0_5273) or A0_5273.E:Damage(L5_5278) > L5_5278.health) then
            A0_5273:CastE(L5_5278)
          end
          if A0_5273.Menu.KillSteal.R and (GetBestCombo(L5_5278, A0_5273) or A0_5273.R:Damage(L5_5278) > L5_5278.health) then
            A0_5273:CastR(L5_5278)
          end
        end
        if A0_5273.Menu.KillSteal.Ignite and A3_3:IsReady() and A3_3:Damage(L5_5278) > L5_5278.health then
          A3_3:Cast(L5_5278)
        end
      end
    end
  end
  function __Corki.Combo(A0_5279)
    local L1_5280
    L1_5280 = 0
    L1_5280 = _ENV[L1_5280]
    if not L1_5280 then
      return
    end
    L1_5280 = L1_5280 * L1_5280
    L1_5280 = A0_5279.TS
    L1_5280 = L1_5280.target
    if IsValidTarget(L1_5280) then
      if A0_5279.Menu.Combo.Items then
        UseItems(L1_5280)
      end
      if A3_3:IsReady() and A0_5279.Menu.Combo.Ignite and GetBestCombo(L1_5280, A0_5279) / A0_5279:GetOverkill() >= L1_5280.health then
        A3_3:Cast(L1_5280)
      end
      if A0_5279.Menu.Combo.Zhonyas > 0 and PercentageHealth() <= A0_5279.Menu.Combo.Zhonyas and L6_6.Zhonyas:IsReady() then
        L6_6.Zhonyas:Cast()
      end
      if A0_5279.Menu.Combo.W then
        A0_5279.W:Cast(L1_5280)
      end
      if A0_5279.Menu.Combo.E then
        A0_5279:CastE(L1_5280)
      end
      if A0_5279.Menu.Combo.Q then
        A0_5279:CastQ(L1_5280)
      end
      if 0 < A0_5279.Menu.Combo.R and A0_5279.Menu.Combo.R <= A0_5279.RStack then
        A0_5279:CastR(L1_5280)
      end
    end
  end
  function __Corki.Harass(A0_5281)
    local L1_5282
    L1_5282 = 0
    L1_5282 = _ENV[L1_5282]
    if not L1_5282 then
      return
    end
    L1_5282 = L1_5282 * L1_5282
    L1_5282 = PercentageMana
    L1_5282 = L1_5282()
    if L1_5282 >= A0_5281.Menu.Harass.Mana then
      L1_5282 = A0_5281.TS
      L1_5282 = L1_5282.target
      if IsValidTarget(L1_5282) then
        if A0_5281.Menu.Harass.W then
          A0_5281.W:Cast(L1_5282)
        end
        if A0_5281.Menu.Harass.E then
          A0_5281:CastE(L1_5282)
        end
        if A0_5281.Menu.Harass.Q then
          A0_5281:CastQ(L1_5282)
        end
        if A0_5281.Menu.Harass.R > 0 and A0_5281.Menu.Harass.R <= A0_5281.RStack then
          A0_5281:CastR(L1_5282)
        end
      end
    end
  end
  function __Corki.Clear(A0_5283)
    local L1_5284, L2_5285, L3_5286, L4_5287, L5_5288, L6_5289, L7_5290
    L1_5284 = 0
    L1_5284 = _ENV[L1_5284]
    if not L1_5284 then
      return
    end
    L1_5284 = L1_5284 * L1_5284
    L1_5284 = OrbwalkManager
    L2_5285 = L1_5284
    L1_5284 = L1_5284.GetClearMode
    L1_5284 = L1_5284(L2_5285)
    if L1_5284 ~= nil then
      L2_5285 = L1_5284.find
      L2_5285 = L2_5285(L3_5286, L4_5287)
      if L2_5285 then
        L2_5285 = PercentageMana
        L2_5285 = L2_5285()
        if L2_5285 >= L3_5286 then
          L2_5285 = A0_5283.Q
          L2_5285 = L2_5285.LaneClear
          L4_5287.NumberOfHits = L5_5288
          L2_5285(L3_5286, L4_5287)
          L2_5285 = A0_5283.W
          L2_5285 = L2_5285.LaneClear
          L4_5287.NumberOfHits = L5_5288
          L4_5287.UseCast = false
          L2_5285 = L2_5285(L3_5286, L4_5287)
          if L3_5286 then
            L6_5289 = L2_5285
            L6_5289 = Vector
            L7_5290 = myHero
            L6_5289 = L6_5289(L7_5290)
            L6_5289 = L3_5286
            L4_5287(L5_5288, L6_5289)
          end
          L6_5289 = A0_5283.Menu
          L6_5289 = L6_5289.LaneClear
          L6_5289 = L6_5289.E
          L5_5288.NumberOfHits = L6_5289
          L3_5286(L4_5287, L5_5288)
          if L3_5286 then
            L3_5286(L4_5287)
            for L6_5289, L7_5290 in L3_5286(L4_5287) do
              A0_5283:CastE(L7_5290)
            end
          end
          if L3_5286 > 0 then
            if L3_5286 <= L4_5287 then
              L3_5286(L4_5287)
              if L3_5286 >= L4_5287 then
                L3_5286(L4_5287)
              end
              L6_5289 = A0_5283.Menu
              L6_5289 = L6_5289.LastHit
              L6_5289 = L6_5289.R
              L5_5288.Mode = L6_5289
              L3_5286(L4_5287, L5_5288)
            end
          end
          if L3_5286 > 1 then
            L3_5286(L4_5287)
          end
        end
      else
        L2_5285 = A0_5283.Menu
        L2_5285 = L2_5285.JungleClear
        L2_5285 = L2_5285.Q
        if L2_5285 then
          L2_5285 = A0_5283.Q
          L2_5285 = L2_5285.JungleClear
          L2_5285(L3_5286)
        end
        L2_5285 = A0_5283.Menu
        L2_5285 = L2_5285.JungleClear
        L2_5285 = L2_5285.W
        if L2_5285 then
          L2_5285 = A0_5283.W
          L2_5285 = L2_5285.JungleClear
          L2_5285(L3_5286)
        end
        L2_5285 = A0_5283.Menu
        L2_5285 = L2_5285.JungleClear
        L2_5285 = L2_5285.E
        if L2_5285 then
          L2_5285 = A0_5283.E
          L2_5285 = L2_5285.JungleClear
          L2_5285(L3_5286)
        end
        L2_5285 = A0_5283.Menu
        L2_5285 = L2_5285.JungleClear
        L2_5285 = L2_5285.R
        if L2_5285 then
          L2_5285 = A0_5283.Menu
          L2_5285 = L2_5285.JungleClear
          L2_5285 = L2_5285.R2
          if L2_5285 <= L3_5286 then
            L2_5285 = A0_5283.R
            L2_5285 = L2_5285.JungleClear
            L2_5285(L3_5286)
          end
        end
      end
    end
  end
  function __Corki.LastHit(A0_5291)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_5291.Menu.LastHit.Mana then
      A0_5291.Q:LastHit({
        Mode = A0_5291.Menu.LastHit.Q
      })
      if A0_5291.Menu.LastHit.R2 <= A0_5291.RStack then
        A0_5291.R:LastHit({
          Mode = A0_5291.Menu.LastHit.R
        })
      end
    end
  end
  function __Corki.CastQ(A0_5292, A1_5293)
    if A0_5292.Q:IsReady() and A0_5292.Q:ValidTarget(A1_5293) then
      A0_5292.Q:Cast(A1_5293, {Width = 200})
    end
  end
  function __Corki.CastE(A0_5294, A1_5295)
    if A0_5294.E:ValidTarget(A1_5295) then
      if A0_5294.E:IsReady() then
        A0_5294.E:Cast(A1_5295)
      elseif A0_5294.IsCastingE then
      end
    end
  end
  function __Corki.CastR(A0_5296, A1_5297)
    if A0_5296.R:IsReady() and A0_5296.R:ValidTarget(A1_5297) then
      A0_5296.R:Cast(A1_5297)
    end
  end
  function __Corki.OnRecvPacket(A0_5298, A1_5299)
    local L2_5300, L3_5301, L4_5302, L5_5303, L6_5304, L7_5305
    L2_5300 = 0
    L2_5300 = _ENV[L2_5300]
    if not L2_5300 then
      return
    end
    L2_5300 = L2_5300 * L2_5300
    L2_5300 = A0_5298.Menu
    if L2_5300 ~= nil then
      L2_5300 = A0_5298.MenuLoaded
    elseif not L2_5300 then
      return
    end
    if A1_5299 then
      A1_5299.pos = 2
      L2_5300 = myHero
      L2_5300 = L2_5300.networkID
      if L2_5300 == L3_5301 then
        L2_5300 = A0_5298.Menu
        L2_5300 = L2_5300.General
        L2_5300 = L2_5300.Developer
        if L2_5300 then
          L2_5300 = A0_5298.MouseClicked
          if L2_5300 then
            L2_5300 = print
            L2_5300(L3_5301)
          end
        end
        L2_5300 = A1_5299.header
        if L2_5300 == L3_5301 then
          L2_5300 = A0_5298.Menu
          L2_5300 = L2_5300.General
          L2_5300 = L2_5300.Developer
          if L2_5300 then
            L2_5300 = A0_5298.MouseClicked
            if L2_5300 then
              A1_5299.pos = 6
              L2_5300 = ""
              for L6_5304 = 6, A1_5299.size do
                L7_5305 = A1_5299.Decode1
                L7_5305 = L7_5305(A1_5299)
                L2_5300 = L2_5300 .. " | " .. A1_5299.pos - 1 .. " - " .. L7_5305
              end
              L3_5301(L4_5302)
              L3_5301(L4_5302)
            end
          end
          L2_5300 = A0_5298.Packets
          L2_5300 = L2_5300.Pos
          A1_5299.pos = L2_5300
          L2_5300 = A1_5299.Decode1
          L2_5300 = L2_5300(L3_5301)
          if L3_5301 then
            if L3_5301 then
              L3_5301(L4_5302)
            end
          end
          if L3_5301 then
            A0_5298.RStack = L3_5301
            A0_5298.LastPacketReceived = L3_5301
          end
          if L3_5301 then
            if L3_5301 then
              L3_5301(L4_5302)
            end
          end
        end
      end
    end
  end
  function __Corki.OnDraw(A0_5306)
    local L1_5307
    L1_5307 = 0
    L1_5307 = _ENV[L1_5307]
    if not L1_5307 then
      return
    end
    L1_5307 = L1_5307 * L1_5307
    L1_5307 = myHero
    L1_5307 = L1_5307.dead
    if not L1_5307 then
      L1_5307 = A0_5306.Menu
      if L1_5307 ~= nil then
        L1_5307 = A0_5306.MenuLoaded
      end
    elseif not L1_5307 then
      return
    end
    L1_5307 = A0_5306.Menu
    L1_5307 = L1_5307.General
    L1_5307 = L1_5307.Developer
    if L1_5307 then
      L1_5307 = WorldToScreen
      L1_5307 = L1_5307(D3DXVECTOR3(myHero.x, myHero.y, myHero.z))
      DrawText(tostring(A0_5306.RStack), 20, L1_5307.x, L1_5307.y, L11_11.White)
    end
  end
  function __Corki.OnProcessSpell(A0_5308, A1_5309, A2_5310)
    if A0_5308.Menu == nil or not A0_5308.MenuLoaded then
      return
    end
    if A1_5309 and A2_5310 and A2_5310.name and A1_5309.isMe and A2_5310.name:lower() == "missilebarrage" then
      A0_5308.RStack = A0_5308.RStack - 1
      if A0_5308.RStack < 0 then
        A0_5308.RStack = 0
      end
    end
  end
  function __Corki.OnApplyBuff(A0_5311, A1_5312, A2_5313, A3_5314)
    if A1_5312 and A3_5314 and A1_5312.isMe then
      if A3_5314.name:lower():find("mbcheck2") then
        A0_5311.IsR2 = true
      elseif A3_5314.name:lower():find("ggun") then
        A0_5311.IsCastingE = true
      end
    end
  end
  function __Corki.OnRemoveBuff(A0_5315, A1_5316, A2_5317)
    if A1_5316 and A2_5317 and A1_5316.isMe then
      if A2_5317.name:lower():find("mbcheck2") then
        A0_5315.IsR2 = false
      elseif A2_5317.name:lower():find("ggun") then
        A0_5315.IsCastingE = false
      end
    end
  end
  function __Corki.OnWndMsg(A0_5318, A1_5319, A2_5320)
    local L3_5321, L4_5322, L5_5323, L6_5324, L7_5325, L8_5326, L9_5327, L10_5328, L11_5329, L12_5330, L13_5331, L14_5332, L15_5333, L16_5334, L17_5335, L18_5336, L19_5337, L20_5338, L21_5339, L22_5340, L23_5341, L24_5342, L25_5343, L26_5344, L27_5345, L28_5346, L29_5347, L30_5348, L31_5349, L32_5350, L33_5351, L34_5352, L35_5353, L36_5354, L37_5355, L38_5356, L39_5357, L40_5358, L41_5359, L42_5360, L43_5361, L44_5362, L45_5363, L46_5364, L47_5365, L48_5366, L49_5367, L50_5368, L51_5369, L52_5370, L53_5371, L54_5372, L55_5373, L56_5374, L57_5375, L58_5376, L59_5377, L60_5378, L61_5379, L62_5380, L63_5381, L64_5382, L65_5383, L66_5384, L67_5385, L68_5386, L69_5387, L70_5388, L71_5389, L72_5390, L73_5391, L74_5392, L75_5393, L76_5394, L77_5395, L78_5396, L79_5397, L80_5398, L81_5399, L82_5400, L83_5401, L84_5402, L85_5403, L86_5404, L87_5405, L88_5406, L89_5407, L90_5408, L91_5409, L92_5410, L93_5411, L94_5412, L95_5413, L96_5414, L97_5415, L98_5416, L99_5417, L100_5418, L101_5419, L102_5420, L103_5421, L104_5422, L105_5423, L106_5424, L107_5425, L108_5426, L109_5427, L110_5428, L111_5429, L112_5430, L113_5431, L114_5432, L115_5433, L116_5434, L117_5435, L118_5436, L119_5437, L120_5438, L121_5439, L122_5440, L123_5441, L124_5442, L125_5443, L126_5444, L127_5445, L128_5446, L129_5447, L130_5448, L131_5449, L132_5450, L133_5451, L134_5452, L135_5453, L136_5454, L137_5455, L138_5456, L139_5457, L140_5458, L141_5459, L142_5460, L143_5461, L144_5462, L145_5463, L146_5464, L147_5465, L148_5466, L149_5467, L150_5468, L151_5469, L152_5470, L153_5471, L154_5472, L155_5473, L156_5474, L157_5475, L158_5476, L159_5477, L160_5478, L161_5479, L162_5480, L163_5481, L164_5482, L165_5483, L166_5484, L167_5485, L168_5486, L169_5487, L170_5488, L171_5489, L172_5490, L173_5491, L174_5492, L175_5493, L176_5494, L177_5495, L178_5496, L179_5497, L180_5498, L181_5499, L182_5500, L183_5501, L184_5502, L185_5503, L186_5504, L187_5505, L188_5506, L189_5507, L190_5508, L191_5509, L192_5510, L193_5511, L194_5512, L195_5513, L196_5514, L197_5515, L198_5516, L199_5517, L200_5518, L201_5519, L202_5520, L203_5521, L204_5522, L205_5523, L206_5524, L207_5525, L208_5526, L209_5527, L210_5528, L211_5529, L212_5530, L213_5531, L214_5532, L215_5533, L216_5534, L217_5535, L218_5536, L219_5537, L220_5538, L221_5539, L222_5540, L223_5541, L224_5542, L225_5543, L226_5544, L227_5545, L228_5546, L229_5547, L230_5548, L231_5549, L232_5550, L233_5551, L234_5552, L235_5553, L236_5554, L237_5555, L238_5556, L239_5557, L240_5558, L241_5559, L242_5560, L243_5561, L244_5562, L245_5563, L246_5564, L247_5565, L248_5566, L249_5567, L250_5568, L251_5569, L252_5570, L253_5571, L254_5572
    L3_5321 = 0
    L3_5321 = _ENV[L3_5321]
    if not L3_5321 then
      return
    end
    L3_5321 = L3_5321 * L3_5321
    L3_5321 = WM_LBUTTONDOWN
    if A1_5319 == L3_5321 then
      A0_5318.MouseClicked = true
    else
      L3_5321 = WM_LBUTTONUP
      if A1_5319 == L3_5321 then
        A0_5318.MouseClicked = false
      end
    end
  end
  function __Corki.GetComboDamage(A0_5573, A1_5574, A2_5575, A3_5576, A4_5577, A5_5578)
    local L6_5579, L7_5580
    L6_5579 = 0
    L6_5579 = _ENV[L6_5579]
    if not L6_5579 then
      return
    end
    L6_5579 = L6_5579 * L6_5579
    L6_5579 = 0
    L7_5580 = 0
    if IsValidTarget(A1_5574) then
      if A2_5575 then
        L6_5579 = L6_5579 + A0_5573.Q:Damage(A1_5574)
        L7_5580 = L7_5580 + A0_5573.Q:Mana()
      end
      if A3_5576 then
        L6_5579 = L6_5579 + A0_5573.W:Damage(A1_5574)
        L7_5580 = L7_5580 + A0_5573.W:Mana()
      end
      if A4_5577 then
        L6_5579 = L6_5579 + A0_5573.E:Damage(A1_5574) * 2
        L7_5580 = L7_5580 + A0_5573.E:Mana()
      end
      if A5_5578 then
        L6_5579 = L6_5579 + A0_5573.R:Damage(A1_5574) * math.max(A0_5573.RStack / 2, 0)
        L7_5580 = L7_5580 + A0_5573.R:Mana() * math.max(A0_5573.RStack / 2, 0)
      end
      if A3_3:IsReady() then
        L6_5579 = L6_5579 + A3_3:Damage(A1_5574)
      end
      L6_5579 = L6_5579 + getDmg("AD", A1_5574, myHero) * 2
    end
    L6_5579 = L6_5579 * A0_5573:GetOverkill()
    return L6_5579, L7_5580
  end
  function __Corki.GetOverkill(A0_5581)
    local L1_5582, L2_5583, L3_5584, L4_5585, L5_5586, L6_5587, L7_5588, L8_5589, L9_5590, L10_5591, L11_5592, L12_5593, L13_5594, L14_5595, L15_5596, L16_5597, L17_5598, L18_5599, L19_5600, L20_5601, L21_5602, L22_5603, L23_5604, L24_5605, L25_5606, L26_5607, L27_5608, L28_5609, L29_5610, L30_5611, L31_5612, L32_5613, L33_5614, L34_5615, L35_5616, L36_5617, L37_5618, L38_5619, L39_5620, L40_5621, L41_5622, L42_5623, L43_5624, L44_5625, L45_5626, L46_5627, L47_5628, L48_5629, L49_5630, L50_5631, L51_5632, L52_5633, L53_5634, L54_5635, L55_5636, L56_5637, L57_5638, L58_5639, L59_5640, L60_5641, L61_5642, L62_5643, L63_5644, L64_5645, L65_5646, L66_5647, L67_5648, L68_5649, L69_5650, L70_5651, L71_5652, L72_5653, L73_5654, L74_5655, L75_5656, L76_5657, L77_5658, L78_5659, L79_5660, L80_5661, L81_5662, L82_5663, L83_5664, L84_5665, L85_5666, L86_5667, L87_5668, L88_5669, L89_5670, L90_5671, L91_5672, L92_5673, L93_5674, L94_5675, L95_5676, L96_5677, L97_5678, L98_5679, L99_5680, L100_5681, L101_5682, L102_5683, L103_5684, L104_5685, L105_5686, L106_5687, L107_5688, L108_5689, L109_5690, L110_5691, L111_5692, L112_5693, L113_5694, L114_5695, L115_5696, L116_5697, L117_5698, L118_5699, L119_5700, L120_5701, L121_5702, L122_5703, L123_5704, L124_5705, L125_5706, L126_5707, L127_5708, L128_5709, L129_5710, L130_5711, L131_5712, L132_5713, L133_5714, L134_5715, L135_5716, L136_5717, L137_5718, L138_5719, L139_5720, L140_5721, L141_5722, L142_5723, L143_5724, L144_5725, L145_5726, L146_5727, L147_5728, L148_5729, L149_5730, L150_5731, L151_5732, L152_5733, L153_5734, L154_5735, L155_5736, L156_5737, L157_5738, L158_5739, L159_5740, L160_5741, L161_5742, L162_5743, L163_5744, L164_5745, L165_5746, L166_5747, L167_5748, L168_5749, L169_5750, L170_5751, L171_5752, L172_5753, L173_5754, L174_5755, L175_5756, L176_5757, L177_5758, L178_5759, L179_5760, L180_5761, L181_5762, L182_5763, L183_5764, L184_5765, L185_5766, L186_5767, L187_5768, L188_5769, L189_5770, L190_5771, L191_5772, L192_5773, L193_5774, L194_5775, L195_5776, L196_5777, L197_5778, L198_5779, L199_5780, L200_5781, L201_5782, L202_5783, L203_5784, L204_5785, L205_5786, L206_5787, L207_5788, L208_5789, L209_5790, L210_5791, L211_5792, L212_5793, L213_5794, L214_5795, L215_5796, L216_5797, L217_5798, L218_5799, L219_5800, L220_5801, L221_5802, L222_5803, L223_5804, L224_5805, L225_5806, L226_5807, L227_5808, L228_5809, L229_5810, L230_5811, L231_5812, L232_5813, L233_5814, L234_5815, L235_5816, L236_5817, L237_5818, L238_5819, L239_5820, L240_5821, L241_5822, L242_5823, L243_5824, L244_5825, L245_5826, L246_5827, L247_5828, L248_5829, L249_5830, L250_5831, L251_5832, L252_5833, L253_5834, L254_5835
    L1_5582 = A0_5581.Menu
    L1_5582 = L1_5582.General
    L1_5582 = L1_5582.Overkill
    L1_5582 = 100 + L1_5582
    L1_5582 = L1_5582 / 100
    return L1_5582
  end
  class("__Yasuo")
  function __Yasuo.__init(A0_5836)
    if not _ENV[0] then
      return
    end
    A0_5836.ScriptName = "Breath Taker"
    A0_5836.Author = "Da Vinci"
    A0_5836.MenuLoaded = false
    A0_5836.Menu = nil
    A0_5836.TS = nil
    A0_5836.IsDashing = false
    A0_5836.QState = 1
    A0_5836.DashedUnits = {}
    A0_5836.KnockedUnits = {}
    A0_5836.Q3Time = os.clock()
  end
  function __Yasuo.OnTick(A0_5837)
    local L1_5838, L2_5839, L3_5840, L4_5841, L5_5842
    if not L1_5838 then
      return
    end
    if not L1_5838 then
    elseif not L1_5838 then
      return
    end
    L1_5838.range = L2_5839
    L1_5838(L2_5839)
    if L1_5838 then
      L1_5838.Type = L2_5839
      L1_5838.Range = 270
      L1_5838.Width = 270
      L1_5838.Delay = 0
      L1_5838.Speed = L2_5839
    elseif L1_5838 == 3 then
      L1_5838.Type = L2_5839
      L1_5838.Range = 1100
      L1_5838.Width = 90
      L1_5838.Delay = 0.25
      L1_5838.Speed = 1200
    else
      L1_5838.Type = L2_5839
      L1_5838.Range = 475
      L1_5838.Width = 20
      L1_5838.Delay = 0.35
      L1_5838.Speed = 8700
    end
    if L1_5838 > 0 then
      if L1_5838 >= L2_5839 then
        L1_5838(L2_5839, L3_5840)
      end
    end
    if L1_5838 then
      if L1_5838 then
        if L1_5838 then
          if not L1_5838 then
            if L1_5838 < 3 then
              if not L1_5838 then
                L1_5838(L2_5839)
                for L4_5841, L5_5842 in L1_5838(L2_5839) do
                  if A0_5837.Q:IsReady() and A0_5837.Q:ValidTarget(L5_5842) then
                    A0_5837.Q:Cast(L5_5842)
                  end
                end
                L1_5838(L2_5839)
                for L4_5841, L5_5842 in L1_5838(L2_5839) do
                  if A0_5837.Q:IsReady() and A0_5837.Q:ValidTarget(L5_5842) then
                    A0_5837.Q:Cast(L5_5842)
                  end
                end
              end
            end
          end
        end
      end
    end
    if L1_5838 then
      if L1_5838 then
        if L1_5838 then
          if not L1_5838 then
            if not L1_5838 then
              L5_5842 = L2_5839()
              for L4_5841, L5_5842 in L1_5838(L2_5839, L3_5840, L4_5841, L5_5842, L2_5839()) do
                if A0_5837.Q:IsReady() and A0_5837.Q:ValidTarget(L5_5842) then
                  A0_5837.Q:Cast(L5_5842)
                end
              end
            end
          end
        end
      end
    end
    if not L1_5838 then
    elseif L1_5838 then
      L1_5838(L2_5839)
    end
    if L1_5838 then
      L1_5838(L2_5839)
    elseif L1_5838 then
      L1_5838(L2_5839)
    elseif L1_5838 then
      L1_5838(L2_5839)
    end
    if L1_5838 then
      L1_5838(L2_5839)
    end
  end
  function __Yasuo.EnemiesKnocked(A0_5843)
    local L1_5844, L2_5845, L3_5846, L4_5847, L5_5848, L6_5849
    L1_5844 = 0
    L1_5844 = _ENV[L1_5844]
    if not L1_5844 then
      return
    end
    L1_5844 = L1_5844 * L1_5844
    L1_5844 = {}
    L6_5849 = L3_5846()
    for L5_5848, L6_5849 in L2_5845(L3_5846, L4_5847, L5_5848, L6_5849, L3_5846()) do
      if IsValidTarget(L6_5849) and A0_5843.KnockedUnits[L6_5849.networkID] ~= nil then
        table.insert(L1_5844, L6_5849)
      end
    end
    return L1_5844
  end
  function __Yasuo.KillSteal(A0_5850)
    local L1_5851, L2_5852, L3_5853, L4_5854, L5_5855, L6_5856, L7_5857, L8_5858, L9_5859, L10_5860, L11_5861
    if not L1_5851 then
      return
    end
    L11_5861 = L2_5852()
    for L4_5854, L5_5855 in L1_5851(L2_5852, L3_5853, L4_5854, L5_5855, L6_5856, L7_5857, L8_5858, L9_5859, L10_5860, L11_5861, L2_5852()) do
      L6_5856 = PercentageHealth
      L7_5857 = L5_5855
      L6_5856 = L6_5856(L7_5857)
      if L6_5856 <= 30 then
        L6_5856 = ValidTarget
        L7_5857 = L5_5855
        L8_5858 = A0_5850.TS
        L8_5858 = L8_5858.range
        L6_5856 = L6_5856(L7_5857, L8_5858)
        if L6_5856 then
          L6_5856 = L5_5855.visible
          if L6_5856 then
            L6_5856 = GetBestCombo
            L7_5857 = L5_5855
            L8_5858 = A0_5850
            L10_5860 = L6_5856(L7_5857, L8_5858)
            L11_5861 = L5_5855.health
            if L10_5860 >= L11_5861 then
              L11_5861 = A0_5850.Menu
              L11_5861 = L11_5861.KillSteal
              L11_5861 = L11_5861.Q
              if L11_5861 then
                if not L6_5856 then
                  L11_5861 = A0_5850.Q
                  L11_5861 = L11_5861.Damage
                  L11_5861 = L11_5861(L11_5861, L5_5855)
                elseif L11_5861 > L5_5855.health then
                  L11_5861 = A0_5850.Q
                  L11_5861 = L11_5861.Cast
                  L11_5861(L11_5861, L5_5855)
                  L11_5861 = A0_5850.SearchEObject
                  L11_5861 = L11_5861(A0_5850, L5_5855)
                  if IsValidTarget(L11_5861) and GetDistanceSqr(L5_5855, A0_5850:EEndPos(L11_5861)) < GetDistanceSqr(L5_5855, myHero) then
                    A0_5850:CastE(L11_5861)
                  end
                end
              end
              L11_5861 = A0_5850.Menu
              L11_5861 = L11_5861.KillSteal
              L11_5861 = L11_5861.E
              if L11_5861 then
                if not L8_5858 then
                  L11_5861 = A0_5850.E
                  L11_5861 = L11_5861.Damage
                  L11_5861 = L11_5861(L11_5861, L5_5855)
                elseif L11_5861 > L5_5855.health then
                  L11_5861 = PercentageHealth
                  L11_5861 = L11_5861(L5_5855)
                  if L11_5861 <= 15 then
                    L11_5861 = A0_5850.CastE
                    L11_5861(A0_5850, L5_5855)
                    L11_5861 = A0_5850.SearchEObject
                    L11_5861 = L11_5861(A0_5850, L5_5855)
                    if IsValidTarget(L11_5861) and GetDistanceSqr(L5_5855, A0_5850:EEndPos(L11_5861)) < GetDistanceSqr(L5_5855, myHero) then
                      A0_5850:CastE(L11_5861)
                    end
                  end
                end
              end
              L11_5861 = A0_5850.Menu
              L11_5861 = L11_5861.KillSteal
              L11_5861 = L11_5861.R
              if L11_5861 then
                if not L9_5859 then
                  L11_5861 = A0_5850.R
                  L11_5861 = L11_5861.Damage
                  L11_5861 = L11_5861(L11_5861, L5_5855)
                elseif L11_5861 > L5_5855.health then
                  L11_5861 = A0_5850.CastR
                  L11_5861(A0_5850, L5_5855)
                end
              end
            end
            L11_5861 = A0_5850.Menu
            L11_5861 = L11_5861.KillSteal
            L11_5861 = L11_5861.Ignite
            if L11_5861 then
              L11_5861 = A3_3
              L11_5861 = L11_5861.IsReady
              L11_5861 = L11_5861(L11_5861)
              if L11_5861 then
                L11_5861 = A3_3
                L11_5861 = L11_5861.Damage
                L11_5861 = L11_5861(L11_5861, L5_5855)
                if L11_5861 > L5_5855.health then
                  L11_5861 = A3_3
                  L11_5861 = L11_5861.Cast
                  L11_5861(L11_5861, L5_5855)
                end
              end
            end
          end
        end
      end
    end
  end
  function __Yasuo.Harass(A0_5862)
    local L1_5863, L2_5864
    L1_5863 = 0
    L1_5863 = _ENV[L1_5863]
    if not L1_5863 then
      return
    end
    L1_5863 = L1_5863 * L1_5863
    L1_5863 = A0_5862.TS
    L1_5863 = L1_5863.target
    L2_5864 = IsValidTarget
    L2_5864 = L2_5864(L1_5863)
    if L2_5864 then
      L2_5864 = A0_5862.Menu
      L2_5864 = L2_5864.Harass
      L2_5864 = L2_5864.E
      if L2_5864 then
        L2_5864 = GetDistanceSqr
        L2_5864 = L2_5864(myHero, L1_5863)
        if L2_5864 > math.pow(myHero.range + myHero.boundingRadius + 50, 2) then
          L2_5864 = A0_5862.SearchEObject
          L2_5864 = L2_5864(A0_5862, L1_5863)
          if IsValidTarget(L2_5864) and GetDistanceSqr(L1_5863, A0_5862:EEndPos(L2_5864)) < GetDistanceSqr(L1_5863, myHero) then
            if L2_5864.networkID ~= L1_5863.networkID then
              A0_5862:CastE(L2_5864)
            elseif GetDistanceSqr(myHero, L1_5863) > math.pow(A0_5862.Menu.Harass.MinERange, 2) then
              A0_5862:CastE(L2_5864)
            end
          end
        end
      end
      L2_5864 = A0_5862.Menu
      L2_5864 = L2_5864.Harass
      L2_5864 = L2_5864.Q
      if L2_5864 then
        L2_5864 = A0_5862.Q
        L2_5864 = L2_5864.Cast
        L2_5864(L2_5864, L1_5863)
      end
    end
  end
  function __Yasuo.Clear(A0_5865)
    local L1_5866, L2_5867, L3_5868, L4_5869, L5_5870
    if not L1_5866 then
      return
    end
    if L1_5866 == 3 then
      L4_5869 = A0_5865.Menu
      L4_5869 = L4_5869.LaneClear
      L4_5869 = L4_5869.Q3
      L3_5868.NumberOfHits = L4_5869
      L1_5866(L2_5867, L3_5868)
    else
      L4_5869 = A0_5865.Menu
      L4_5869 = L4_5869.LaneClear
      L4_5869 = L4_5869.Q1
      L3_5868.NumberOfHits = L4_5869
      L1_5866(L2_5867, L3_5868)
    end
    if L1_5866 then
      L4_5869 = A0_5865.Menu
      L4_5869 = L4_5869.LaneClear
      L4_5869 = L4_5869.E
      L3_5868.Mode = L4_5869
      L1_5866(L2_5867, L3_5868)
    end
    if L1_5866 then
      L1_5866(L2_5867)
    end
    if L1_5866 then
      L1_5866(L2_5867)
      for L4_5869, L5_5870 in L1_5866(L2_5867) do
        if A0_5865.E:IsReady() then
          A0_5865:CastE(L5_5870)
        end
      end
    end
  end
  function __Yasuo.Combo(A0_5871)
    local L1_5872, L2_5873, L3_5874, L4_5875, L5_5876, L6_5877, L7_5878, L8_5879, L9_5880
    L1_5872 = 0
    L1_5872 = _ENV[L1_5872]
    if not L1_5872 then
      return
    end
    L1_5872 = L1_5872 * L1_5872
    L1_5872 = A0_5871.TS
    L1_5872 = L1_5872.target
    L2_5873 = IsValidTarget
    L3_5874 = L1_5872
    L2_5873 = L2_5873(L3_5874)
    if L2_5873 then
      L2_5873 = GetBestCombo
      L3_5874 = L1_5872
      L4_5875 = A0_5871
      L6_5877 = L2_5873(L3_5874, L4_5875)
      L7_5878 = A0_5871.Menu
      L7_5878 = L7_5878.Combo
      L7_5878 = L7_5878.Items
      if L7_5878 then
        L7_5878 = UseItems
        L8_5879 = L1_5872
        L7_5878(L8_5879)
      end
      L7_5878 = A0_5871.Menu
      L7_5878 = L7_5878.Combo
      L7_5878 = L7_5878.Ignite
      if L7_5878 > 1 then
        L7_5878 = A3_3
        L8_5879 = L7_5878
        L7_5878 = L7_5878.IsReady
        L7_5878 = L7_5878(L8_5879)
        if L7_5878 then
          L7_5878 = A0_5871.Menu
          L7_5878 = L7_5878.Combo
          L7_5878 = L7_5878.Ignite
          if L7_5878 == 2 then
            L8_5879 = A0_5871
            L7_5878 = A0_5871.GetOverkill
            L7_5878 = L7_5878(L8_5879)
            L7_5878 = L6_5877 / L7_5878
            L8_5879 = L1_5872.health
            if L7_5878 > L8_5879 then
              L7_5878 = A3_3
              L8_5879 = L7_5878
              L7_5878 = L7_5878.Cast
              L9_5880 = L1_5872
              L7_5878(L8_5879, L9_5880)
            end
          else
            L7_5878 = A3_3
            L8_5879 = L7_5878
            L7_5878 = L7_5878.Cast
            L9_5880 = L1_5872
            L7_5878(L8_5879, L9_5880)
          end
        end
      end
      L7_5878 = A0_5871.Menu
      L7_5878 = L7_5878.Combo
      L7_5878 = L7_5878.R2
      if L7_5878 > 0 then
        L8_5879 = A0_5871
        L7_5878 = A0_5871.EnemiesKnocked
        L7_5878 = L7_5878(L8_5879)
        L7_5878 = #L7_5878
        L8_5879 = A0_5871.Menu
        L8_5879 = L8_5879.Combo
        L8_5879 = L8_5879.R2
        if L7_5878 >= L8_5879 then
          L7_5878 = A0_5871.R
          L8_5879 = L7_5878
          L7_5878 = L7_5878.Cast
          L9_5880 = A0_5871.TS
          L9_5880 = L9_5880.target
          L7_5878(L8_5879, L9_5880)
        end
      end
      L7_5878 = A0_5871.Menu
      L7_5878 = L7_5878.Combo
      L7_5878 = L7_5878.R1
      if L7_5878 then
        L7_5878 = L1_5872.health
        if L6_5877 >= L7_5878 then
          L7_5878 = ObjectsInArea
          L8_5879 = GetEnemyHeroes
          L8_5879 = L8_5879()
          L9_5880 = A0_5871.R
          L9_5880 = L9_5880.Range
          L7_5878 = L7_5878(L8_5879, L9_5880, myHero)
          L7_5878 = #L7_5878
          if L7_5878 < 3 then
            L8_5879 = A0_5871
            L7_5878 = A0_5871.CastR
            L9_5880 = L1_5872
            L7_5878(L8_5879, L9_5880)
          end
        end
      end
      L7_5878 = A0_5871.Menu
      L7_5878 = L7_5878.Combo
      L7_5878 = L7_5878.E
      if L7_5878 then
        L7_5878 = GetDistanceSqr
        L8_5879 = myHero
        L9_5880 = L1_5872
        L7_5878 = L7_5878(L8_5879, L9_5880)
        L8_5879 = math
        L8_5879 = L8_5879.pow
        L9_5880 = myHero
        L9_5880 = L9_5880.range
        L9_5880 = L9_5880 + myHero.boundingRadius
        L9_5880 = L9_5880 + 50
        L8_5879 = L8_5879(L9_5880, 2)
        if L7_5878 > L8_5879 then
          L8_5879 = A0_5871
          L7_5878 = A0_5871.SearchEObject
          L9_5880 = L1_5872
          L7_5878 = L7_5878(L8_5879, L9_5880)
          L8_5879 = IsValidTarget
          L9_5880 = L7_5878
          L8_5879 = L8_5879(L9_5880)
          if L8_5879 then
            L8_5879 = L7_5878.networkID
            L9_5880 = L1_5872.networkID
            if L8_5879 ~= L9_5880 then
              L9_5880 = A0_5871
              L8_5879 = A0_5871.CastE
              L8_5879(L9_5880, L7_5878)
            else
              L8_5879 = GetDistanceSqr
              L9_5880 = myHero
              L8_5879 = L8_5879(L9_5880, L1_5872)
              L9_5880 = math
              L9_5880 = L9_5880.pow
              L9_5880 = L9_5880(A0_5871.Menu.Combo.MinERange, 2)
              if L8_5879 > L9_5880 then
                L9_5880 = A0_5871
                L8_5879 = A0_5871.CastE
                L8_5879(L9_5880, L7_5878)
              end
            end
          end
        end
      end
      L7_5878 = A0_5871.Menu
      L7_5878 = L7_5878.Combo
      L7_5878 = L7_5878.Q
      if L7_5878 then
        L7_5878 = A0_5871.Q
        L8_5879 = L7_5878
        L7_5878 = L7_5878.IsReady
        L7_5878 = L7_5878(L8_5879)
        if L7_5878 then
          L7_5878 = A0_5871.Q
          L8_5879 = L7_5878
          L7_5878 = L7_5878.GetPrediction
          L9_5880 = L1_5872
          L9_5880 = L7_5878(L8_5879, L9_5880)
          if A0_5871.QState == 3 then
            if L7_5878 and L8_5879 and L9_5880 and type(L9_5880) == "number" then
              if os.clock() - A0_5871.Q3Time <= 4.5 then
                if L9_5880 >= #ObjectsInArea(GetEnemyHeroes(), A0_5871.Q.Range, myHero) - 1 then
                  A0_5871.Q:CastToVector(L7_5878)
                end
              else
                A0_5871.Q:CastToVector(L7_5878)
              end
            end
          elseif L7_5878 and L8_5879 then
            A0_5871.Q:CastToVector(L7_5878)
          end
        end
      end
    end
  end
  function __Yasuo.CastE(A0_5881, A1_5882)
    local L2_5883, L3_5884, L4_5885, L5_5886, L6_5887, L7_5888, L8_5889, L9_5890, L10_5891, L11_5892, L12_5893, L13_5894
    L2_5883 = 0
    L2_5883 = _ENV[L2_5883]
    if not L2_5883 then
      return
    end
    L2_5883 = L2_5883 * L2_5883
    L2_5883 = A0_5881.E
    L2_5883 = L2_5883.IsReady
    L2_5883 = L2_5883(L3_5884)
    if L2_5883 then
      L2_5883 = IsValidTarget
      L2_5883 = L2_5883(L3_5884)
      if L2_5883 then
        L2_5883 = A0_5881.HaveEBuff
        L2_5883 = L2_5883(L3_5884, L4_5885)
        if not L2_5883 then
          L2_5883 = A0_5881.Menu
          L2_5883 = L2_5883.Misc
          L2_5883 = L2_5883.Avoid
          if L2_5883 > 1 then
            L2_5883 = A0_5881.Menu
            L2_5883 = L2_5883.Keys
            L2_5883 = L2_5883.Run
            if not L2_5883 then
              L2_5883 = A0_5881.EEndPos
              L2_5883 = L2_5883(L3_5884, L4_5885)
              L13_5894 = L4_5885()
              for L6_5887, L7_5888 in L3_5884(L4_5885, L5_5886, L6_5887, L7_5888, L8_5889, L9_5890, L10_5891, L11_5892, L12_5893, L13_5894, L4_5885()) do
                if L7_5888 ~= nil then
                  L8_5889 = GetDistance
                  L8_5889 = L8_5889(L9_5890, L10_5891)
                  if L8_5889 < 2000 then
                    L8_5889 = L7_5888.team
                    if L8_5889 ~= L9_5890 then
                      L8_5889 = GetDistanceSqr
                      L8_5889 = L8_5889(L9_5890, L10_5891)
                      if L8_5889 < L9_5890 then
                        L8_5889 = GetDistanceSqr
                        L8_5889 = L8_5889(L9_5890, L10_5891)
                        if L8_5889 > L9_5890 then
                          L8_5889 = IsValidTarget
                          L8_5889 = L8_5889(L9_5890)
                          if L8_5889 then
                            L8_5889 = A0_5881.Menu
                            L8_5889 = L8_5889.Misc
                            L8_5889 = L8_5889.Avoid
                            if L8_5889 == 2 then
                              L8_5889 = GetBestCombo
                              L12_5893 = L8_5889(L9_5890, L10_5891)
                              L13_5894 = A0_5881.TS
                              L13_5894 = L13_5894.target
                              L13_5894 = L13_5894.health
                              if L12_5893 < L13_5894 then
                                do return end
                                L8_5889 = A0_5881.Menu
                                L8_5889 = L8_5889.Misc
                                L8_5889 = L8_5889.Avoid
                                if L8_5889 == 3 then
                                  do return end
                                  L8_5889 = 0
                                  L9_5890(L10_5891)
                                  for L12_5893, L13_5894 in L9_5890(L10_5891) do
                                    if IsValidTarget(L13_5894) and GetDistanceSqr(L13_5894, L7_5888) < math.pow(L7_5888.range, 2) then
                                      L8_5889 = L8_5889 + 1
                                      break
                                    end
                                  end
                                  if L8_5889 == 0 then
                                    return
                                  end
                                end
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
          L2_5883 = A0_5881.E
          L2_5883 = L2_5883.Cast
          L2_5883(L3_5884, L4_5885)
        end
      end
    end
  end
  function __Yasuo.CastR(A0_5895, A1_5896)
    if not _ENV[0] then
      return
    end
    if A0_5895.R:IsReady() and IsValidTarget(A1_5896) and A0_5895.KnockedUnits[A1_5896.networkID] ~= nil then
      A0_5895.R:Cast(A1_5896)
    end
  end
  function __Yasuo.Run(A0_5897)
    local L1_5898
    L1_5898 = 0
    L1_5898 = _ENV[L1_5898]
    if not L1_5898 then
      return
    end
    L1_5898 = L1_5898 * L1_5898
    L1_5898 = A0_5897.SearchEObject
    L1_5898 = L1_5898(A0_5897, mousePos)
    if IsValidTarget(L1_5898) then
      A0_5897:CastE(L1_5898)
    else
      myHero:MoveTo(mousePos.x, mousePos.z)
    end
  end
  function __Yasuo.SearchEObject(A0_5899, A1_5900)
    local L2_5901, L3_5902, L4_5903, L5_5904, L6_5905, L7_5906
    L2_5901 = 0
    L2_5901 = _ENV[L2_5901]
    if not L2_5901 then
      return
    end
    L2_5901 = L2_5901 * L2_5901
    if A1_5900 ~= nil then
      L2_5901 = A0_5899.E
      L2_5901 = L2_5901.IsReady
      L2_5901 = L2_5901(L3_5902)
      if L2_5901 then
        L2_5901 = nil
        L3_5902(L4_5903)
        for L6_5905, L7_5906 in L3_5902(L4_5903) do
          if A0_5899.E:ValidTarget(L7_5906) and not A0_5899:HaveEBuff(L7_5906) and GetDistanceSqr(A1_5900, A0_5899:EEndPos(L7_5906)) < GetDistanceSqr(A1_5900, myHero) then
            if L2_5901 == nil then
              L2_5901 = L7_5906
            elseif GetDistanceSqr(A1_5900, A0_5899:EEndPos(L2_5901)) > GetDistanceSqr(A1_5900, A0_5899:EEndPos(L7_5906)) then
              L2_5901 = L7_5906
            end
          end
        end
        if L3_5902 then
          return L2_5901
        end
        L3_5902(L4_5903)
        for L6_5905, L7_5906 in L3_5902(L4_5903) do
          if A0_5899.E:ValidTarget(L7_5906) and not A0_5899:HaveEBuff(L7_5906) and GetDistanceSqr(A1_5900, A0_5899:EEndPos(L7_5906)) < GetDistanceSqr(A1_5900, myHero) then
            if L2_5901 == nil then
              L2_5901 = L7_5906
            elseif GetDistanceSqr(A1_5900, A0_5899:EEndPos(L2_5901)) > GetDistanceSqr(A1_5900, A0_5899:EEndPos(L7_5906)) then
              L2_5901 = L7_5906
            end
          end
        end
        if L3_5902 then
          return L2_5901
        end
        L7_5906 = L4_5903()
        for L6_5905, L7_5906 in L3_5902(L4_5903, L5_5904, L6_5905, L7_5906, L4_5903()) do
          if A0_5899.E:ValidTarget(L7_5906) and not A0_5899:HaveEBuff(L7_5906) and GetDistanceSqr(A1_5900, A0_5899:EEndPos(L7_5906)) < GetDistanceSqr(A1_5900, myHero) then
            if L2_5901 == nil then
              L2_5901 = L7_5906
            elseif GetDistanceSqr(A1_5900, A0_5899:EEndPos(L2_5901)) > GetDistanceSqr(A1_5900, A0_5899:EEndPos(L7_5906)) then
              L2_5901 = L7_5906
            end
          end
        end
        if L3_5902 then
          return L2_5901
        end
      end
    end
    L2_5901 = nil
    return L2_5901
  end
  function __Yasuo.EEndPos(A0_5907, A1_5908)
    if not _ENV[0] then
      return
    end
    return Vector(myHero) + Vector(Vector(A1_5908) - Vector(myHero)):normalized() * A0_5907.E.Range
  end
  function __Yasuo.HaveEBuff(A0_5909, A1_5910)
    local L2_5911, L4_5912, L5_5913, L6_5914, L7_5915, L8_5916, L9_5917, L10_5918, L11_5919, L12_5920, L13_5921, L14_5922, L15_5923, L16_5924, L17_5925, L18_5926, L19_5927, L20_5928, L21_5929, L22_5930, L23_5931, L24_5932, L25_5933, L26_5934, L27_5935, L28_5936, L29_5937, L30_5938, L31_5939, L32_5940, L33_5941, L34_5942, L35_5943, L36_5944, L37_5945, L38_5946, L39_5947, L40_5948, L41_5949, L42_5950, L43_5951, L44_5952, L45_5953, L46_5954, L47_5955, L48_5956, L49_5957, L50_5958, L51_5959, L52_5960, L53_5961, L54_5962, L55_5963, L56_5964, L57_5965, L58_5966, L59_5967, L60_5968, L61_5969, L62_5970, L63_5971, L64_5972, L65_5973, L66_5974, L67_5975, L68_5976, L69_5977, L70_5978, L71_5979, L72_5980, L73_5981, L74_5982, L75_5983, L76_5984, L77_5985, L78_5986, L79_5987, L80_5988, L81_5989, L82_5990, L83_5991, L84_5992, L85_5993, L86_5994, L87_5995, L88_5996, L89_5997, L90_5998, L91_5999, L92_6000, L93_6001, L94_6002, L95_6003, L96_6004, L97_6005, L98_6006, L99_6007, L100_6008, L101_6009, L102_6010, L103_6011, L104_6012, L105_6013, L106_6014, L107_6015, L108_6016, L109_6017, L110_6018, L111_6019, L112_6020, L113_6021, L114_6022, L115_6023, L116_6024, L117_6025, L118_6026, L119_6027, L120_6028, L121_6029, L122_6030, L123_6031, L124_6032, L125_6033, L126_6034, L127_6035, L128_6036, L129_6037, L130_6038, L131_6039, L132_6040, L133_6041, L134_6042, L135_6043, L136_6044, L137_6045, L138_6046, L139_6047, L140_6048, L141_6049, L142_6050, L143_6051, L144_6052, L145_6053, L146_6054, L147_6055, L148_6056, L149_6057, L150_6058, L151_6059, L152_6060, L153_6061, L154_6062, L155_6063, L156_6064, L157_6065, L158_6066, L159_6067, L160_6068, L161_6069, L162_6070, L163_6071, L164_6072, L165_6073, L166_6074, L167_6075, L168_6076, L169_6077, L170_6078, L171_6079, L172_6080, L173_6081, L174_6082, L175_6083, L176_6084, L177_6085, L178_6086, L179_6087, L180_6088, L181_6089, L182_6090, L183_6091, L184_6092, L185_6093, L186_6094, L187_6095, L188_6096, L189_6097, L190_6098, L191_6099, L192_6100, L193_6101, L194_6102, L195_6103, L196_6104, L197_6105, L198_6106, L199_6107, L200_6108, L201_6109, L202_6110, L203_6111, L204_6112, L205_6113, L206_6114, L207_6115, L208_6116, L209_6117, L210_6118, L211_6119, L212_6120, L213_6121, L214_6122, L215_6123, L216_6124, L217_6125, L218_6126, L219_6127, L220_6128, L221_6129, L222_6130, L223_6131, L224_6132, L225_6133, L226_6134, L227_6135, L228_6136, L229_6137, L230_6138, L231_6139, L232_6140, L233_6141, L234_6142, L235_6143, L236_6144, L237_6145, L238_6146, L239_6147, L240_6148, L241_6149, L242_6150, L243_6151, L244_6152, L245_6153, L246_6154, L247_6155, L248_6156, L249_6157, L250_6158, L251_6159, L252_6160, L253_6161, L254_6162
    L2_5911 = A0_5909.DashedUnits
    L4_5912 = A1_5910.networkID
    L2_5911 = L2_5911[L4_5912]
    L2_5911 = L2_5911 ~= nil
    return L2_5911
  end
  function __Yasuo.GetRange(A0_6163)
    if not _ENV[0] then
      return
    end
    if OrbwalkManager:IsCombo() then
      return A0_6163.Menu.TS.Combo
    end
    if OrbwalkManager:IsHarass() then
      return A0_6163.Menu.TS.Harass
    end
    return A0_6163.Menu.TS.Combo
  end
  function __Yasuo.GetComboDamage(A0_6164, A1_6165, A2_6166, A3_6167, A4_6168, A5_6169)
    local L6_6170, L7_6171
    L6_6170 = 0
    L6_6170 = _ENV[L6_6170]
    if not L6_6170 then
      return
    end
    L6_6170 = L6_6170 * L6_6170
    L6_6170 = 0
    L7_6171 = 0
    if ValidTarget(A1_6165) then
      if A2_6166 then
        L6_6170 = L6_6170 + A0_6164.Q:Damage(A1_6165) * 2
      end
      if A3_6167 then
      end
      if A4_6168 then
        L6_6170 = L6_6170 + A0_6164.E:Damage(A1_6165)
      end
      if A5_6169 then
        L6_6170 = L6_6170 + A0_6164.R:Damage(A1_6165)
      end
      L6_6170 = L6_6170 + getDmg("AD", A1_6165, myHero) * 2
    end
    L6_6170 = L6_6170 * A0_6164:GetOverkill()
    return L6_6170, L7_6171
  end
  function __Yasuo.GetOverkill(A0_6172)
    local L1_6173, L2_6174, L3_6175, L4_6176, L5_6177, L6_6178, L7_6179, L8_6180, L9_6181, L10_6182, L11_6183, L12_6184, L13_6185, L14_6186, L15_6187, L16_6188, L17_6189, L18_6190, L19_6191, L20_6192, L21_6193, L22_6194, L23_6195, L24_6196, L25_6197, L26_6198, L27_6199, L28_6200, L29_6201, L30_6202, L31_6203, L32_6204, L33_6205, L34_6206, L35_6207, L36_6208, L37_6209, L38_6210, L39_6211, L40_6212, L41_6213, L42_6214, L43_6215, L44_6216, L45_6217, L46_6218, L47_6219, L48_6220, L49_6221, L50_6222, L51_6223, L52_6224, L53_6225, L54_6226, L55_6227, L56_6228, L57_6229, L58_6230, L59_6231, L60_6232, L61_6233, L62_6234, L63_6235, L64_6236, L65_6237, L66_6238, L67_6239, L68_6240, L69_6241, L70_6242, L71_6243, L72_6244, L73_6245, L74_6246, L75_6247, L76_6248, L77_6249, L78_6250, L79_6251, L80_6252, L81_6253, L82_6254, L83_6255, L84_6256, L85_6257, L86_6258, L87_6259, L88_6260, L89_6261, L90_6262, L91_6263, L92_6264, L93_6265, L94_6266, L95_6267, L96_6268, L97_6269, L98_6270, L99_6271, L100_6272, L101_6273, L102_6274, L103_6275, L104_6276, L105_6277, L106_6278, L107_6279, L108_6280, L109_6281, L110_6282, L111_6283, L112_6284, L113_6285, L114_6286, L115_6287, L116_6288, L117_6289, L118_6290, L119_6291, L120_6292, L121_6293, L122_6294, L123_6295, L124_6296, L125_6297, L126_6298, L127_6299, L128_6300, L129_6301, L130_6302, L131_6303, L132_6304, L133_6305, L134_6306, L135_6307, L136_6308, L137_6309, L138_6310, L139_6311, L140_6312, L141_6313, L142_6314, L143_6315, L144_6316, L145_6317, L146_6318, L147_6319, L148_6320, L149_6321, L150_6322, L151_6323, L152_6324, L153_6325, L154_6326, L155_6327, L156_6328, L157_6329, L158_6330, L159_6331, L160_6332, L161_6333, L162_6334, L163_6335, L164_6336, L165_6337, L166_6338, L167_6339, L168_6340, L169_6341, L170_6342, L171_6343, L172_6344, L173_6345, L174_6346, L175_6347, L176_6348, L177_6349, L178_6350, L179_6351, L180_6352, L181_6353, L182_6354, L183_6355, L184_6356, L185_6357, L186_6358, L187_6359, L188_6360, L189_6361, L190_6362, L191_6363, L192_6364, L193_6365, L194_6366, L195_6367, L196_6368, L197_6369, L198_6370, L199_6371, L200_6372, L201_6373, L202_6374, L203_6375, L204_6376, L205_6377, L206_6378, L207_6379, L208_6380, L209_6381, L210_6382, L211_6383, L212_6384, L213_6385, L214_6386, L215_6387, L216_6388, L217_6389, L218_6390, L219_6391, L220_6392, L221_6393, L222_6394, L223_6395, L224_6396, L225_6397, L226_6398, L227_6399, L228_6400, L229_6401, L230_6402, L231_6403, L232_6404, L233_6405, L234_6406, L235_6407, L236_6408, L237_6409, L238_6410, L239_6411, L240_6412, L241_6413, L242_6414, L243_6415, L244_6416, L245_6417, L246_6418, L247_6419, L248_6420, L249_6421, L250_6422, L251_6423, L252_6424, L253_6425, L254_6426
    L1_6173 = A0_6172.Menu
    L1_6173 = L1_6173.General
    L1_6173 = L1_6173.Overkill
    L1_6173 = 100 + L1_6173
    L1_6173 = L1_6173 / 100
    return L1_6173
  end
  function __Yasuo.OnProcessSpell(A0_6427)
    if not _ENV[0] then
      return
    end
    if A0_6427.Menu == nil or not A0_6427.MenuLoaded then
      return
    end
    if not unit or not spell or not spell.name or not unit.isMe or spell.name:lower() == "yasuoqw" then
    elseif spell.name:lower() == "yasuoq2" then
    elseif spell.name:lower() == "yasuoq3" then
    elseif spell.name:lower() == "yasuodashwrapper" then
      if spell.target ~= nil and spell.target.networkID ~= nil and A0_6427.DashedUnits[spell.target.networkID] == nil then
        A0_6427.IsDashing = true
        A0_6427.DashedUnits[spell.target.networkID] = true
        DelayAction(function(A0_6428)
          local L1_6429, L2_6430, L3_6431, L4_6432, L5_6433, L6_6434, L7_6435, L8_6436, L9_6437, L10_6438, L11_6439, L12_6440, L13_6441, L14_6442, L15_6443, L16_6444, L17_6445, L18_6446, L19_6447, L20_6448, L21_6449, L22_6450, L23_6451, L24_6452, L25_6453, L26_6454, L27_6455, L28_6456, L29_6457, L30_6458, L31_6459, L32_6460, L33_6461, L34_6462, L35_6463, L36_6464, L37_6465, L38_6466, L39_6467, L40_6468, L41_6469, L42_6470, L43_6471, L44_6472, L45_6473, L46_6474, L47_6475, L48_6476, L49_6477, L50_6478, L51_6479, L52_6480, L53_6481, L54_6482, L55_6483, L56_6484, L57_6485, L58_6486, L59_6487, L60_6488, L61_6489, L62_6490, L63_6491, L64_6492, L65_6493, L66_6494, L67_6495, L68_6496, L69_6497, L70_6498, L71_6499, L72_6500, L73_6501, L74_6502, L75_6503, L76_6504, L77_6505, L78_6506, L79_6507, L80_6508, L81_6509, L82_6510, L83_6511, L84_6512, L85_6513, L86_6514, L87_6515, L88_6516, L89_6517, L90_6518, L91_6519, L92_6520, L93_6521, L94_6522, L95_6523, L96_6524, L97_6525, L98_6526, L99_6527, L100_6528, L101_6529, L102_6530, L103_6531, L104_6532, L105_6533, L106_6534, L107_6535, L108_6536, L109_6537, L110_6538, L111_6539, L112_6540, L113_6541, L114_6542, L115_6543, L116_6544, L117_6545, L118_6546, L119_6547, L120_6548, L121_6549, L122_6550, L123_6551, L124_6552, L125_6553, L126_6554, L127_6555, L128_6556, L129_6557, L130_6558, L131_6559, L132_6560, L133_6561, L134_6562, L135_6563, L136_6564, L137_6565, L138_6566, L139_6567, L140_6568, L141_6569, L142_6570, L143_6571, L144_6572, L145_6573, L146_6574, L147_6575, L148_6576, L149_6577, L150_6578, L151_6579, L152_6580, L153_6581, L154_6582, L155_6583, L156_6584, L157_6585, L158_6586, L159_6587, L160_6588, L161_6589, L162_6590, L163_6591, L164_6592, L165_6593, L166_6594, L167_6595, L168_6596, L169_6597, L170_6598, L171_6599, L172_6600, L173_6601, L174_6602, L175_6603, L176_6604, L177_6605, L178_6606, L179_6607, L180_6608, L181_6609, L182_6610, L183_6611, L184_6612, L185_6613, L186_6614, L187_6615, L188_6616, L189_6617, L190_6618, L191_6619, L192_6620, L193_6621, L194_6622, L195_6623, L196_6624, L197_6625, L198_6626, L199_6627, L200_6628, L201_6629, L202_6630, L203_6631, L204_6632, L205_6633, L206_6634, L207_6635, L208_6636, L209_6637, L210_6638, L211_6639, L212_6640, L213_6641, L214_6642, L215_6643, L216_6644, L217_6645, L218_6646, L219_6647, L220_6648, L221_6649, L222_6650, L223_6651, L224_6652, L225_6653, L226_6654, L227_6655, L228_6656, L229_6657, L230_6658, L231_6659, L232_6660, L233_6661, L234_6662, L235_6663, L236_6664, L237_6665, L238_6666, L239_6667, L240_6668, L241_6669, L242_6670, L243_6671, L244_6672, L245_6673, L246_6674, L247_6675, L248_6676, L249_6677, L250_6678, L251_6679, L252_6680, L253_6681, L254_6682
          if A0_6428 ~= nil then
            L1_6429 = A0_6427.DashedUnits
            L2_6430 = A0_6428.networkID
            L1_6429 = L1_6429[L2_6430]
            if L1_6429 ~= nil then
              L1_6429 = A0_6427.DashedUnits
              L2_6430 = A0_6428.networkID
              L1_6429[L2_6430] = nil
            end
          end
        end, 11 - (A0_6427.E:GetSpellData() ~= nil and A0_6427.E:GetSpellData().level ~= nil and A0_6427.E:GetSpellData().level or 0), {
          spell.target
        })
      end
    elseif spell.name:lower():find("recall") then
    end
  end
  function __Yasuo.OnApplyBuff(A0_6683, A1_6684, A2_6685, A3_6686)
    if not _ENV[0] then
      return
    end
    if A2_6685 and A1_6684 and A3_6686 and A3_6686.name and A2_6685.team and A3_6686.type then
      if A3_6686.type == 29 and A2_6685.team ~= myHero.team then
        A0_6683.KnockedUnits[A2_6685.networkID] = true
      elseif A3_6686.name:lower() ~= "yasuodashscalar" or A2_6685.isMe then
      end
    end
  end
  function __Yasuo.OnRemoveBuff(A0_6687, A1_6688, A2_6689)
    if not _ENV[0] then
      return
    end
    if A1_6688 and A2_6689 and A2_6689.name and A2_6689.name and A1_6688.team and A2_6689.type then
      if A2_6689.type == 29 and A1_6688.team ~= myHero.team then
        A0_6687.KnockedUnits[A1_6688.networkID] = nil
      elseif A2_6689.name:lower() ~= "yasuodashscalar" or A1_6688.isMe then
      end
    end
  end
  function __Yasuo.OnCreateObj(A0_6690, A1_6691)
    if not _ENV[0] then
      return
    end
    if A0_6690.Menu == nil or not A0_6690.MenuLoaded then
      return
    end
    if A1_6691 and A1_6691.name then
      if A1_6691.name:lower():find("q_wind_ready_buff") and GetDistanceSqr(myHero, A1_6691) < 6400 then
        A0_6690.QState = 3
        A0_6690.Q3Time = os.clock()
      elseif A1_6691.name:lower():find("yasuo_base_e_dash_hit") and A0_6690.IsDashing then
        A0_6690.IsDashing = true
      end
    end
  end
  function __Yasuo.OnDeleteObj(A0_6692, A1_6693)
    if not _ENV[0] then
      return
    end
    if A0_6692.Menu == nil or not A0_6692.MenuLoaded then
      return
    end
    if A1_6693 and A1_6693.name then
      if A1_6693.name:lower():find("q_wind_ready_buff") and GetDistanceSqr(myHero, A1_6693) < 6400 then
        A0_6692.QState = 1
      elseif A1_6693.name:lower():find("yasuo_base_e_dash_hit") and A0_6692.IsDashing then
        A0_6692.IsDashing = false
      end
    end
  end
  class("__Diana")
  function __Diana.__init(A0_6694)
    local L1_6695, L2_6696, L3_6697, L4_6698, L5_6699, L6_6700, L7_6701, L8_6702, L9_6703, L10_6704, L11_6705, L12_6706, L13_6707, L14_6708, L15_6709, L16_6710, L17_6711, L18_6712, L19_6713, L20_6714, L21_6715, L22_6716, L23_6717, L24_6718, L25_6719, L26_6720, L27_6721, L28_6722, L29_6723, L30_6724, L31_6725, L32_6726, L33_6727, L34_6728, L35_6729, L36_6730, L37_6731, L38_6732, L39_6733, L40_6734, L41_6735, L42_6736, L43_6737, L44_6738, L45_6739, L46_6740, L47_6741, L48_6742, L49_6743, L50_6744, L51_6745, L52_6746, L53_6747, L54_6748, L55_6749, L56_6750, L57_6751, L58_6752, L59_6753, L60_6754, L61_6755, L62_6756, L63_6757, L64_6758, L65_6759, L66_6760, L67_6761, L68_6762, L69_6763, L70_6764, L71_6765, L72_6766, L73_6767, L74_6768, L75_6769, L76_6770, L77_6771, L78_6772, L79_6773, L80_6774, L81_6775, L82_6776, L83_6777, L84_6778, L85_6779, L86_6780, L87_6781, L88_6782, L89_6783, L90_6784, L91_6785, L92_6786, L93_6787, L94_6788, L95_6789, L96_6790, L97_6791, L98_6792, L99_6793, L100_6794, L101_6795, L102_6796, L103_6797, L104_6798, L105_6799, L106_6800, L107_6801, L108_6802, L109_6803, L110_6804, L111_6805, L112_6806, L113_6807, L114_6808, L115_6809, L116_6810, L117_6811, L118_6812, L119_6813, L120_6814, L121_6815, L122_6816, L123_6817, L124_6818, L125_6819, L126_6820, L127_6821, L128_6822, L129_6823, L130_6824, L131_6825, L132_6826, L133_6827, L134_6828, L135_6829, L136_6830, L137_6831, L138_6832, L139_6833, L140_6834, L141_6835, L142_6836, L143_6837, L144_6838, L145_6839, L146_6840, L147_6841, L148_6842, L149_6843, L150_6844, L151_6845, L152_6846, L153_6847, L154_6848, L155_6849, L156_6850, L157_6851, L158_6852, L159_6853, L160_6854, L161_6855, L162_6856, L163_6857, L164_6858, L165_6859, L166_6860, L167_6861, L168_6862, L169_6863, L170_6864, L171_6865, L172_6866, L173_6867, L174_6868, L175_6869, L176_6870, L177_6871, L178_6872, L179_6873, L180_6874, L181_6875, L182_6876, L183_6877, L184_6878, L185_6879, L186_6880, L187_6881, L188_6882, L189_6883, L190_6884, L191_6885, L192_6886, L193_6887, L194_6888, L195_6889, L196_6890, L197_6891, L198_6892, L199_6893, L200_6894, L201_6895, L202_6896, L203_6897, L204_6898, L205_6899, L206_6900, L207_6901, L208_6902, L209_6903, L210_6904, L211_6905, L212_6906, L213_6907, L214_6908, L215_6909, L216_6910, L217_6911, L218_6912, L219_6913, L220_6914, L221_6915, L222_6916, L223_6917, L224_6918, L225_6919, L226_6920, L227_6921, L228_6922, L229_6923, L230_6924, L231_6925, L232_6926, L233_6927, L234_6928, L235_6929, L236_6930, L237_6931, L238_6932, L239_6933, L240_6934, L241_6935, L242_6936, L243_6937, L244_6938, L245_6939, L246_6940, L247_6941, L248_6942, L249_6943, L250_6944, L251_6945, L252_6946, L253_6947, L254_6948
    A0_6694.ScriptName = "Diana The Dark Eclipse"
    A0_6694.Author = "Da Vinci"
    A0_6694.MenuLoaded = false
    A0_6694.Menu = nil
    A0_6694.TS = nil
    A0_6694.ObjectName = "_q_tar.troy"
    L1_6695 = {}
    A0_6694.Objects = L1_6695
    L1_6695 = {}
    A0_6694.Markeds = L1_6695
  end
  function __Diana.TargetHaveQ(A0_6949, A1_6950)
    if not _ENV[0] then
      return
    end
    if IsValidTarget(A1_6950) then
      return A0_6949.Markeds[A1_6950.networkID] ~= nil
    end
    return false
  end
  function __Diana.OnTick(A0_6951)
    if not _ENV[0] then
      return
    end
    if myHero.dead or A0_6951.Menu == nil or not A0_6951.MenuLoaded then
      return
    end
    A0_6951.TS.range = A0_6951.Menu.TS.Combo
    A0_6951.TS:update()
    A0_6951:KillSteal()
    A0_6951.Q.Width = A0_6951.Q.Width1
    if A0_6951.Q.Object ~= nil then
      A0_6951.Q.Range = math.huge
      if os.clock() - A0_6951.Q.LastObjectVectorTime > 0 then
        if A0_6951.Q.LastObjectVector ~= nil then
          A0_6951.Q.Speed = GetDistance(A0_6951.Q.Object, A0_6951.Q.LastObjectVector) / (os.clock() - A0_6951.Q.LastObjectVectorTime)
        end
        A0_6951.Q.LastObjectVector = Vector(A0_6951.Q.Object)
        A0_6951.Q.LastObjectVectorTime = os.clock()
      end
      A0_6951.Q.Source = A0_6951.Q.Object
      A0_6951.Q.Delay = 0
    else
      A0_6951.Q.Source = myHero
      A0_6951.Q.Delay = A0_6951.Q.Delay1
      A0_6951.Q.Speed = A0_6951.Q.Speed1
      A0_6951.Q.Range = A0_6951.Q.Range1
    end
    if OrbwalkManager:IsCombo() then
      A0_6951:Combo()
    elseif OrbwalkManager:IsHarass() then
      A0_6951:Harass()
    elseif OrbwalkManager:IsClear() then
      A0_6951:Clear()
    elseif OrbwalkManager:IsLastHit() then
      A0_6951:LastHit()
    end
    if A0_6951.Menu.Keys.HarassToggle then
      A0_6951:Harass()
    end
  end
  function __Diana.KillSteal(A0_6952)
    local L1_6953, L2_6954, L3_6955, L4_6956, L5_6957
    if not L1_6953 then
      return
    end
    L5_6957 = L2_6954()
    for L4_6956, L5_6957 in L1_6953(L2_6954, L3_6955, L4_6956, L5_6957, L2_6954()) do
      if IsValidTarget(L5_6957, A0_6952.TS.range) and L5_6957.health > 0 and PercentageHealth(L5_6957) <= 35 then
        if GetBestCombo(L5_6957, A0_6952) >= L5_6957.health then
          if A0_6952.Menu.KillSteal.Q and (GetBestCombo(L5_6957, A0_6952) or A0_6952.Q:Damage(L5_6957) > L5_6957.health) then
            A0_6952:CastQ(L5_6957)
          end
          if A0_6952.Menu.KillSteal.W and (GetBestCombo(L5_6957, A0_6952) or A0_6952.W:Damage(L5_6957) > L5_6957.health) then
            A0_6952.W:Cast(L5_6957)
          end
          if A0_6952.Menu.KillSteal.E and (GetBestCombo(L5_6957, A0_6952) or A0_6952.E:Damage(L5_6957) > L5_6957.health) then
            A0_6952.E:Cast(L5_6957)
          end
          if A0_6952.Menu.KillSteal.R and (GetBestCombo(L5_6957, A0_6952) or A0_6952.R:Damage(L5_6957) > L5_6957.health) then
            A0_6952:CastR(L5_6957)
          end
        end
        if A0_6952.Menu.KillSteal.Ignite and A3_3:IsReady() and A3_3:Damage(L5_6957) > L5_6957.health then
          A3_3:Cast(L5_6957)
        end
      end
    end
  end
  function __Diana.GapClose(A0_6958, A1_6959)
    local L2_6960, L3_6961, L4_6962, L5_6963, L6_6964, L7_6965
    L2_6960 = 0
    L2_6960 = _ENV[L2_6960]
    if not L2_6960 then
      return
    end
    L2_6960 = L2_6960 * L2_6960
    L2_6960 = IsValidTarget
    L2_6960 = L2_6960(L3_6961)
    if L2_6960 then
      L2_6960 = A0_6958.R
      L2_6960 = L2_6960.IsReady
      L2_6960 = L2_6960(L3_6961)
      if L2_6960 then
        L2_6960 = GetDistanceSqr
        L2_6960 = L2_6960(L3_6961, L4_6962)
        if L2_6960 > L3_6961 then
          L2_6960 = nil
          L7_6965 = L4_6962()
          for L6_6964, L7_6965 in L3_6961(L4_6962, L5_6963, L6_6964, L7_6965, L4_6962()) do
            if A0_6958.R:ValidTarget(L7_6965) and A1_6959.networkID ~= L7_6965.networkID and A0_6958.Q:Damage(A1_6959) < L7_6965.health then
              if L2_6960 == nil then
                L2_6960 = L7_6965
              elseif GetDistanceSqr(A1_6959, L2_6960) > GetDistanceSqr(A1_6959, L7_6965) then
                L2_6960 = L7_6965
              end
            end
          end
          if L3_6961 then
            L6_6964 = A1_6959
            if L3_6961 > L4_6962 then
              L3_6961(L4_6962, L5_6963)
              L6_6964 = false
              L3_6961(L4_6962, L5_6963, L6_6964)
              return
            end
          end
          L3_6961(L4_6962)
          for L6_6964, L7_6965 in L3_6961(L4_6962) do
            if A0_6958.R:ValidTarget(L7_6965) and A1_6959.networkID ~= L7_6965.networkID and A0_6958.Q:Damage(A1_6959) < L7_6965.health then
              if L2_6960 == nil then
                L2_6960 = L7_6965
              elseif GetDistanceSqr(A1_6959, L2_6960) > GetDistanceSqr(A1_6959, L7_6965) then
                L2_6960 = L7_6965
              end
            end
          end
          if L3_6961 then
            L6_6964 = A1_6959
            if L3_6961 > L4_6962 then
              L3_6961(L4_6962, L5_6963)
              L6_6964 = false
              L3_6961(L4_6962, L5_6963, L6_6964)
              return
            end
          end
        end
      end
    end
  end
  function __Diana.Combo(A0_6966)
    local L1_6967, L2_6968, L3_6969, L4_6970, L5_6971, L6_6972, L7_6973, L8_6974, L9_6975, L10_6976, L11_6977
    L1_6967 = 0
    L1_6967 = _ENV[L1_6967]
    if not L1_6967 then
      return
    end
    L1_6967 = L1_6967 * L1_6967
    L1_6967 = A0_6966.TS
    L1_6967 = L1_6967.target
    L2_6968 = IsValidTarget
    L3_6969 = L1_6967
    L2_6968 = L2_6968(L3_6969)
    if L2_6968 then
      L2_6968 = GetBestCombo
      L3_6969 = L1_6967
      L4_6970 = A0_6966
      L6_6972 = L2_6968(L3_6969, L4_6970)
      if L7_6973 then
        if L7_6973 then
          if L7_6973 >= L8_6974 then
            L7_6973(L8_6974, L9_6975)
          end
        end
      end
      if L7_6973 > 0 then
        if L7_6973 <= L8_6974 then
          if L7_6973 then
            L7_6973(L8_6974)
          end
        end
      end
      if L7_6973 then
        L7_6973(L8_6974, L9_6975)
      end
      if L7_6973 then
        L7_6973(L8_6974, L9_6975)
      end
      if L7_6973 then
        L7_6973(L8_6974, L9_6975)
      end
      if L7_6973 then
        if L7_6973 then
          if L7_6973 >= 25 then
            L11_6977 = L8_6974()
            for L10_6976, L11_6977 in L7_6973(L8_6974, L9_6975, L10_6976, L11_6977, L8_6974()) do
              if A0_6966:TargetHaveQ(L11_6977) and PercentageMana() >= 25 then
                A0_6966:CastRSpell(L11_6977)
              end
            end
          end
        end
      end
      if L7_6973 > 1 then
        if L7_6973 == 2 then
          if L6_6972 > L7_6973 then
            L7_6973(L8_6974, L9_6975)
          end
        elseif L7_6973 == 3 then
          L7_6973(L8_6974, L9_6975)
        end
      end
      if L7_6973 > 1 then
        if L7_6973 == 2 then
          L7_6973(L8_6974, L9_6975)
        elseif L7_6973 == 3 then
          L7_6973(L8_6974, L9_6975)
        end
      end
    end
  end
  function __Diana.Harass(A0_6978)
    local L1_6979
    L1_6979 = 0
    L1_6979 = _ENV[L1_6979]
    if not L1_6979 then
      return
    end
    L1_6979 = L1_6979 * L1_6979
    L1_6979 = PercentageMana
    L1_6979 = L1_6979()
    if L1_6979 >= A0_6978.Menu.Harass.Mana then
      L1_6979 = A0_6978.TS
      L1_6979 = L1_6979.target
      if IsValidTarget(L1_6979) then
        if A0_6978.Menu.Harass.Q then
          A0_6978:CastQ(L1_6979)
        end
        if A0_6978.Menu.Harass.W then
          A0_6978.W:Cast(L1_6979)
        end
        if A0_6978.Menu.Harass.E then
          A0_6978.E:Cast(L1_6979)
        end
      end
    end
  end
  function __Diana.Clear(A0_6980)
    local L1_6981, L2_6982, L3_6983, L4_6984, L5_6985
    if not L1_6981 then
      return
    end
    if L1_6981 >= L2_6982 then
      L4_6984 = A0_6980.Menu
      L4_6984 = L4_6984.LaneClear
      L4_6984 = L4_6984.Q
      L3_6983.NumberOfHits = L4_6984
      L1_6981(L2_6982, L3_6983)
      L4_6984 = A0_6980.Menu
      L4_6984 = L4_6984.LaneClear
      L4_6984 = L4_6984.W
      L3_6983.NumberOfHits = L4_6984
      L1_6981(L2_6982, L3_6983)
      if L1_6981 > 1 then
        L4_6984 = A0_6980.Menu
        L4_6984 = L4_6984.LaneClear
        L4_6984 = L4_6984.E
        L3_6983.NumberOfHits = L4_6984
        L1_6981(L2_6982, L3_6983)
      end
      L1_6981(L2_6982)
    end
    if L1_6981 then
      L1_6981(L2_6982)
    end
    if L1_6981 then
      L1_6981(L2_6982)
      for L4_6984, L5_6985 in L1_6981(L2_6982) do
        A0_6980:CastR(L5_6985)
        break
      end
    end
    if L1_6981 then
      L1_6981(L2_6982)
    end
    if L1_6981 then
      L1_6981(L2_6982)
    end
  end
  function __Diana.LastHit(A0_6986)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_6986.Menu.LastHit.Mana then
      A0_6986.Q:LastHit({
        Mode = A0_6986.Menu.LastHit.Q
      })
      A0_6986.E:LastHit({
        Mode = A0_6986.Menu.LastHit.E
      })
    end
  end
  function __Diana.CastQ(A0_6987, A1_6988)
    local L2_6989
    L2_6989 = A0_6987.Q
    L2_6989 = L2_6989.IsReady
    L2_6989 = L2_6989(L2_6989)
    if L2_6989 then
      L2_6989 = A0_6987.Q
      L2_6989 = L2_6989.ValidTarget
      L2_6989 = L2_6989(L2_6989, A1_6988)
      if L2_6989 then
        L2_6989 = A0_6987.Q
        L2_6989 = L2_6989.GetPrediction
        L2_6989 = L2_6989(L2_6989, A1_6988, {
          Width = A0_6987.Q.Width2
        })
        if L2_6989 and L2_6989(L2_6989, A1_6988, {
          Width = A0_6987.Q.Width2
        }) then
          A0_6987.Q:CastToVector(L2_6989)
          A0_6987.Q.Target = A1_6988
        end
      end
    end
  end
  function __Diana.CastRSpell(A0_6990, A1_6991)
    if A0_6990.R:ValidTarget(A1_6991) and A0_6990.R:IsReady() then
      A0_6990.R:Cast(A1_6991)
    end
  end
  function __Diana.ComboRQ(A0_6992, A1_6993)
    local L2_6994, L3_6995, L4_6996
    L2_6994 = 0
    L2_6994 = _ENV[L2_6994]
    if not L2_6994 then
      return
    end
    L2_6994 = L2_6994 * L2_6994
    L2_6994 = A0_6992.R
    L3_6995 = L2_6994
    L2_6994 = L2_6994.ValidTarget
    L4_6996 = A1_6993
    L2_6994 = L2_6994(L3_6995, L4_6996)
    if L2_6994 then
      L2_6994 = A0_6992.R
      L3_6995 = L2_6994
      L2_6994 = L2_6994.IsReady
      L2_6994 = L2_6994(L3_6995)
      if L2_6994 then
        L2_6994 = A0_6992.Q
        L3_6995 = L2_6994
        L2_6994 = L2_6994.IsReady
        L2_6994 = L2_6994(L3_6995)
        if L2_6994 then
          L3_6995 = A0_6992
          L2_6994 = A0_6992.CastRSpell
          L4_6996 = A1_6993
          L2_6994(L3_6995, L4_6996)
          L2_6994 = A0_6992.Q
          L3_6995 = L2_6994
          L2_6994 = L2_6994.CastToVector
          L4_6996 = A1_6993
          L2_6994(L3_6995, L4_6996)
        end
      else
        L2_6994 = A0_6992.R
        L2_6994 = L2_6994.IsDashing
        if L2_6994 then
          L2_6994 = GetDistance
          L3_6995 = myHero
          L4_6996 = A0_6992.R
          L4_6996 = L4_6996.StartVector
          L2_6994 = L2_6994(L3_6995, L4_6996)
          L3_6995 = os
          L3_6995 = L3_6995.clock
          L3_6995 = L3_6995()
          L4_6996 = A0_6992.R
          L4_6996 = L4_6996.LastCastTime
          L3_6995 = L3_6995 - L4_6996
          L2_6994 = L2_6994 / L3_6995
          L3_6995 = print
          L4_6996 = L2_6994
          L3_6995(L4_6996)
          L3_6995 = GetDistance
          L4_6996 = myHero
          L3_6995 = L3_6995(L4_6996, A0_6992.R.Target)
          L3_6995 = L3_6995 / L2_6994
          L4_6996 = A0_6992.Q
          L4_6996 = L4_6996.Delay
          L4_6996 = L4_6996 + GetDistance(myHero, A1_6993) / A0_6992.Q.Speed
          print("TimeToArriveR: " .. L3_6995 .. ". TimeToArriveQ: " .. L4_6996)
          A0_6992.Q:CastToVector(A1_6993)
        end
      end
    end
  end
  function __Diana.CastR(A0_6997, A1_6998, A2_6999)
    local L3_7000, L4_7001, L5_7002, L6_7003, L7_7004, L8_7005, L9_7006, L10_7007, L11_7008, L12_7009, L13_7010
    L3_7000 = 0
    L3_7000 = _ENV[L3_7000]
    if not L3_7000 then
      return
    end
    L3_7000 = L3_7000 * L3_7000
    L3_7000 = A0_6997.R
    L4_7001 = L3_7000
    L3_7000 = L3_7000.ValidTarget
    L5_7002 = A1_6998
    L3_7000 = L3_7000(L4_7001, L5_7002)
    if L3_7000 then
      L3_7000 = A0_6997.R
      L4_7001 = L3_7000
      L3_7000 = L3_7000.IsReady
      L3_7000 = L3_7000(L4_7001)
      if L3_7000 then
        L3_7000 = GetBestCombo
        L4_7001 = A1_6998
        L5_7002 = A0_6997
        L7_7004 = L3_7000(L4_7001, L5_7002)
        L8_7005 = true
        if A2_6999 ~= nil then
          L9_7006 = type
          L10_7007 = A2_6999
          L9_7006 = L9_7006(L10_7007)
          if L9_7006 == "boolean" then
            L8_7005 = A2_6999
          end
        end
        L10_7007 = A0_6997
        L9_7006 = A0_6997.TargetHaveQ
        L11_7008 = A1_6998
        L9_7006 = L9_7006(L10_7007, L11_7008)
        if not L9_7006 then
          L9_7006 = A0_6997.Q
          L10_7007 = L9_7006
          L9_7006 = L9_7006.IsReady
          L9_7006 = L9_7006(L10_7007)
          if L9_7006 then
            L10_7007 = A0_6997
            L9_7006 = A0_6997.CastQ
            L11_7008 = A1_6998
            L9_7006(L10_7007, L11_7008)
            return
          end
        end
        L10_7007 = A0_6997
        L9_7006 = A0_6997.TargetHaveQ
        L11_7008 = A1_6998
        L9_7006 = L9_7006(L10_7007, L11_7008)
        if not L9_7006 then
          L9_7006 = A0_6997.Q
          L10_7007 = L9_7006
          L9_7006 = L9_7006.IsReady
          L9_7006 = L9_7006(L10_7007)
          if not L9_7006 then
            L9_7006 = A0_6997.Q
            L10_7007 = L9_7006
            L9_7006 = L9_7006.GetSpellData
            L9_7006 = L9_7006(L10_7007)
            if L9_7006 ~= nil then
              L9_7006 = A0_6997.Q
              L10_7007 = L9_7006
              L9_7006 = L9_7006.GetSpellData
              L9_7006 = L9_7006(L10_7007)
              L9_7006 = L9_7006.currentCd
              if L9_7006 ~= nil then
                L9_7006 = A0_6997.Q
                L10_7007 = L9_7006
                L9_7006 = L9_7006.GetSpellData
                L9_7006 = L9_7006(L10_7007)
                L9_7006 = L9_7006.currentCd
                if L9_7006 < 3 then
                  return
                end
              end
            end
          end
        end
        L10_7007 = A0_6997
        L9_7006 = A0_6997.TargetHaveQ
        L11_7008 = A1_6998
        L9_7006 = L9_7006(L10_7007, L11_7008)
        if not L9_7006 then
          L9_7006 = os
          L9_7006 = L9_7006.clock
          L9_7006 = L9_7006()
          L10_7007 = A0_6997.Q
          L10_7007 = L10_7007.LastCastTime
          L9_7006 = L9_7006 - L10_7007
          if L9_7006 < 0.28 then
            return
          end
        end
        L10_7007 = A0_6997
        L9_7006 = A0_6997.TargetHaveQ
        L11_7008 = A1_6998
        L9_7006 = L9_7006(L10_7007, L11_7008)
        if not L9_7006 then
          L9_7006 = A0_6997.Q
          L9_7006 = L9_7006.Object
          if L9_7006 ~= nil then
            L9_7006 = GetDistanceSqr
            L10_7007 = myHero
            L11_7008 = A0_6997.Q
            L11_7008 = L11_7008.Object
            L9_7006 = L9_7006(L10_7007, L11_7008)
            L10_7007 = GetDistanceSqr
            L11_7008 = myHero
            L12_7009 = A1_6998
            L10_7007 = L10_7007(L11_7008, L12_7009)
            if L9_7006 < L10_7007 then
              L9_7006 = GetDistance
              L10_7007 = A0_6997.Q
              L10_7007 = L10_7007.Object
              L11_7008 = A1_6998
              L9_7006 = L9_7006(L10_7007, L11_7008)
              L10_7007 = A0_6997.Q
              L10_7007 = L10_7007.Speed
              L9_7006 = L9_7006 / L10_7007
              L10_7007 = A0_6997.Q
              L11_7008 = L10_7007
              L10_7007 = L10_7007.GetPrediction
              L12_7009 = A1_6998
              L13_7010 = {}
              L13_7010.TypeOfPrediction = "VPrediction"
              L11_7008 = L10_7007(L11_7008, L12_7009, L13_7010)
              L12_7009 = A0_6997.R
              L12_7009 = L12_7009.Delay
              L13_7010 = GetDistance
              L13_7010 = L13_7010(myHero, A1_6998)
              L13_7010 = L13_7010 / A0_6997.R.Speed
              L12_7009 = L12_7009 + L13_7010
              L13_7010 = VectorPointProjectionOnLineSegment
              L13_7010 = L13_7010(A0_6997.Q.Object, A0_6997.Q.EndPos, L10_7007)
              if L10_7007 and L13_7010(A0_6997.Q.Object, A0_6997.Q.EndPos, L10_7007) and L11_7008 and GetDistanceSqr(L13_7010, L10_7007) < math.pow(A0_6997.Q.Width + A1_6998.boundingRadius, 2) and L9_7006 > L12_7009 then
                if A0_6997.Menu.General.Developer then
                  print("Misaya Combo")
                end
              else
                do return end
                L9_7006 = A1_6998.health
                if L7_7004 < L9_7006 then
                  return
                end
                L9_7006 = A1_6998.health
                if L7_7004 >= L9_7006 and L6_7003 and L8_7005 then
                  L9_7006 = A0_6997.Menu
                  L9_7006 = L9_7006.General
                  L9_7006 = L9_7006.Developer
                  if L9_7006 then
                    L9_7006 = print
                    L10_7007 = "Killable"
                    L9_7006(L10_7007)
                  end
                else
                  return
                end
              end
            end
          end
        end
        L10_7007 = A0_6997
        L9_7006 = A0_6997.CastRSpell
        L11_7008 = A1_6998
        L9_7006(L10_7007, L11_7008)
      end
    end
  end
  function __Diana.OnProcessSpell(A0_7011, A1_7012, A2_7013)
    if not _ENV[0] then
      return
    end
    if A0_7011.Menu == nil or not A0_7011.MenuLoaded then
      return
    end
    if A1_7012 and A2_7013 and A2_7013.name and A1_7012.isMe then
      if A2_7013.name:lower():find("dianateleport") then
        A0_7011.R.Target = A2_7013.target
        A0_7011.R.IsDashing = true
        A0_7011.R.StartVector = Vector(A1_7012)
        A0_7011.R.LastCastTime = os.clock()
        DelayAction(function()
          local L1_7014, L2_7015, L3_7016, L4_7017, L5_7018, L6_7019, L7_7020, L8_7021, L9_7022, L10_7023, L11_7024, L12_7025, L13_7026, L14_7027, L15_7028, L16_7029, L17_7030, L18_7031, L19_7032, L20_7033, L21_7034, L22_7035, L23_7036, L24_7037, L25_7038, L26_7039, L27_7040, L28_7041, L29_7042, L30_7043, L31_7044, L32_7045, L33_7046, L34_7047, L35_7048, L36_7049, L37_7050, L38_7051, L39_7052, L40_7053, L41_7054, L42_7055, L43_7056, L44_7057, L45_7058, L46_7059, L47_7060, L48_7061, L49_7062, L50_7063, L51_7064, L52_7065, L53_7066, L54_7067, L55_7068, L56_7069, L57_7070, L58_7071, L59_7072, L60_7073, L61_7074, L62_7075, L63_7076, L64_7077, L65_7078, L66_7079, L67_7080, L68_7081, L69_7082, L70_7083, L71_7084, L72_7085, L73_7086, L74_7087, L75_7088, L76_7089, L77_7090, L78_7091, L79_7092, L80_7093, L81_7094, L82_7095, L83_7096, L84_7097, L85_7098, L86_7099, L87_7100, L88_7101, L89_7102, L90_7103, L91_7104, L92_7105, L93_7106, L94_7107, L95_7108, L96_7109, L97_7110, L98_7111, L99_7112, L100_7113, L101_7114, L102_7115, L103_7116, L104_7117, L105_7118, L106_7119, L107_7120, L108_7121, L109_7122, L110_7123, L111_7124, L112_7125, L113_7126, L114_7127, L115_7128, L116_7129, L117_7130, L118_7131, L119_7132, L120_7133, L121_7134, L122_7135, L123_7136, L124_7137, L125_7138, L126_7139, L127_7140, L128_7141, L129_7142, L130_7143, L131_7144, L132_7145, L133_7146, L134_7147, L135_7148, L136_7149, L137_7150, L138_7151, L139_7152, L140_7153, L141_7154, L142_7155, L143_7156, L144_7157, L145_7158, L146_7159, L147_7160, L148_7161, L149_7162, L150_7163, L151_7164, L152_7165, L153_7166, L154_7167, L155_7168, L156_7169, L157_7170, L158_7171, L159_7172, L160_7173, L161_7174, L162_7175, L163_7176, L164_7177, L165_7178, L166_7179, L167_7180, L168_7181, L169_7182, L170_7183, L171_7184, L172_7185, L173_7186, L174_7187, L175_7188, L176_7189, L177_7190, L178_7191, L179_7192, L180_7193, L181_7194, L182_7195, L183_7196, L184_7197, L185_7198, L186_7199, L187_7200, L188_7201, L189_7202, L190_7203, L191_7204, L192_7205, L193_7206, L194_7207, L195_7208, L196_7209, L197_7210, L198_7211, L199_7212, L200_7213, L201_7214, L202_7215, L203_7216, L204_7217, L205_7218, L206_7219, L207_7220, L208_7221, L209_7222, L210_7223, L211_7224, L212_7225, L213_7226, L214_7227, L215_7228, L216_7229, L217_7230, L218_7231, L219_7232, L220_7233, L221_7234, L222_7235, L223_7236, L224_7237, L225_7238, L226_7239, L227_7240, L228_7241, L229_7242, L230_7243, L231_7244, L232_7245, L233_7246, L234_7247, L235_7248, L236_7249, L237_7250, L238_7251, L239_7252, L240_7253, L241_7254, L242_7255, L243_7256, L244_7257, L245_7258, L246_7259, L247_7260, L248_7261, L249_7262, L250_7263, L251_7264, L252_7265, L253_7266, L254_7267
          L1_7014 = A0_7011.R
          L1_7014.Target = nil
        end, A0_7011.R.Delay + GetDistance(myHero, A1_7012) / A0_7011.R.Speed + 0.2)
      elseif A2_7013.name:lower():lower():find("dianaarc") then
        A0_7011.Q.EndPos = Vector(A2_7013.endPos)
      end
    end
  end
  function __Diana.OnApplyBuff(A0_7268, A1_7269, A2_7270, A3_7271)
    if A2_7270 and A1_7269 and A3_7271 and A1_7269.isMe and A3_7271.name:lower():find("dianamoonlight") then
      A0_7268.Markeds[A2_7270.networkID] = true
    end
  end
  function __Diana.OnRemoveBuff(A0_7272, A1_7273, A2_7274)
    if A1_7273 and A2_7274 and A2_7274.name:lower():find("dianamoonlight") then
      A0_7272.Markeds[A1_7273.networkID] = nil
    end
  end
  function __Diana.OnCreateObj(A0_7275, A1_7276)
    if A0_7275.Menu == nil or not A0_7275.MenuLoaded then
      return
    end
    if not A1_7276 or not A1_7276.name or A1_7276.name:lower() == "diana_base_r_cas.troy" then
    end
  end
  function __Diana.OnDeleteObj(A0_7277, A1_7278)
    local L2_7279, L3_7280, L4_7281, L5_7282
    if not L2_7279 then
      return
    end
    if L2_7279 ~= nil then
    elseif not L2_7279 then
      return
    end
    if A1_7278 then
      if L2_7279 then
        if L2_7279 > 0 then
          for L5_7282 = #L2_7279, 1, -1 do
            if A0_7277.Objects[L5_7282].networkID == A1_7278.networkID then
              table.remove(A0_7277.Objects, L5_7282)
              break
            end
          end
        end
        if L2_7279 == "diana_base_r_cas.troy" then
          if L2_7279 then
            L2_7279.IsDashing = false
            L2_7279.Target = nil
          end
        end
      end
    end
  end
  function __Diana.OnCastSpell(A0_7283, A1_7284, A2_7285, A3_7286, A4_7287)
    local L5_7288, L6_7289, L7_7290, L8_7291
    if not L5_7288 then
      return
    end
    if A1_7284 == L5_7288 then
      if L5_7288 then
        L5_7288.EndPos = L6_7289
      end
    elseif A1_7284 == L5_7288 then
      if L5_7288 then
        if L5_7288 then
          if L5_7288 > 0 then
            for L8_7291 = #L5_7288, 1, -1 do
              if (A0_7283.Objects[L8_7291].x - A4_7287.x) * (A0_7283.Objects[L8_7291].x - A4_7287.x) + (A0_7283.Objects[L8_7291].z - A4_7287.z) * (A0_7283.Objects[L8_7291].z - A4_7287.z) < 100 then
                table.remove(A0_7283.Objects, L8_7291)
                break
              end
            end
          end
        end
      end
    end
  end
  function __Diana.GetComboDamage(A0_7292, A1_7293, A2_7294, A3_7295, A4_7296, A5_7297)
    local L6_7298, L7_7299
    L6_7298 = 0
    L6_7298 = _ENV[L6_7298]
    if not L6_7298 then
      return
    end
    L6_7298 = L6_7298 * L6_7298
    L6_7298 = 0
    L7_7299 = 0
    if IsValidTarget(A1_7293) then
      if A2_7294 then
        L6_7298 = L6_7298 + A0_7292.Q:Damage(A1_7293)
        L7_7299 = L7_7299 + A0_7292.Q:Mana()
        if A5_7297 then
          L6_7298 = L6_7298 + A0_7292.R:Damage(A1_7293)
          L7_7299 = L7_7299 + A0_7292.R:Mana()
        end
      end
      if A3_7295 then
        L6_7298 = L6_7298 + A0_7292.W:Damage(A1_7293)
        L7_7299 = L7_7299 + A0_7292.W:Mana()
      end
      if A4_7296 then
        L6_7298 = L6_7298 + A0_7292.E:Damage(A1_7293)
        L7_7299 = L7_7299 + A0_7292.E:Mana()
      end
      if A5_7297 then
        L6_7298 = L6_7298 + A0_7292.R:Damage(A1_7293)
        L7_7299 = L7_7299 + A0_7292.R:Mana()
      end
      if A3_3:IsReady() then
        L6_7298 = L6_7298 + A3_3:Damage(A1_7293)
      end
      L6_7298 = L6_7298 + getDmg("AD", A1_7293, myHero) * 2
    end
    L6_7298 = L6_7298 * A0_7292:GetOverkill()
    return L6_7298, L7_7299
  end
  function __Diana.GetOverkill(A0_7300)
    local L1_7301, L2_7302, L3_7303, L4_7304, L5_7305, L6_7306, L7_7307, L8_7308, L9_7309, L10_7310, L11_7311, L12_7312, L13_7313, L14_7314, L15_7315, L16_7316, L17_7317, L18_7318, L19_7319, L20_7320, L21_7321, L22_7322, L23_7323, L24_7324, L25_7325, L26_7326, L27_7327, L28_7328, L29_7329, L30_7330, L31_7331, L32_7332, L33_7333, L34_7334, L35_7335, L36_7336, L37_7337, L38_7338, L39_7339, L40_7340, L41_7341, L42_7342, L43_7343, L44_7344, L45_7345, L46_7346, L47_7347, L48_7348, L49_7349, L50_7350, L51_7351, L52_7352, L53_7353, L54_7354, L55_7355, L56_7356, L57_7357, L58_7358, L59_7359, L60_7360, L61_7361, L62_7362, L63_7363, L64_7364, L65_7365, L66_7366, L67_7367, L68_7368, L69_7369, L70_7370, L71_7371, L72_7372, L73_7373, L74_7374, L75_7375, L76_7376, L77_7377, L78_7378, L79_7379, L80_7380, L81_7381, L82_7382, L83_7383, L84_7384, L85_7385, L86_7386, L87_7387, L88_7388, L89_7389, L90_7390, L91_7391, L92_7392, L93_7393, L94_7394, L95_7395, L96_7396, L97_7397, L98_7398, L99_7399, L100_7400, L101_7401, L102_7402, L103_7403, L104_7404, L105_7405, L106_7406, L107_7407, L108_7408, L109_7409, L110_7410, L111_7411, L112_7412, L113_7413, L114_7414, L115_7415, L116_7416, L117_7417, L118_7418, L119_7419, L120_7420, L121_7421, L122_7422, L123_7423, L124_7424, L125_7425, L126_7426, L127_7427, L128_7428, L129_7429, L130_7430, L131_7431, L132_7432, L133_7433, L134_7434, L135_7435, L136_7436, L137_7437, L138_7438, L139_7439, L140_7440, L141_7441, L142_7442, L143_7443, L144_7444, L145_7445, L146_7446, L147_7447, L148_7448, L149_7449, L150_7450, L151_7451, L152_7452, L153_7453, L154_7454, L155_7455, L156_7456, L157_7457, L158_7458, L159_7459, L160_7460, L161_7461, L162_7462, L163_7463, L164_7464, L165_7465, L166_7466, L167_7467, L168_7468, L169_7469, L170_7470, L171_7471, L172_7472, L173_7473, L174_7474, L175_7475, L176_7476, L177_7477, L178_7478, L179_7479, L180_7480, L181_7481, L182_7482, L183_7483, L184_7484, L185_7485, L186_7486, L187_7487, L188_7488, L189_7489, L190_7490, L191_7491, L192_7492, L193_7493, L194_7494, L195_7495, L196_7496, L197_7497, L198_7498, L199_7499, L200_7500, L201_7501, L202_7502, L203_7503, L204_7504, L205_7505, L206_7506, L207_7507, L208_7508, L209_7509, L210_7510, L211_7511, L212_7512, L213_7513, L214_7514, L215_7515, L216_7516, L217_7517, L218_7518, L219_7519, L220_7520, L221_7521, L222_7522, L223_7523, L224_7524, L225_7525, L226_7526, L227_7527, L228_7528, L229_7529, L230_7530, L231_7531, L232_7532, L233_7533, L234_7534, L235_7535, L236_7536, L237_7537, L238_7538, L239_7539, L240_7540, L241_7541, L242_7542, L243_7543, L244_7544, L245_7545, L246_7546, L247_7547, L248_7548, L249_7549, L250_7550, L251_7551, L252_7552, L253_7553, L254_7554
    L1_7301 = A0_7300.Menu
    L1_7301 = L1_7301.General
    L1_7301 = L1_7301.Overkill
    L1_7301 = 100 + L1_7301
    L1_7301 = L1_7301 / 100
    return L1_7301
  end
  class("__Azir")
  function __Azir.__init(A0_7555)
    local L1_7556, L2_7557, L3_7558, L4_7559, L5_7560, L6_7561, L7_7562, L8_7563, L9_7564, L10_7565, L11_7566, L12_7567, L13_7568, L14_7569, L15_7570, L16_7571, L17_7572, L18_7573, L19_7574, L20_7575, L21_7576, L22_7577, L23_7578, L24_7579, L25_7580, L26_7581, L27_7582, L28_7583, L29_7584, L30_7585, L31_7586, L32_7587, L33_7588, L34_7589, L35_7590, L36_7591, L37_7592, L38_7593, L39_7594, L40_7595, L41_7596, L42_7597, L43_7598, L44_7599, L45_7600, L46_7601, L47_7602, L48_7603, L49_7604, L50_7605, L51_7606, L52_7607, L53_7608, L54_7609, L55_7610, L56_7611, L57_7612, L58_7613, L59_7614, L60_7615, L61_7616, L62_7617, L63_7618, L64_7619, L65_7620, L66_7621, L67_7622, L68_7623, L69_7624, L70_7625, L71_7626, L72_7627, L73_7628, L74_7629, L75_7630, L76_7631, L77_7632, L78_7633, L79_7634, L80_7635, L81_7636, L82_7637, L83_7638, L84_7639, L85_7640, L86_7641, L87_7642, L88_7643, L89_7644, L90_7645, L91_7646, L92_7647, L93_7648, L94_7649, L95_7650, L96_7651, L97_7652, L98_7653, L99_7654, L100_7655, L101_7656, L102_7657, L103_7658, L104_7659, L105_7660, L106_7661, L107_7662, L108_7663, L109_7664, L110_7665, L111_7666, L112_7667, L113_7668, L114_7669, L115_7670, L116_7671, L117_7672, L118_7673, L119_7674, L120_7675, L121_7676, L122_7677, L123_7678, L124_7679, L125_7680, L126_7681, L127_7682, L128_7683, L129_7684, L130_7685, L131_7686, L132_7687, L133_7688, L134_7689, L135_7690, L136_7691, L137_7692, L138_7693, L139_7694, L140_7695, L141_7696, L142_7697, L143_7698, L144_7699, L145_7700, L146_7701, L147_7702, L148_7703, L149_7704, L150_7705, L151_7706, L152_7707, L153_7708, L154_7709, L155_7710, L156_7711, L157_7712, L158_7713, L159_7714, L160_7715, L161_7716, L162_7717, L163_7718, L164_7719, L165_7720, L166_7721, L167_7722, L168_7723, L169_7724, L170_7725, L171_7726, L172_7727, L173_7728, L174_7729, L175_7730, L176_7731, L177_7732, L178_7733, L179_7734, L180_7735, L181_7736, L182_7737, L183_7738, L184_7739, L185_7740, L186_7741, L187_7742, L188_7743, L189_7744, L190_7745, L191_7746, L192_7747, L193_7748, L194_7749, L195_7750, L196_7751, L197_7752, L198_7753, L199_7754, L200_7755, L201_7756, L202_7757, L203_7758, L204_7759, L205_7760, L206_7761, L207_7762, L208_7763, L209_7764, L210_7765, L211_7766, L212_7767, L213_7768, L214_7769, L215_7770, L216_7771, L217_7772, L218_7773, L219_7774, L220_7775, L221_7776, L222_7777, L223_7778, L224_7779, L225_7780, L226_7781, L227_7782, L228_7783, L229_7784, L230_7785, L231_7786, L232_7787, L233_7788, L234_7789, L235_7790, L236_7791, L237_7792, L238_7793, L239_7794, L240_7795, L241_7796, L242_7797, L243_7798, L244_7799, L245_7800, L246_7801, L247_7802, L248_7803, L249_7804, L250_7805, L251_7806, L252_7807, L253_7808, L254_7809
    L1_7556 = 0
    L1_7556 = _ENV[L1_7556]
    if not L1_7556 then
      return
    end
    L1_7556 = L1_7556 * L1_7556
    A0_7555.ScriptName = "The Mighty Dove"
    A0_7555.Author = "Da Vinci"
    A0_7555.MenuLoaded = false
    A0_7555.Menu = nil
    A0_7555.TS = nil
    L1_7556 = {}
    A0_7555.Soldiers = L1_7556
    A0_7555.SoldierRange = 315
    A0_7555.ValidRange = 950
    L1_7556 = myHero
    L1_7556 = L1_7556.attackSpeed
    L1_7556 = 0.23 * L1_7556
    L1_7556 = 1 / L1_7556
    A0_7555.SoldierBaseWindUpTime = L1_7556
    L1_7556 = myHero
    L1_7556 = L1_7556.attackSpeed
    L1_7556 = 3 * L1_7556
    L1_7556 = 1 / L1_7556
    A0_7555.SoldierBaseAnimationTime = L1_7556
    A0_7555.SoldierIsAttacking = false
    A0_7555.LastSoldierAttack = 0
    A0_7555.LastSoldierWindUpTime = 0.23
    A0_7555.LastSoldierAnimationTime = 1
    A0_7555.BaseWindUpTime = 3
    A0_7555.BaseAnimationTime = 0.665
    L1_7556 = math
    L1_7556 = L1_7556.huge
    A0_7555.ProjectileSpeed = L1_7556
    A0_7555.DataUpdated = false
    A0_7555.LimitHealth = -1
    A0_7555.KillableMinion = nil
    A0_7555.AlmostKillableMinion = nil
    A0_7555.MeanwhileMinion = nil
    A0_7555.JungleMinion = nil
    A0_7555.LastFarm = 0
    A0_7555.LastClock = 0
    A0_7555.LastCastTime = 0
    A0_7555.LastTarget = nil
    A0_7555.IsAttacking = false
    L1_7556 = myHero
    A0_7555.InsecPos = L1_7556
    A0_7555.InsecPosTime = 0
    A0_7555.InsecTarget = nil
    A0_7555.InsecTargetTime = 0
    A0_7555.InsecTS = nil
    A0_7555.InsecResetTime = 10
    L1_7556 = {}
    L1_7556.Sent = false
    L1_7556.Packet = nil
    A0_7555.Move = L1_7556
    L1_7556 = {}
    L1_7556.Sent = false
    L1_7556.Packet = nil
    A0_7555.AA = L1_7556
  end
  function __Azir.OnTick(A0_7810)
    local L1_7811, L2_7812, L3_7813, L4_7814, L5_7815, L6_7816, L7_7817
    if not L1_7811 then
      return
    end
    if L1_7811 ~= nil then
    elseif not L1_7811 then
      return
    end
    L1_7811(L2_7812)
    L1_7811(L2_7812)
    L1_7811(L2_7812)
    if L1_7811 ~= nil then
      if L1_7811 <= L2_7812 then
        if L1_7811 then
          L1_7811.target = L2_7812
        end
      else
        A0_7810.InsecTarget = nil
      end
    end
    if L1_7811 > L2_7812 then
      if L1_7811 then
        A0_7810.InsecPos = nil
        if L1_7811 == nil then
          L7_7817 = L2_7812()
          for L4_7814, L5_7815 in L1_7811(L2_7812, L3_7813, L4_7814, L5_7815, L6_7816, L7_7817, L2_7812()) do
            if L5_7815 ~= nil then
              L6_7816 = GetDistanceSqr
              L7_7817 = myHero
              L6_7816 = L6_7816(L7_7817, L5_7815)
              L7_7817 = math
              L7_7817 = L7_7817.pow
              L7_7817 = L7_7817(L5_7815.range * 1.5, 2)
              if L6_7816 < L7_7817 then
                L6_7816 = L5_7815.team
                L7_7817 = myHero
                L7_7817 = L7_7817.team
                if L6_7816 == L7_7817 then
                  L6_7816 = Vector
                  L7_7817 = L5_7815
                  L6_7816 = L6_7816(L7_7817)
                  A0_7810.InsecPos = L6_7816
                end
              end
            end
          end
        end
        if L1_7811 == nil then
          L7_7817 = L4_7814()
          for L6_7816, L7_7817 in L3_7813(L4_7814, L5_7815, L6_7816, L7_7817, L4_7814()) do
            if L7_7817.valid and L7_7817.health > 0 and not L7_7817.dead and GetDistanceSqr(L2_7812, L7_7817) <= math.pow(A0_7810.InsecTS.range * 1.5, 2) then
              if L1_7811 == nil then
              else
              end
            end
          end
          if L1_7811 ~= nil then
            A0_7810.InsecPos = L3_7813
          end
        end
        if L1_7811 == nil then
          A0_7810.InsecPos = L1_7811
        end
      end
    end
    A0_7810.Target = L1_7811
    if not L1_7811 then
      L1_7811(L2_7812)
    else
      if L1_7811 then
        A0_7810.IsAttacking = false
      end
      L1_7811(L2_7812)
      if not L1_7811 then
        if L1_7811 == nil then
          L1_7811.Sent = true
          L1_7811(L2_7812, L3_7813, L4_7814)
          L1_7811.Sent = false
        end
      end
    end
    if L1_7811 then
      L1_7811(L2_7812)
      return
    end
    L1_7811(L2_7812)
    if L1_7811 then
      if not L1_7811 then
        L1_7811(L2_7812)
        if L1_7811 then
          L1_7811(L2_7812, L3_7813)
        end
      end
    elseif L1_7811 then
      if not L1_7811 then
        if L1_7811 then
          L1_7811(L2_7812, L3_7813)
        end
      end
      L1_7811(L2_7812)
      A0_7810.KillableMinion = L1_7811
      A0_7810.AlmostKillableMinion = L1_7811
      L1_7811(L2_7812)
      if L1_7811 then
        L1_7811(L2_7812, L3_7813)
      end
      if L1_7811 then
        return
      end
      if L1_7811 then
        L1_7811(L2_7812, L3_7813)
      end
    elseif L1_7811 then
      L1_7811(L2_7812)
      L1_7811(L2_7812)
      A0_7810.KillableMinion = L1_7811
      A0_7810.AlmostKillableMinion = L1_7811
      A0_7810.MeanwhileMinion = L1_7811
      A0_7810.JungleMinion = L1_7811
      L1_7811(L2_7812)
      if L1_7811 then
        L1_7811(L2_7812, L3_7813)
      end
      if L1_7811 then
        return
      end
      if L1_7811 then
        L1_7811(L2_7812, L3_7813)
      end
      if L1_7811 then
        L1_7811(L2_7812, L3_7813)
      end
    elseif L1_7811 then
      L1_7811(L2_7812)
      A0_7810.KillableMinion = L1_7811
      L1_7811(L2_7812)
      if L1_7811 then
        L1_7811(L2_7812, L3_7813)
      end
    end
    if L1_7811 then
      L1_7811(L2_7812)
      if L3_7813 and L1_7811 then
        L3_7813(L4_7814, L5_7815)
      end
    end
    if L1_7811 then
      if L1_7811 then
        if not L2_7812 and L1_7811 ~= nil then
          if L2_7812 < L3_7813 then
            L2_7812(L3_7813, L4_7814)
          end
        elseif L2_7812 > 0 then
          if L2_7812 then
            if L2_7812 > L3_7813 then
              L2_7812(L3_7813, L4_7814)
            end
          end
        elseif L2_7812 == 0 then
          if L2_7812 then
            L6_7816 = myHero
            L3_7813(L4_7814, L5_7815)
          end
        end
      end
      L1_7811(L2_7812, L3_7813, L4_7814)
    end
  end
  function __Azir.OnWndMsg(A0_7818, A1_7819, A2_7820)
    if not _ENV[0] then
      return
    end
    if A0_7818.Menu == nil or not A0_7818.MenuLoaded then
      return
    end
    if A1_7819 == WM_LBUTTONDOWN then
      if GetTarget() ~= nil and GetDistanceSqr(GetTarget(), mousePos) < math.pow(200, 2) then
        A0_7818.InsecTarget = GetTarget()
        A0_7818.InsecTargetTime = os.clock()
        return
      end
      if IsValidTarget(A0_7818.InsecTS.target) then
        A0_7818.InsecPos = Vector(mousePos)
        A0_7818.InsecPosTime = os.clock()
        return
      end
    end
  end
  function __Azir.Insec(A0_7821)
    local L1_7822, L2_7823, L3_7824, L4_7825, L5_7826, L6_7827, L7_7828, L8_7829, L9_7830
    L1_7822 = 0
    L1_7822 = _ENV[L1_7822]
    if not L1_7822 then
      return
    end
    L1_7822 = L1_7822 * L1_7822
    L1_7822 = A0_7821.InsecTS
    L1_7822 = L1_7822.target
    L2_7823 = IsValidTarget
    L3_7824 = L1_7822
    L4_7825 = A0_7821.InsecTS
    L4_7825 = L4_7825.range
    L2_7823 = L2_7823(L3_7824, L4_7825)
    if L2_7823 then
      L2_7823 = A0_7821.InsecPos
      if L2_7823 ~= nil then
        L2_7823 = 150
        L3_7824 = L1_7822
        L4_7825 = true
        if L3_7824 ~= nil and L4_7825 then
          L5_7826 = A0_7821.R
          L6_7827 = L5_7826
          L5_7826 = L5_7826.IsReady
          L5_7826 = L5_7826(L6_7827)
          if L5_7826 then
            L5_7826 = Vector
            L6_7827 = L3_7824
            L5_7826 = L5_7826(L6_7827)
            L6_7827 = Vector
            L7_7828 = Vector
            L8_7829 = A0_7821.InsecPos
            L7_7828 = L7_7828(L8_7829)
            L8_7829 = Vector
            L9_7830 = L3_7824
            L8_7829 = L8_7829(L9_7830)
            L7_7828 = L7_7828 - L8_7829
            L6_7827 = L6_7827(L7_7828)
            L7_7828 = L6_7827
            L6_7827 = L6_7827.normalized
            L6_7827 = L6_7827(L7_7828)
            L7_7828 = A0_7821.R
            L7_7828 = L7_7828.Range
            L6_7827 = L6_7827 * L7_7828
            L6_7827 = L6_7827 * 1.5
            L5_7826 = L5_7826 + L6_7827
            L6_7827 = Vector
            L7_7828 = L3_7824
            L6_7827 = L6_7827(L7_7828)
            L7_7828 = Vector
            L8_7829 = Vector
            L9_7830 = L3_7824
            L8_7829 = L8_7829(L9_7830)
            L9_7830 = Vector
            L9_7830 = L9_7830(L5_7826)
            L8_7829 = L8_7829 - L9_7830
            L7_7828 = L7_7828(L8_7829)
            L8_7829 = L7_7828
            L7_7828 = L7_7828.normalized
            L7_7828 = L7_7828(L8_7829)
            L7_7828 = L7_7828 * L2_7823
            L6_7827 = L6_7827 + L7_7828
            L8_7829 = A0_7821
            L7_7828 = A0_7821.CanMove
            L7_7828 = L7_7828(L8_7829)
            if L7_7828 then
              L7_7828 = myHero
              L8_7829 = L7_7828
              L7_7828 = L7_7828.MoveTo
              L9_7830 = L6_7827.x
              L7_7828(L8_7829, L9_7830, L6_7827.z)
            end
            L7_7828 = A0_7821.Soldiers
            L7_7828 = #L7_7828
            if L7_7828 > 0 then
              L7_7828 = VectorPointProjectionOnLine
              L8_7829 = myHero
              L9_7830 = L1_7822
              L7_7828 = L7_7828(L8_7829, L9_7830, L5_7826)
              L8_7829 = GetDistanceSqr
              L9_7830 = L7_7828
              L8_7829 = L8_7829(L9_7830, L5_7826)
              L9_7830 = math
              L9_7830 = L9_7830.pow
              L9_7830 = L9_7830(A0_7821.R.Range / 2, 2)
              if L8_7829 < L9_7830 then
                L8_7829 = GetDistanceSqr
                L9_7830 = myHero
                L8_7829 = L8_7829(L9_7830, L5_7826)
                L9_7830 = GetDistanceSqr
                L9_7830 = L9_7830(L1_7822, L5_7826)
                if L8_7829 > L9_7830 then
                  L8_7829 = A0_7821.R
                  L9_7830 = L8_7829
                  L8_7829 = L8_7829.ValidTarget
                  L8_7829 = L8_7829(L9_7830, L1_7822)
                  if L8_7829 then
                    L8_7829 = A0_7821.R
                    L9_7830 = L8_7829
                    L8_7829 = L8_7829.CastToVector
                    L8_7829(L9_7830, L1_7822)
                  end
                end
              end
              L9_7830 = A0_7821
              L8_7829 = A0_7821.NearestSoldier
              L8_7829 = L8_7829(L9_7830, L6_7827)
              if L8_7829 ~= nil then
                L9_7830 = GetDistanceSqr
                L9_7830 = L9_7830(L8_7829, L6_7827)
                if L9_7830 > math.pow(L2_7823, 2) then
                  L9_7830 = Vector
                  L9_7830 = L9_7830(L6_7827)
                  L9_7830 = L9_7830 + Vector(Vector(L6_7827) - Vector(L3_7824)):normalized():perpendicular() * GetDistance(VectorPointProjectionOnLine(L6_7827, myHero, L3_7824), L3_7824) * 2
                  if A0_7821.Q:IsReady() and A0_7821.R:IsReady() and GetDistanceSqr(myHero, L9_7830) < math.pow(A0_7821.Q.Range - L2_7823, 2) and GetDistanceSqr(L9_7830, L6_7827) > math.pow(A0_7821.E.Width, 2) then
                    A0_7821.Q:CastToVector(L9_7830)
                  end
                else
                  L9_7830 = A0_7821.R
                  L9_7830 = L9_7830.IsReady
                  L9_7830 = L9_7830(L9_7830)
                  if L9_7830 then
                    L9_7830 = A0_7821.CastE
                    L9_7830(A0_7821, L8_7829)
                    L9_7830 = Vector
                    L9_7830 = L9_7830(A0_7821.InsecPos)
                    A0_7821.InsecPos = L9_7830
                    L9_7830 = os
                    L9_7830 = L9_7830.clock
                    L9_7830 = L9_7830()
                    A0_7821.InsecPosTime = L9_7830
                  end
                end
              end
            else
              L7_7828 = GetDistanceSqr
              L8_7829 = myHero
              L9_7830 = L6_7827
              L7_7828 = L7_7828(L8_7829, L9_7830)
              L8_7829 = math
              L8_7829 = L8_7829.pow
              L9_7830 = A0_7821.Q
              L9_7830 = L9_7830.Range
              L9_7830 = L9_7830 - L2_7823
              L8_7829 = L8_7829(L9_7830, 2)
              if L7_7828 < L8_7829 then
                L7_7828 = A0_7821.W
                L8_7829 = L7_7828
                L7_7828 = L7_7828.CastToVector
                L9_7830 = L6_7827
                L7_7828(L8_7829, L9_7830)
              end
            end
          end
        end
      end
    end
  end
  function __Azir.KillSteal(A0_7831)
    local L1_7832, L2_7833, L3_7834, L4_7835, L5_7836
    if not L1_7832 then
      return
    end
    L5_7836 = L2_7833()
    for L4_7835, L5_7836 in L1_7832(L2_7833, L3_7834, L4_7835, L5_7836, L2_7833()) do
      if IsValidTarget(L5_7836, A0_7831.TS.range) and L5_7836.health > 0 and PercentageHealth(L5_7836) <= 35 then
        if GetBestCombo(L5_7836, A0_7831) >= L5_7836.health then
          if A0_7831.Menu.KillSteal.UseQ and (GetBestCombo(L5_7836, A0_7831) or A0_7831.Q:Damage(L5_7836) * (0.75 + 0.25 * #A0_7831.Soldiers) > L5_7836.health) then
            A0_7831:CastQ(L5_7836)
          end
          if A0_7831.Menu.KillSteal.UseW and (GetBestCombo(L5_7836, A0_7831) or A0_7831.W:Damage(L5_7836) * (0.75 + 0.25 * #A0_7831.Soldiers) > L5_7836.health) then
            A0_7831:CastW(L5_7836)
            A0_7831:Attack(L5_7836)
          end
          if A0_7831.Menu.KillSteal.UseE and (GetBestCombo(L5_7836, A0_7831) or A0_7831.E:Damage(L5_7836) > L5_7836.health) then
            A0_7831:CastE(L5_7836)
          end
          if A0_7831.Menu.KillSteal.UseR and (GetBestCombo(L5_7836, A0_7831) or A0_7831.R:Damage(L5_7836) > L5_7836.health) then
            A0_7831:CastR(L5_7836)
          end
        end
        if A0_7831.Menu.KillSteal.UseIgnite and A3_3:IsReady() and A3_3:Damage(L5_7836) > L5_7836.health then
          A3_3:Cast(L5_7836)
        end
      end
    end
  end
  function __Azir.Combo(A0_7837)
    local L1_7838, L2_7839, L3_7840, L4_7841, L5_7842, L6_7843, L7_7844, L8_7845, L9_7846, L10_7847, L11_7848, L12_7849, L13_7850, L14_7851, L15_7852, L16_7853
    L1_7838 = 0
    L1_7838 = _ENV[L1_7838]
    if not L1_7838 then
      return
    end
    L1_7838 = L1_7838 * L1_7838
    L1_7838 = A0_7837.TS
    L1_7838 = L1_7838.target
    L2_7839 = IsValidTarget
    L3_7840 = L1_7838
    L2_7839 = L2_7839(L3_7840)
    if L2_7839 then
      L2_7839 = GetBestCombo
      L3_7840 = L1_7838
      L4_7841 = A0_7837
      L6_7843 = L2_7839(L3_7840, L4_7841)
      L8_7845 = A0_7837
      L7_7844 = A0_7837.SoldiersInRange
      L8_7845 = L7_7844(L8_7845, L9_7846)
      if L9_7846 then
        if L9_7846 then
          if L9_7846 >= L10_7847 then
            L9_7846(L10_7847, L11_7848)
          end
        end
      end
      if L9_7846 > 0 then
        if L9_7846 <= L10_7847 then
          if L9_7846 then
            L9_7846(L10_7847)
          end
        end
      end
      if L9_7846 > 1 then
        if L9_7846 > 0 then
          if L9_7846 == 2 then
            if L7_7844 then
              if L2_7839 then
              end
            elseif L6_7843 > L9_7846 then
              L9_7846(L10_7847, L11_7848)
            end
          elseif L9_7846 == 3 then
            L9_7846(L10_7847, L11_7848)
          end
        end
      end
      if L9_7846 then
        if L9_7846 > L10_7847 then
          L9_7846(L10_7847, L11_7848)
        end
      end
      if L9_7846 > 1 then
        if L9_7846 > 0 then
          if L9_7846 == 2 then
            if L9_7846 > L10_7847 then
              if L9_7846 >= L10_7847 then
                L16_7853 = L11_7848()
                if L9_7846 ~= nil and L10_7847 > 0 then
                  L12_7849 = A0_7837
                  L13_7850 = L9_7846
                  L11_7848(L12_7849, L13_7850)
                else
                  L12_7849 = A0_7837
                  L13_7850 = L1_7838
                  L11_7848(L12_7849, L13_7850)
                end
              end
            end
          elseif L9_7846 == 3 then
            L12_7849 = A0_7837
            L13_7850 = L1_7838
            L16_7853 = L11_7848(L12_7849, L13_7850)
            L9_7846(L10_7847, L11_7848, L12_7849, L13_7850, L14_7851, L15_7852, L16_7853, L11_7848(L12_7849, L13_7850))
          end
        end
      end
      if L9_7846 and L5_7842 then
        if L9_7846 > L10_7847 then
          L12_7849 = myHero
          if L9_7846 < 3 then
            L9_7846(L10_7847, L11_7848)
          end
        end
      end
      if L9_7846 > 0 then
        if L9_7846 < 100 then
          if L9_7846 <= L10_7847 then
            L9_7846(L10_7847, L11_7848)
          end
        end
      end
      if L9_7846 > 0 then
        if L9_7846 then
          L16_7853 = L10_7847()
          for L12_7849, L13_7850 in L9_7846(L10_7847, L11_7848, L12_7849, L13_7850, L14_7851, L15_7852, L16_7853, L10_7847()) do
            L14_7851 = A0_7837.R
            L15_7852 = L14_7851
            L14_7851 = L14_7851.GetPrediction
            L16_7853 = L13_7850
            L16_7853 = L14_7851(L15_7852, L16_7853, {
              TypeOfPrediction = "VPrediction"
            })
            if L16_7853 and type(L16_7853) == "number" and L16_7853 >= A0_7837.Menu.Combo.UseR3 and L15_7852 then
              A0_7837.R:CastToVector(L14_7851)
            end
          end
        end
      end
    end
  end
  function __Azir.Harass(A0_7854)
    local L1_7855, L2_7856, L3_7857, L4_7858, L5_7859, L6_7860, L7_7861, L8_7862, L9_7863
    L1_7855 = 0
    L1_7855 = _ENV[L1_7855]
    if not L1_7855 then
      return
    end
    L1_7855 = L1_7855 * L1_7855
    L1_7855 = PercentageMana
    L1_7855 = L1_7855()
    L2_7856 = A0_7854.Menu
    L2_7856 = L2_7856.Harass
    L2_7856 = L2_7856.Mana
    if L1_7855 >= L2_7856 then
      L1_7855 = A0_7854.TS
      L1_7855 = L1_7855.target
      L2_7856 = IsValidTarget
      L3_7857 = L1_7855
      L2_7856 = L2_7856(L3_7857)
      if L2_7856 then
        L2_7856 = GetBestCombo
        L3_7857 = L1_7855
        L4_7858 = A0_7854
        L6_7860 = L2_7856(L3_7857, L4_7858)
        L8_7862 = A0_7854
        L7_7861 = A0_7854.SoldiersInRange
        L9_7863 = L1_7855
        L8_7862 = L7_7861(L8_7862, L9_7863)
        L9_7863 = A0_7854.Menu
        L9_7863 = L9_7863.Harass
        L9_7863 = L9_7863.UseQ
        if L9_7863 > 1 then
          L9_7863 = A0_7854.Soldiers
          L9_7863 = #L9_7863
          if L9_7863 > 0 then
            L9_7863 = A0_7854.Menu
            L9_7863 = L9_7863.Harass
            L9_7863 = L9_7863.UseQ
            if L9_7863 == 2 then
              if not L7_7861 then
                L9_7863 = A0_7854.CastQ
                L9_7863(A0_7854, L1_7855)
              end
            else
              L9_7863 = A0_7854.Menu
              L9_7863 = L9_7863.Harass
              L9_7863 = L9_7863.UseQ
              if L9_7863 == 3 then
                L9_7863 = A0_7854.CastQ
                L9_7863(A0_7854, L1_7855)
              end
            end
          end
        end
        L9_7863 = A0_7854.Menu
        L9_7863 = L9_7863.Harass
        L9_7863 = L9_7863.UseW
        if L9_7863 then
          L9_7863 = A0_7854.Menu
          L9_7863 = L9_7863.Harass
          L9_7863 = L9_7863.Soldiers
          if L9_7863 > #A0_7854.Soldiers then
            L9_7863 = A0_7854.CastW
            L9_7863(A0_7854, L1_7855)
          end
        end
        L9_7863 = A0_7854.Menu
        L9_7863 = L9_7863.Harass
        L9_7863 = L9_7863.UseE
        if L9_7863 > 1 then
          L9_7863 = A0_7854.Soldiers
          L9_7863 = #L9_7863
          if L9_7863 > 0 then
            L9_7863 = A0_7854.Menu
            L9_7863 = L9_7863.Harass
            L9_7863 = L9_7863.UseE
            if L9_7863 == 2 then
              L9_7863 = L1_7855.health
              if L6_7860 > L9_7863 then
                L9_7863 = PercentageHealth
                L9_7863 = L9_7863(myHero)
                if L9_7863 > PercentageHealth(L1_7855) then
                  L9_7863 = A0_7854.BestHitE
                  L9_7863 = L9_7863(A0_7854, GetEnemyHeroes())
                  if L9_7863 ~= nil and 0 < L9_7863(A0_7854, GetEnemyHeroes()) then
                    A0_7854:CastE(L9_7863)
                  else
                    A0_7854:CastE(L1_7855)
                  end
                end
              end
            else
              L9_7863 = A0_7854.Menu
              L9_7863 = L9_7863.Harass
              L9_7863 = L9_7863.UseE
              if L9_7863 == 3 then
                L9_7863 = A0_7854.CastE
                L9_7863(A0_7854, A0_7854:NearestSoldier(L1_7855))
              end
            end
          end
        end
      end
    end
  end
  function __Azir.Clear(A0_7864)
    local L1_7865
    L1_7865 = 0
    L1_7865 = _ENV[L1_7865]
    if not L1_7865 then
      return
    end
    L1_7865 = L1_7865 * L1_7865
    L1_7865 = os
    L1_7865 = L1_7865.clock
    L1_7865 = L1_7865()
    L1_7865 = L1_7865 - A0_7864.LastFarm
    if L1_7865 > 0.2 then
      L1_7865 = PercentageMana
      L1_7865 = L1_7865()
      if L1_7865 >= A0_7864.Menu.LaneClear.Mana then
        L1_7865 = A0_7864.Menu
        L1_7865 = L1_7865.LaneClear
        L1_7865 = L1_7865.UseQ
        if L1_7865 > 0 then
          L1_7865 = A0_7864.EnemyMinions
          L1_7865 = L1_7865.objects
          L1_7865 = #L1_7865
          if L1_7865 >= A0_7864.Menu.LaneClear.UseQ then
            L1_7865 = A0_7864.BestHitQ
            L1_7865 = L1_7865(A0_7864, A0_7864.EnemyMinions.objects)
            A0_7864.LastFarm = os.clock()
            if L1_7865 ~= nil and L1_7865(A0_7864, A0_7864.EnemyMinions.objects) >= A0_7864.Menu.LaneClear.UseQ then
              A0_7864:CastQ(L1_7865)
              return
            end
          end
        end
        L1_7865 = A0_7864.Menu
        L1_7865 = L1_7865.LaneClear
        L1_7865 = L1_7865.UseE
        if L1_7865 > 0 then
          L1_7865 = A0_7864.EnemyMinions
          L1_7865 = L1_7865.objects
          L1_7865 = #L1_7865
          if L1_7865 >= A0_7864.Menu.LaneClear.UseE then
            L1_7865 = A0_7864.BestHitE
            L1_7865 = L1_7865(A0_7864, A0_7864.EnemyMinions.objects)
            A0_7864.LastFarm = os.clock()
            if L1_7865 ~= nil and L1_7865(A0_7864, A0_7864.EnemyMinions.objects) >= A0_7864.Menu.LaneClear.UseE then
              A0_7864:CastE(L1_7865)
              return
            end
          end
        end
        L1_7865 = A0_7864.Menu
        L1_7865 = L1_7865.LaneClear
        L1_7865 = L1_7865.UseW
        if L1_7865 > 0 then
          L1_7865 = A0_7864.EnemyMinions
          L1_7865 = L1_7865.objects
          L1_7865 = #L1_7865
          if L1_7865 >= A0_7864.Menu.LaneClear.UseW then
            L1_7865 = A0_7864.Menu
            L1_7865 = L1_7865.LaneClear
            L1_7865 = L1_7865.Soldiers
            if L1_7865 > #A0_7864.Soldiers then
              L1_7865 = GetBestCircularFarmPosition
              L1_7865 = L1_7865(A0_7864.W.Range - A0_7864.ValidRange, A0_7864.ValidRange, A0_7864.EnemyMinions.objects)
              A0_7864.LastFarm = os.clock()
              if L1_7865 ~= nil and L1_7865(A0_7864.W.Range - A0_7864.ValidRange, A0_7864.ValidRange, A0_7864.EnemyMinions.objects) >= A0_7864.Menu.LaneClear.UseW then
                A0_7864:CastW(L1_7865)
                return
              end
            end
          end
        end
        L1_7865 = A0_7864.Menu
        L1_7865 = L1_7865.LastHit
        L1_7865 = L1_7865.UseQ
        if L1_7865 > 1 then
          L1_7865 = A0_7864.Q
          L1_7865 = L1_7865.LastHit
          L1_7865(L1_7865)
        end
      end
      L1_7865 = A0_7864.Menu
      L1_7865 = L1_7865.LaneClear
      L1_7865 = L1_7865.UseQ
      if L1_7865 > 0 then
        L1_7865 = A0_7864.JungleMinions
        L1_7865 = L1_7865.objects
        L1_7865 = #L1_7865
        if L1_7865 > 0 then
          L1_7865 = A0_7864.BestHitQ
          L1_7865 = L1_7865(A0_7864, A0_7864.JungleMinions.objects)
          A0_7864.LastFarm = os.clock()
          if L1_7865 ~= nil and 1 <= L1_7865(A0_7864, A0_7864.JungleMinions.objects) then
            A0_7864:CastQ(L1_7865)
            return
          end
        end
      end
      L1_7865 = A0_7864.Menu
      L1_7865 = L1_7865.LaneClear
      L1_7865 = L1_7865.UseE
      if L1_7865 > 0 then
        L1_7865 = A0_7864.JungleMinions
        L1_7865 = L1_7865.objects
        L1_7865 = #L1_7865
        if L1_7865 > 0 then
          L1_7865 = A0_7864.BestHitE
          L1_7865 = L1_7865(A0_7864, A0_7864.JungleMinions.objects)
          A0_7864.LastFarm = os.clock()
          if L1_7865 ~= nil and 1 <= L1_7865(A0_7864, A0_7864.JungleMinions.objects) then
            A0_7864:CastE(L1_7865)
            return
          end
        end
      end
      L1_7865 = A0_7864.Menu
      L1_7865 = L1_7865.LaneClear
      L1_7865 = L1_7865.UseW
      if L1_7865 > 0 then
        L1_7865 = A0_7864.JungleMinions
        L1_7865 = L1_7865.objects
        L1_7865 = #L1_7865
        if L1_7865 > 0 then
          L1_7865 = A0_7864.Menu
          L1_7865 = L1_7865.JungleClear
          L1_7865 = L1_7865.Soldiers
          if L1_7865 > #A0_7864.Soldiers then
            L1_7865 = GetBestCircularFarmPosition
            L1_7865 = L1_7865(A0_7864.W.Range - A0_7864.ValidRange, A0_7864.ValidRange, A0_7864.JungleMinions.objects)
            A0_7864.LastFarm = os.clock()
            if L1_7865 ~= nil and 1 <= L1_7865(A0_7864.W.Range - A0_7864.ValidRange, A0_7864.ValidRange, A0_7864.JungleMinions.objects) then
              A0_7864:CastW(L1_7865)
              return
            end
          end
        end
      end
    end
  end
  function __Azir.LastHit(A0_7866)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_7866.Menu.LastHit.Mana then
      A0_7866.Q:LastHit({
        Mode = A0_7866.Menu.LastHit.UseQ
      })
    end
  end
  function __Azir.CastQ(A0_7867, A1_7868)
    if A0_7867.Q:IsReady() and A0_7867.Q:ValidTarget(A1_7868) and A0_7867:NearestSoldier(A1_7868) ~= nil then
      A0_7867.Q.Source = A0_7867:NearestSoldier(A1_7868)
      A0_7867.Q:Cast(A1_7868)
    end
  end
  function __Azir.CastW(A0_7869, A1_7870)
    local L2_7871
    L2_7871 = 0
    L2_7871 = _ENV[L2_7871]
    if not L2_7871 then
      return
    end
    L2_7871 = L2_7871 * L2_7871
    L2_7871 = A0_7869.W
    L2_7871 = L2_7871.IsReady
    L2_7871 = L2_7871(L2_7871)
    if L2_7871 then
      L2_7871 = A0_7869.W
      L2_7871 = L2_7871.ValidTarget
      L2_7871 = L2_7871(L2_7871, A1_7870)
      if L2_7871 then
        L2_7871 = A0_7869.W
        L2_7871 = L2_7871.GetPrediction
        L2_7871 = L2_7871(L2_7871, A1_7870)
        if L2_7871 and not Collides(L2_7871) and L2_7871(L2_7871, A1_7870) then
          A0_7869.W:CastToVector(L2_7871)
        end
      end
    end
  end
  function __Azir.CastE(A0_7872, A1_7873)
    local L2_7874, L3_7875
    L2_7874 = 0
    L2_7874 = _ENV[L2_7874]
    if not L2_7874 then
      return
    end
    L2_7874 = L2_7874 * L2_7874
    L2_7874 = A0_7872.E
    L3_7875 = L2_7874
    L2_7874 = L2_7874.IsReady
    L2_7874 = L2_7874(L3_7875)
    if L2_7874 and A1_7873 ~= nil then
      L2_7874 = A1_7873.valid
      if L2_7874 then
        L2_7874 = nil
        L3_7875 = A1_7873.type
        L3_7875 = L3_7875.lower
        L3_7875 = L3_7875(L3_7875)
        L3_7875 = L3_7875.find
        L3_7875 = L3_7875(L3_7875, "emitter")
        if L3_7875 then
          L2_7874 = A1_7873
        else
          L3_7875 = A0_7872.NearestSoldier
          L3_7875 = L3_7875(A0_7872, A1_7873)
          if L3_7875 ~= nil and GetDistanceSqr(myHero, A1_7873) > GetDistanceSqr(L3_7875, A1_7873) and not OrbwalkManager:InRange(A1_7873) then
            L2_7874 = L3_7875
          end
        end
        if L2_7874 ~= nil then
          L3_7875 = L2_7874.valid
          if L3_7875 then
            L3_7875 = A0_7872.E
            L3_7875 = L3_7875.CastToVector
            L3_7875(L3_7875, L2_7874)
          end
        end
      end
    end
  end
  function __Azir.CastR(A0_7876, A1_7877)
    if A0_7876.R:IsReady() then
      A0_7876.R:Cast(A1_7877)
    end
  end
  function __Azir.NearestSoldier(A0_7878, A1_7879)
    local L2_7880, L3_7881, L4_7882, L5_7883, L6_7884, L7_7885, L8_7886
    L2_7880 = 0
    L2_7880 = _ENV[L2_7880]
    if not L2_7880 then
      return
    end
    L2_7880 = L2_7880 * L2_7880
    L2_7880 = nil
    L3_7881 = A1_7879 ~= nil and A1_7879 or myHero
    if L4_7882 > 0 then
      for L7_7885, L8_7886 in L4_7882(L5_7883) do
        if L2_7880 == nil then
          L2_7880 = L8_7886
        elseif GetDistanceSqr(L3_7881, L2_7880) > GetDistanceSqr(L3_7881, L8_7886) then
          L2_7880 = L8_7886
        end
      end
    end
    return L2_7880
  end
  function __Azir.BestHitQ(A0_7887, A1_7888)
    local L2_7889, L3_7890, L4_7891, L5_7892, L6_7893, L7_7894, L8_7895, L9_7896, L10_7897, L11_7898, L12_7899, L13_7900, L14_7901, L15_7902
    L2_7889 = 0
    L2_7889 = _ENV[L2_7889]
    if not L2_7889 then
      return
    end
    L2_7889 = L2_7889 * L2_7889
    L2_7889 = nil
    L3_7890 = 0
    L4_7891 = A0_7887.Soldiers
    L4_7891 = #L4_7891
    if L4_7891 > 0 then
      L4_7891 = A0_7887.Q
      L4_7891 = L4_7891.IsReady
      L4_7891 = L4_7891(L5_7892)
      if L4_7891 then
        function L4_7891(A0_7903, A1_7904, A2_7905, A3_7906)
          local L4_7907, L5_7908, L6_7909, L7_7910, L8_7911, L9_7912, L10_7913, L11_7914
          L4_7907 = 0
          for L8_7911, L9_7912 in L5_7908(L6_7909) do
            L10_7913 = Prediction
            L11_7914 = L10_7913
            L10_7913 = L10_7913.GetPredictedPos
            L10_7913 = L10_7913(L11_7914, L9_7912, {
              Delay = A0_7887.Q.Delay + GetDistance(A0_7903, L9_7912) / A0_7887.Q.Speed
            })
            L11_7914 = VectorPointProjectionOnLineSegment
            L11_7914 = L11_7914(A0_7903, A1_7904, L10_7913)
            if L11_7914(A0_7903, A1_7904, L10_7913) and GetDistanceSqr(L11_7914, L10_7913) < A2_7905 * A2_7905 and GetDistanceSqr(A0_7903, A1_7904) > GetDistanceSqr(A0_7903, L11_7914) then
              L4_7907 = L4_7907 + 1
            end
          end
          return L4_7907
        end
        for L8_7895, L9_7896 in L5_7892(L6_7893) do
          for L13_7900, L14_7901 in L10_7897(L11_7898) do
            L15_7902 = ValidTarget
            L15_7902 = L15_7902(L14_7901, A0_7887.Q.Range)
            if L15_7902 then
              L15_7902 = Prediction
              L15_7902 = L15_7902.GetPredictedPos
              L15_7902 = L15_7902(L15_7902, L14_7901, {
                Delay = A0_7887.Q.Delay + GetDistance(L9_7896, L14_7901) / A0_7887.Q.Speed
              })
              if L3_7890 < L4_7891(L9_7896, L15_7902, A0_7887.Q.Width, A1_7888) + 1 then
                L3_7890 = L4_7891(L9_7896, L15_7902, A0_7887.Q.Width, A1_7888) + 1
                L2_7889 = L14_7901
              end
            end
            if L3_7890 ~= #A1_7888 then
            end
          end
        end
      end
    end
    L4_7891 = L2_7889
    return L4_7891, L5_7892
  end
  function __Azir.BestHitE(A0_7915, A1_7916)
    local L2_7917, L3_7918, L4_7919, L5_7920, L6_7921, L7_7922, L8_7923, L9_7924, L10_7925, L11_7926, L12_7927, L13_7928, L14_7929, L15_7930
    L2_7917 = 0
    L2_7917 = _ENV[L2_7917]
    if not L2_7917 then
      return
    end
    L2_7917 = L2_7917 * L2_7917
    L2_7917 = nil
    L3_7918 = 0
    if L4_7919 > 0 then
      if L4_7919 then
        for L7_7922, L8_7923 in L4_7919(L5_7920) do
          function L9_7924(A0_7931, A1_7932, A2_7933, A3_7934)
            local L4_7935, L5_7936, L6_7937, L7_7938, L8_7939, L9_7940, L10_7941, L11_7942
            L4_7935 = 0
            for L8_7939, L9_7940 in L5_7936(L6_7937) do
              L10_7941 = Prediction
              L11_7942 = L10_7941
              L10_7941 = L10_7941.GetPredictedPos
              L10_7941 = L10_7941(L11_7942, L9_7940, {
                Delay = A0_7915.E.Delay + GetDistance(A0_7931, L9_7940) / A0_7915.E.Speed
              })
              L11_7942 = VectorPointProjectionOnLineSegment
              L11_7942 = L11_7942(A0_7931, A1_7932, L10_7941)
              if L11_7942(A0_7931, A1_7932, L10_7941) and GetDistanceSqr(L11_7942, L10_7941) < A2_7933 * A2_7933 and GetDistanceSqr(A0_7931, A1_7932) > GetDistanceSqr(A0_7931, L11_7942) then
                L4_7935 = L4_7935 + 1
              end
            end
            return L4_7935
          end
          for L13_7928, L14_7929 in L10_7925(L11_7926) do
            L15_7930 = ValidTarget
            L15_7930 = L15_7930(L14_7929, A0_7915.E.Range)
            if L15_7930 then
              L15_7930 = Vector
              L15_7930 = L15_7930(myHero)
              L15_7930 = L15_7930 + Vector(Vector(L8_7923) - Vector(myHero)):normalized() * GetDistance(myHero, L8_7923)
              if L3_7918 < L9_7924(myHero, L15_7930, A0_7915.E.Width, A1_7916) then
                L3_7918 = L9_7924(myHero, L15_7930, A0_7915.E.Width, A1_7916)
                L2_7917 = L8_7923
              end
            end
            if L3_7918 ~= #A1_7916 then
            end
          end
        end
      end
    end
    return L4_7919, L5_7920
  end
  function __Azir.Attack(A0_7943, A1_7944)
    if not _ENV[0] then
      return
    end
    if A0_7943:IsValidTarget(A1_7944) and A0_7943:CanAttack() then
      OrbwalkManager:DisableMovement()
      A0_7943.AA.Sent = true
      myHero:Attack(A1_7944)
      A0_7943.AA.Sent = false
      A0_7943.LastClock = os.clock() - 2 * GetLatency() / 2000
    end
  end
  function __Azir.IsValidTarget(A0_7945, A1_7946)
    if not _ENV[0] then
      return
    end
    if IsValidTarget(A1_7946) and (A0_7945:SoldiersInRange(A1_7946) or OrbwalkManager:InRange(A1_7946)) then
      return true
    end
    return false
  end
  function __Azir.ExtraTime(A0_7947)
    local L1_7948, L2_7949, L3_7950, L4_7951, L5_7952, L6_7953, L7_7954, L8_7955, L9_7956, L10_7957, L11_7958, L12_7959, L13_7960, L14_7961, L15_7962, L16_7963, L17_7964, L18_7965, L19_7966, L20_7967, L21_7968, L22_7969, L23_7970, L24_7971, L25_7972, L26_7973, L27_7974, L28_7975, L29_7976, L30_7977, L31_7978, L32_7979, L33_7980, L34_7981, L35_7982, L36_7983, L37_7984, L38_7985, L39_7986, L40_7987, L41_7988, L42_7989, L43_7990, L44_7991, L45_7992, L46_7993, L47_7994, L48_7995, L49_7996, L50_7997, L51_7998, L52_7999, L53_8000, L54_8001, L55_8002, L56_8003, L57_8004, L58_8005, L59_8006, L60_8007, L61_8008, L62_8009, L63_8010, L64_8011, L65_8012, L66_8013, L67_8014, L68_8015, L69_8016, L70_8017, L71_8018, L72_8019, L73_8020, L74_8021, L75_8022, L76_8023, L77_8024, L78_8025, L79_8026, L80_8027, L81_8028, L82_8029, L83_8030, L84_8031, L85_8032, L86_8033, L87_8034, L88_8035, L89_8036, L90_8037, L91_8038, L92_8039, L93_8040, L94_8041, L95_8042, L96_8043, L97_8044, L98_8045, L99_8046, L100_8047, L101_8048, L102_8049, L103_8050, L104_8051, L105_8052, L106_8053, L107_8054, L108_8055, L109_8056, L110_8057, L111_8058, L112_8059, L113_8060, L114_8061, L115_8062, L116_8063, L117_8064, L118_8065, L119_8066, L120_8067, L121_8068, L122_8069, L123_8070, L124_8071, L125_8072, L126_8073, L127_8074, L128_8075, L129_8076, L130_8077, L131_8078, L132_8079, L133_8080, L134_8081, L135_8082, L136_8083, L137_8084, L138_8085, L139_8086, L140_8087, L141_8088, L142_8089, L143_8090, L144_8091, L145_8092, L146_8093, L147_8094, L148_8095, L149_8096, L150_8097, L151_8098, L152_8099, L153_8100, L154_8101, L155_8102, L156_8103, L157_8104, L158_8105, L159_8106, L160_8107, L161_8108, L162_8109, L163_8110, L164_8111, L165_8112, L166_8113, L167_8114, L168_8115, L169_8116, L170_8117, L171_8118, L172_8119, L173_8120, L174_8121, L175_8122, L176_8123, L177_8124, L178_8125, L179_8126, L180_8127, L181_8128, L182_8129, L183_8130, L184_8131, L185_8132, L186_8133, L187_8134, L188_8135, L189_8136, L190_8137, L191_8138, L192_8139, L193_8140, L194_8141, L195_8142, L196_8143, L197_8144, L198_8145, L199_8146, L200_8147, L201_8148, L202_8149, L203_8150, L204_8151, L205_8152, L206_8153, L207_8154, L208_8155, L209_8156, L210_8157, L211_8158, L212_8159, L213_8160, L214_8161, L215_8162, L216_8163, L217_8164, L218_8165, L219_8166, L220_8167, L221_8168, L222_8169, L223_8170, L224_8171, L225_8172, L226_8173, L227_8174, L228_8175, L229_8176, L230_8177, L231_8178, L232_8179, L233_8180, L234_8181, L235_8182, L236_8183, L237_8184, L238_8185, L239_8186, L240_8187, L241_8188, L242_8189, L243_8190, L244_8191, L245_8192, L246_8193, L247_8194, L248_8195, L249_8196, L250_8197, L251_8198, L252_8199, L253_8200, L254_8201
    L1_7948 = -0.07
    return L1_7948
  end
  function __Azir.CanAttack(A0_8202)
    if not _ENV[0] then
      return
    end
    if os.clock() - A0_8202.LastSoldierAttack + GetLatency() / 2000 < 1 * A0_8202:SoldierAnimationTime() - 0.025 then
      return false
    end
    return os.clock() - A0_8202.LastClock + GetLatency() / 2000 >= 1 * A0_8202:AnimationTime() - 0.025 and not OrbwalkManager:Evade()
  end
  function __Azir.CanMove(A0_8203)
    if not _ENV[0] then
      return
    end
    if os.clock() - A0_8203.LastSoldierAttack + GetLatency() / 2000 < 1 * A0_8203:SoldierWindUpTime() then
    end
    return os.clock() - A0_8203.LastClock + GetLatency() / 2000 >= 1 * A0_8203:WindUpTime() and not OrbwalkManager:Evade()
  end
  function __Azir.SoldiersInRange(A0_8204, A1_8205, A2_8206)
    local L3_8207, L4_8208, L5_8209, L6_8210, L7_8211, L8_8212, L9_8213, L10_8214, L11_8215
    L3_8207 = 0
    L3_8207 = _ENV[L3_8207]
    if not L3_8207 then
      return
    end
    L3_8207 = L3_8207 * L3_8207
    L3_8207 = A2_8206 ~= nil and A2_8206 or 0
    L4_8208 = {}
    if L5_8209 > 0 then
      for L8_8212, L9_8213 in L5_8209(L6_8210) do
        L10_8214 = GetDistanceSqr
        L11_8215 = myHero
        L10_8214 = L10_8214(L11_8215, L9_8213)
        L11_8215 = math
        L11_8215 = L11_8215.pow
        L11_8215 = L11_8215(A0_8204.ValidRange, 2)
        if L10_8214 < L11_8215 then
          L10_8214 = 50
          L11_8215 = IsValidTarget
          L11_8215 = L11_8215(A1_8205)
          if L11_8215 then
            L10_8214 = 0
          end
          L11_8215 = A0_8204.SoldierRange
          L11_8215 = L11_8215 + myHero.boundingRadius
          L11_8215 = L11_8215 + L10_8214
          if GetDistanceSqr(L9_8213, A1_8205) < math.pow(L11_8215, 2) then
            table.insert(L4_8208, L9_8213)
          end
        end
      end
    end
    L5_8209 = L5_8209 > 0
    return L5_8209, L6_8210
  end
  function __Azir.OnAnimation(A0_8216, A1_8217, A2_8218)
    if not _ENV[0] then
      return
    end
    if A1_8217 and A1_8217.isMe and not A0_8216:CanMove() and not A2_8218:lower():find("attack") then
      A0_8216.LastClock = os.clock() + GetLatency() / 2000 - A0_8216:AnimationTime()
    end
  end
  function __Azir.OnCastSpell(A0_8219, A1_8220, A2_8221, A3_8222, A4_8223)
    if not _ENV[0] then
      return
    end
    A0_8219.LastCastTime = os.clock()
  end
  function __Azir.OnProcessSpell(A0_8224, A1_8225, A2_8226)
    if not _ENV[0] then
      return
    end
    if myHero.dead or A0_8224.Menu == nil or not A0_8224.MenuLoaded then
      return
    end
    if A1_8225 and A2_8226 and A2_8226.name and A1_8225.isMe then
      if A2_8226.name:lower() == "azirbasicattacksoldier" and A2_8226.target ~= nil then
        A0_8224.SoldierBaseWindUpTime = 1 / (A2_8226.windUpTime * myHero.attackSpeed)
        A0_8224.SoldierBaseAnimationTime = 1 / (A2_8226.animationTime * myHero.attackSpeed)
        A0_8224.LastSoldierWindUpTime = A2_8226.windUpTime
        A0_8224.LastSoldierAnimationTime = A2_8226.animationTime
        A0_8224.LastSoldierAttack = os.clock() - GetLatency() / 2000
      elseif A2_8226.name:lower() == "azirw" then
        A0_8224.W.LastCastTime = os.clock()
      elseif A2_8226.name:lower():find("attack") and A2_8226.target ~= nil then
        if not A0_8224.DataUpdated then
          A0_8224.BaseWindUpTime = 1 / (A2_8226.windUpTime * myHero.attackSpeed)
          A0_8224.BaseAnimationTime = 1 / (A2_8226.animationTime * myHero.attackSpeed)
          A0_8224.DataUpdated = false
        end
        A0_8224.LastTarget = A2_8226.target
        A0_8224.LastClock = os.clock() - GetLatency() / 2000
        A0_8224.IsAttacking = true
      end
    end
  end
  function __Azir.SoldierWindUpTime(A0_8227)
    local L1_8228, L2_8229, L3_8230, L4_8231, L5_8232, L6_8233, L7_8234, L8_8235, L9_8236, L10_8237, L11_8238, L12_8239, L13_8240, L14_8241, L15_8242, L16_8243, L17_8244, L18_8245, L19_8246, L20_8247, L21_8248, L22_8249, L23_8250, L24_8251, L25_8252, L26_8253, L27_8254, L28_8255, L29_8256, L30_8257, L31_8258, L32_8259, L33_8260, L34_8261, L35_8262, L36_8263, L37_8264, L38_8265, L39_8266, L40_8267, L41_8268, L42_8269, L43_8270, L44_8271, L45_8272, L46_8273, L47_8274, L48_8275, L49_8276, L50_8277, L51_8278, L52_8279, L53_8280, L54_8281, L55_8282, L56_8283, L57_8284, L58_8285, L59_8286, L60_8287, L61_8288, L62_8289, L63_8290, L64_8291, L65_8292, L66_8293, L67_8294, L68_8295, L69_8296, L70_8297, L71_8298, L72_8299, L73_8300, L74_8301, L75_8302, L76_8303, L77_8304, L78_8305, L79_8306, L80_8307, L81_8308, L82_8309, L83_8310, L84_8311, L85_8312, L86_8313, L87_8314, L88_8315, L89_8316, L90_8317, L91_8318, L92_8319, L93_8320, L94_8321, L95_8322, L96_8323, L97_8324, L98_8325, L99_8326, L100_8327, L101_8328, L102_8329, L103_8330, L104_8331, L105_8332, L106_8333, L107_8334, L108_8335, L109_8336, L110_8337, L111_8338, L112_8339, L113_8340, L114_8341, L115_8342, L116_8343, L117_8344, L118_8345, L119_8346, L120_8347, L121_8348, L122_8349, L123_8350, L124_8351, L125_8352, L126_8353, L127_8354, L128_8355, L129_8356, L130_8357, L131_8358, L132_8359, L133_8360, L134_8361, L135_8362, L136_8363, L137_8364, L138_8365, L139_8366, L140_8367, L141_8368, L142_8369, L143_8370, L144_8371, L145_8372, L146_8373, L147_8374, L148_8375, L149_8376, L150_8377, L151_8378, L152_8379, L153_8380, L154_8381, L155_8382, L156_8383, L157_8384, L158_8385, L159_8386, L160_8387, L161_8388, L162_8389, L163_8390, L164_8391, L165_8392, L166_8393, L167_8394, L168_8395, L169_8396, L170_8397, L171_8398, L172_8399, L173_8400, L174_8401, L175_8402, L176_8403, L177_8404, L178_8405, L179_8406, L180_8407, L181_8408, L182_8409, L183_8410, L184_8411, L185_8412, L186_8413, L187_8414, L188_8415, L189_8416, L190_8417, L191_8418, L192_8419, L193_8420, L194_8421, L195_8422, L196_8423, L197_8424, L198_8425, L199_8426, L200_8427, L201_8428, L202_8429, L203_8430, L204_8431, L205_8432, L206_8433, L207_8434, L208_8435, L209_8436, L210_8437, L211_8438, L212_8439, L213_8440, L214_8441, L215_8442, L216_8443, L217_8444, L218_8445, L219_8446, L220_8447, L221_8448, L222_8449, L223_8450, L224_8451, L225_8452, L226_8453, L227_8454, L228_8455, L229_8456, L230_8457, L231_8458, L232_8459, L233_8460, L234_8461, L235_8462, L236_8463, L237_8464, L238_8465, L239_8466, L240_8467, L241_8468, L242_8469, L243_8470, L244_8471, L245_8472, L246_8473, L247_8474, L248_8475, L249_8476, L250_8477, L251_8478, L252_8479, L253_8480, L254_8481
    L1_8228 = A0_8227.LastSoldierWindUpTime
    return L1_8228
  end
  function __Azir.SoldierAnimationTime(A0_8482)
    local L1_8483, L2_8484, L3_8485, L4_8486, L5_8487, L6_8488, L7_8489, L8_8490, L9_8491, L10_8492, L11_8493, L12_8494, L13_8495, L14_8496, L15_8497, L16_8498, L17_8499, L18_8500, L19_8501, L20_8502, L21_8503, L22_8504, L23_8505, L24_8506, L25_8507, L26_8508, L27_8509, L28_8510, L29_8511, L30_8512, L31_8513, L32_8514, L33_8515, L34_8516, L35_8517, L36_8518, L37_8519, L38_8520, L39_8521, L40_8522, L41_8523, L42_8524, L43_8525, L44_8526, L45_8527, L46_8528, L47_8529, L48_8530, L49_8531, L50_8532, L51_8533, L52_8534, L53_8535, L54_8536, L55_8537, L56_8538, L57_8539, L58_8540, L59_8541, L60_8542, L61_8543, L62_8544, L63_8545, L64_8546, L65_8547, L66_8548, L67_8549, L68_8550, L69_8551, L70_8552, L71_8553, L72_8554, L73_8555, L74_8556, L75_8557, L76_8558, L77_8559, L78_8560, L79_8561, L80_8562, L81_8563, L82_8564, L83_8565, L84_8566, L85_8567, L86_8568, L87_8569, L88_8570, L89_8571, L90_8572, L91_8573, L92_8574, L93_8575, L94_8576, L95_8577, L96_8578, L97_8579, L98_8580, L99_8581, L100_8582, L101_8583, L102_8584, L103_8585, L104_8586, L105_8587, L106_8588, L107_8589, L108_8590, L109_8591, L110_8592, L111_8593, L112_8594, L113_8595, L114_8596, L115_8597, L116_8598, L117_8599, L118_8600, L119_8601, L120_8602, L121_8603, L122_8604, L123_8605, L124_8606, L125_8607, L126_8608, L127_8609, L128_8610, L129_8611, L130_8612, L131_8613, L132_8614, L133_8615, L134_8616, L135_8617, L136_8618, L137_8619, L138_8620, L139_8621, L140_8622, L141_8623, L142_8624, L143_8625, L144_8626, L145_8627, L146_8628, L147_8629, L148_8630, L149_8631, L150_8632, L151_8633, L152_8634, L153_8635, L154_8636, L155_8637, L156_8638, L157_8639, L158_8640, L159_8641, L160_8642, L161_8643, L162_8644, L163_8645, L164_8646, L165_8647, L166_8648, L167_8649, L168_8650, L169_8651, L170_8652, L171_8653, L172_8654, L173_8655, L174_8656, L175_8657, L176_8658, L177_8659, L178_8660, L179_8661, L180_8662, L181_8663, L182_8664, L183_8665, L184_8666, L185_8667, L186_8668, L187_8669, L188_8670, L189_8671, L190_8672, L191_8673, L192_8674, L193_8675, L194_8676, L195_8677, L196_8678, L197_8679, L198_8680, L199_8681, L200_8682, L201_8683, L202_8684, L203_8685, L204_8686, L205_8687, L206_8688, L207_8689, L208_8690, L209_8691, L210_8692, L211_8693, L212_8694, L213_8695, L214_8696, L215_8697, L216_8698, L217_8699, L218_8700, L219_8701, L220_8702, L221_8703, L222_8704, L223_8705, L224_8706, L225_8707, L226_8708, L227_8709, L228_8710, L229_8711, L230_8712, L231_8713, L232_8714, L233_8715, L234_8716, L235_8717, L236_8718, L237_8719, L238_8720, L239_8721, L240_8722, L241_8723, L242_8724, L243_8725, L244_8726, L245_8727, L246_8728, L247_8729, L248_8730, L249_8731, L250_8732, L251_8733, L252_8734, L253_8735, L254_8736
    L1_8483 = A0_8482.LastSoldierAnimationTime
    return L1_8483
  end
  function __Azir.WindUpTime(A0_8737)
    local L1_8738, L3_8739, L4_8740, L5_8741, L6_8742, L7_8743, L8_8744, L9_8745, L10_8746, L11_8747, L12_8748, L13_8749, L14_8750, L15_8751, L16_8752, L17_8753, L18_8754, L19_8755, L20_8756, L21_8757, L22_8758, L23_8759, L24_8760, L25_8761, L26_8762, L27_8763, L28_8764, L29_8765, L30_8766, L31_8767, L32_8768, L33_8769, L34_8770, L35_8771, L36_8772, L37_8773, L38_8774, L39_8775, L40_8776, L41_8777, L42_8778, L43_8779, L44_8780, L45_8781, L46_8782, L47_8783, L48_8784, L49_8785, L50_8786, L51_8787, L52_8788, L53_8789, L54_8790, L55_8791, L56_8792, L57_8793, L58_8794, L59_8795, L60_8796, L61_8797, L62_8798, L63_8799, L64_8800, L65_8801, L66_8802, L67_8803, L68_8804, L69_8805, L70_8806, L71_8807, L72_8808, L73_8809, L74_8810, L75_8811, L76_8812, L77_8813, L78_8814, L79_8815, L80_8816, L81_8817, L82_8818, L83_8819, L84_8820, L85_8821, L86_8822, L87_8823, L88_8824, L89_8825, L90_8826, L91_8827, L92_8828, L93_8829, L94_8830, L95_8831, L96_8832, L97_8833, L98_8834, L99_8835, L100_8836, L101_8837, L102_8838, L103_8839, L104_8840, L105_8841, L106_8842, L107_8843, L108_8844, L109_8845, L110_8846, L111_8847, L112_8848, L113_8849, L114_8850, L115_8851, L116_8852, L117_8853, L118_8854, L119_8855, L120_8856, L121_8857, L122_8858, L123_8859, L124_8860, L125_8861, L126_8862, L127_8863, L128_8864, L129_8865, L130_8866, L131_8867, L132_8868, L133_8869, L134_8870, L135_8871, L136_8872, L137_8873, L138_8874, L139_8875, L140_8876, L141_8877, L142_8878, L143_8879, L144_8880, L145_8881, L146_8882, L147_8883, L148_8884, L149_8885, L150_8886, L151_8887, L152_8888, L153_8889, L154_8890, L155_8891, L156_8892, L157_8893, L158_8894, L159_8895, L160_8896, L161_8897, L162_8898, L163_8899, L164_8900, L165_8901, L166_8902, L167_8903, L168_8904, L169_8905, L170_8906, L171_8907, L172_8908, L173_8909, L174_8910, L175_8911, L176_8912, L177_8913, L178_8914, L179_8915, L180_8916, L181_8917, L182_8918, L183_8919, L184_8920, L185_8921, L186_8922, L187_8923, L188_8924, L189_8925, L190_8926, L191_8927, L192_8928, L193_8929, L194_8930, L195_8931, L196_8932, L197_8933, L198_8934, L199_8935, L200_8936, L201_8937, L202_8938, L203_8939, L204_8940, L205_8941, L206_8942, L207_8943, L208_8944, L209_8945, L210_8946, L211_8947, L212_8948, L213_8949, L214_8950, L215_8951, L216_8952, L217_8953, L218_8954, L219_8955, L220_8956, L221_8957, L222_8958, L223_8959, L224_8960, L225_8961, L226_8962, L227_8963, L228_8964, L229_8965, L230_8966, L231_8967, L232_8968, L233_8969, L234_8970, L235_8971, L236_8972, L237_8973, L238_8974, L239_8975, L240_8976, L241_8977, L242_8978, L243_8979, L244_8980, L245_8981, L246_8982, L247_8983, L248_8984, L249_8985, L250_8986, L251_8987, L252_8988, L253_8989, L254_8990
    L1_8738 = 0
    L1_8738 = _ENV[L1_8738]
    if not L1_8738 then
      return
    end
    L1_8738 = L1_8738 * L1_8738
    L1_8738 = myHero
    L1_8738 = L1_8738.attackSpeed
    L3_8739 = A0_8737.BaseWindUpTime
    L1_8738 = L1_8738 * L3_8739
    L1_8738 = 1 / L1_8738
    return L1_8738
  end
  function __Azir.AnimationTime(A0_8991)
    local L1_8992, L3_8993, L4_8994, L5_8995, L6_8996, L7_8997, L8_8998, L9_8999, L10_9000, L11_9001, L12_9002, L13_9003, L14_9004, L15_9005, L16_9006, L17_9007, L18_9008, L19_9009, L20_9010, L21_9011, L22_9012, L23_9013, L24_9014, L25_9015, L26_9016, L27_9017, L28_9018, L29_9019, L30_9020, L31_9021, L32_9022, L33_9023, L34_9024, L35_9025, L36_9026, L37_9027, L38_9028, L39_9029, L40_9030, L41_9031, L42_9032, L43_9033, L44_9034, L45_9035, L46_9036, L47_9037, L48_9038, L49_9039, L50_9040, L51_9041, L52_9042, L53_9043, L54_9044, L55_9045, L56_9046, L57_9047, L58_9048, L59_9049, L60_9050, L61_9051, L62_9052, L63_9053, L64_9054, L65_9055, L66_9056, L67_9057, L68_9058, L69_9059, L70_9060, L71_9061, L72_9062, L73_9063, L74_9064, L75_9065, L76_9066, L77_9067, L78_9068, L79_9069, L80_9070, L81_9071, L82_9072, L83_9073, L84_9074, L85_9075, L86_9076, L87_9077, L88_9078, L89_9079, L90_9080, L91_9081, L92_9082, L93_9083, L94_9084, L95_9085, L96_9086, L97_9087, L98_9088, L99_9089, L100_9090, L101_9091, L102_9092, L103_9093, L104_9094, L105_9095, L106_9096, L107_9097, L108_9098, L109_9099, L110_9100, L111_9101, L112_9102, L113_9103, L114_9104, L115_9105, L116_9106, L117_9107, L118_9108, L119_9109, L120_9110, L121_9111, L122_9112, L123_9113, L124_9114, L125_9115, L126_9116, L127_9117, L128_9118, L129_9119, L130_9120, L131_9121, L132_9122, L133_9123, L134_9124, L135_9125, L136_9126, L137_9127, L138_9128, L139_9129, L140_9130, L141_9131, L142_9132, L143_9133, L144_9134, L145_9135, L146_9136, L147_9137, L148_9138, L149_9139, L150_9140, L151_9141, L152_9142, L153_9143, L154_9144, L155_9145, L156_9146, L157_9147, L158_9148, L159_9149, L160_9150, L161_9151, L162_9152, L163_9153, L164_9154, L165_9155, L166_9156, L167_9157, L168_9158, L169_9159, L170_9160, L171_9161, L172_9162, L173_9163, L174_9164, L175_9165, L176_9166, L177_9167, L178_9168, L179_9169, L180_9170, L181_9171, L182_9172, L183_9173, L184_9174, L185_9175, L186_9176, L187_9177, L188_9178, L189_9179, L190_9180, L191_9181, L192_9182, L193_9183, L194_9184, L195_9185, L196_9186, L197_9187, L198_9188, L199_9189, L200_9190, L201_9191, L202_9192, L203_9193, L204_9194, L205_9195, L206_9196, L207_9197, L208_9198, L209_9199, L210_9200, L211_9201, L212_9202, L213_9203, L214_9204, L215_9205, L216_9206, L217_9207, L218_9208, L219_9209, L220_9210, L221_9211, L222_9212, L223_9213, L224_9214, L225_9215, L226_9216, L227_9217, L228_9218, L229_9219, L230_9220, L231_9221, L232_9222, L233_9223, L234_9224, L235_9225, L236_9226, L237_9227, L238_9228, L239_9229, L240_9230, L241_9231, L242_9232, L243_9233, L244_9234, L245_9235, L246_9236, L247_9237, L248_9238, L249_9239, L250_9240, L251_9241, L252_9242, L253_9243, L254_9244
    L1_8992 = 0
    L1_8992 = _ENV[L1_8992]
    if not L1_8992 then
      return
    end
    L1_8992 = L1_8992 * L1_8992
    L1_8992 = myHero
    L1_8992 = L1_8992.attackSpeed
    L3_8993 = A0_8991.BaseAnimationTime
    L1_8992 = L1_8992 * L3_8993
    L1_8992 = 1 / L1_8992
    return L1_8992
  end
  function __Azir.OnSendPacket(A0_9245, A1_9246)
    if not _ENV[0] then
      return
    end
    if A1_9246 then
      A1_9246.pos = 2
      if myHero.networkID == A1_9246:DecodeF() then
        if A0_9245.AA.Sent and A0_9245.AA.Packet == nil then
          A0_9245.AA.Packet = A1_9246.header
        end
        if A0_9245.Move.Sent and A0_9245.Move.Packet == nil then
          A0_9245.Move.Packet = A1_9246.header
        end
        if not A0_9245:CanMove() and not OrbwalkManager:IsNone() and not IsEvading() and os.clock() - A0_9245.LastCastTime > 0.2 then
          Packet(A1_9246):block()
        end
      end
    end
  end
  function __Azir.OnCreateObj(A0_9247, A1_9248)
    if not _ENV[0] then
      return
    end
    if A0_9247.Menu == nil or not A0_9247.MenuLoaded then
      return
    end
    if A1_9248 and A1_9248.name and os.clock() - A0_9247.W.LastCastTime < 0.1 and A1_9248.name:lower() == "azir_base_p_soldier_ring.troy" then
      table.insert(A0_9247.Soldiers, A1_9248)
    end
  end
  function __Azir.OnDeleteObj(A0_9249, A1_9250)
    local L2_9251, L3_9252, L4_9253, L5_9254
    if not L2_9251 then
      return
    end
    if L2_9251 ~= nil then
    elseif not L2_9251 then
      return
    end
    if A1_9250 then
      if L2_9251 then
        if L2_9251 == "azir_base_p_soldier_ring.troy" then
          for L5_9254, _FORV_6_ in L2_9251(L3_9252) do
            if _FORV_6_.networkID == A1_9250.networkID then
              table.remove(A0_9249.Soldiers, L5_9254)
              break
            end
          end
        end
      end
    end
  end
  function __Azir.OnDraw(A0_9255)
    local L1_9256, L2_9257, L3_9258, L4_9259, L5_9260, L6_9261
    if not L1_9256 then
      return
    end
    if not L1_9256 then
    elseif not L1_9256 then
      return
    end
    if L1_9256 then
      for L4_9259, L5_9260 in L1_9256(L2_9257) do
        L6_9261 = GetDistanceSqr
        L6_9261 = L6_9261(myHero, L5_9260)
        if L6_9261 < math.pow(A0_9255.ValidRange, 2) then
          L6_9261 = L11_11.Green
        else
          L6_9261 = L6_9261 or L11_11.Red
        end
        DrawCircle3D(L5_9260.x, L5_9260.y, L5_9260.z, A0_9255.SoldierRange, 3, L6_9261, 25)
      end
    end
    if L1_9256 then
      if L1_9256 then
        L4_9259 = mousePos
        L4_9259 = L4_9259.z
        L5_9260 = A0_9255.SoldierRange
        L6_9261 = 3
        L1_9256(L2_9257, L3_9258, L4_9259, L5_9260, L6_9261, L11_11.Blue, 25)
      end
    end
    if L1_9256 then
      if L1_9256 then
        if L1_9256 then
          if L1_9256 then
            L4_9259 = A0_9255.InsecTS
            L4_9259 = L4_9259.target
            L4_9259 = L4_9259.y
            L5_9260 = A0_9255.InsecTS
            L5_9260 = L5_9260.target
            L5_9260 = L5_9260.z
            L6_9261 = L2_9257(L3_9258, L4_9259, L5_9260)
            L4_9259 = L2_9257
            L4_9259 = Vector
            L5_9260 = Vector
            L6_9261 = A0_9255.InsecPos
            L5_9260 = L5_9260(L6_9261)
            L6_9261 = Vector
            L6_9261 = L6_9261(L2_9257)
            L5_9260 = L5_9260 - L6_9261
            L4_9259 = L4_9259(L5_9260)
            L5_9260 = L4_9259
            L4_9259 = L4_9259.normalized
            L4_9259 = L4_9259(L5_9260)
            L5_9260 = A0_9255.R
            L5_9260 = L5_9260.Range
            L4_9259 = L4_9259 * L5_9260
            L4_9259 = L4_9259 * 1.5
            L4_9259 = WorldToScreen
            L5_9260 = D3DXVECTOR3
            L6_9261 = L3_9258.x
            L6_9261 = L5_9260(L6_9261, L3_9258.y, L3_9258.z)
            L4_9259 = L4_9259(L5_9260, L6_9261, L5_9260(L6_9261, L3_9258.y, L3_9258.z))
            L5_9260 = DrawLine
            L6_9261 = L1_9256.x
            L5_9260(L6_9261, L1_9256.y, L4_9259.x, L4_9259.y, 2, L11_11.Blue)
          end
          if L1_9256 then
            L4_9259 = A0_9255.InsecTS
            L4_9259 = L4_9259.target
            L4_9259 = L4_9259.z
            L5_9260 = 150
            L6_9261 = 4
            L1_9256(L2_9257, L3_9258, L4_9259, L5_9260, L6_9261, L11_11.Blue, 25)
          end
        end
      end
    end
  end
  function __Azir.Damage(A0_9262, A1_9263, A2_9264)
    local L3_9265
    L3_9265 = 0
    L3_9265 = _ENV[L3_9265]
    if not L3_9265 then
      return
    end
    L3_9265 = L3_9265 * L3_9265
    L3_9265 = 0
    if IsValidTarget(A2_9264) and A1_9263 == "Q" then
      L3_9265 = 20 * (A0_9262.Q:GetSpellData() ~= nil and A0_9262.Q:GetSpellData().level ~= nil and A0_9262.Q:GetSpellData().level or 0) + 45 + 0.5 * myHero.ap
    end
    if L3_9265 > 0 then
      L3_9265 = myHero:CalcMagicDamage(A2_9264, L3_9265)
    end
    return L3_9265
  end
  function __Azir.GetTarget(A0_9266)
    local L1_9267, L2_9268, L3_9269, L4_9270, L5_9271, L6_9272, L7_9273, L8_9274
    L1_9267 = 0
    L1_9267 = _ENV[L1_9267]
    if not L1_9267 then
      return
    end
    L1_9267 = L1_9267 * L1_9267
    L1_9267 = nil
    L3_9269 = A0_9266
    L2_9268 = A0_9266.SoldiersInRange
    L3_9269 = L2_9268(L3_9269, L4_9270)
    if not L2_9268 then
    elseif L4_9270 then
      return L4_9270
    end
    L8_9274 = L5_9271()
    for L7_9273, L8_9274 in L4_9270(L5_9271, L6_9272, L7_9273, L8_9274, L5_9271()) do
      if IsValidTarget(L8_9274) and (A0_9266:SoldiersInRange(L8_9274) or OrbwalkManager:InRange(L8_9274)) then
        if L1_9267 == nil then
          L1_9267 = L8_9274
        elseif GetPriority(L8_9274) < GetPriority(L1_9267) then
          L1_9267 = L8_9274
        end
      end
    end
    return L1_9267
  end
  function __Azir.GetKillableMinion(A0_9275, A1_9276)
    local L2_9277, L3_9278, L4_9279, L5_9280, L6_9281, L7_9282, L8_9283, L9_9284, L10_9285, L11_9286, L12_9287
    L2_9277 = 0
    L2_9277 = _ENV[L2_9277]
    if not L2_9277 then
      return
    end
    L2_9277 = L2_9277 * L2_9277
    L2_9277 = A1_9276 ~= nil and A1_9276 or 0
    L3_9278 = {}
    if L4_9279 > 0 then
      for L7_9282, L8_9283 in L4_9279(L5_9280) do
        L9_9284 = L8_9283.dead
        if not L9_9284 then
          L9_9284 = L8_9283.health
          if L9_9284 > 0 then
            L9_9284 = IsValidTarget
            L10_9285 = L8_9283
            L9_9284 = L9_9284(L10_9285)
            if L9_9284 then
              L9_9284 = L8_9283.charName
              L10_9285 = L9_9284
              L9_9284 = L9_9284.lower
              L9_9284 = L9_9284(L10_9285)
              L10_9285 = L9_9284
              L9_9284 = L9_9284.find
              L11_9286 = "cannon"
              L9_9284 = L9_9284(L10_9285, L11_9286)
              if L9_9284 then
                L10_9285 = A0_9275
                L9_9284 = A0_9275.SoldiersInRange
                L11_9286 = L8_9283
                L12_9287 = L2_9277
                L10_9285 = L9_9284(L10_9285, L11_9286, L12_9287)
                L11_9286, L12_9287 = nil, nil
                if L9_9284 then
                  L11_9286 = getDmg("W", L8_9283, myHero) * (0.75 + 0.25 * #L10_9285)
                  L12_9287 = A0_9275:SoldierWindUpTime() + A0_9275:SoldierAnimationTime() + GetDistance(L10_9285[1], L8_9283) / A0_9275.ProjectileSpeed + A0_9275:ExtraTime()
                  L12_9287 = L12_9287 * 2
                elseif OrbwalkManager:InRange(L8_9283) then
                  L11_9286 = Prediction.VP:CalcDamageOfAttack(myHero, L8_9283, {name = "Basic"}, 0)
                  L12_9287 = A0_9275:WindUpTime() + A0_9275:AnimationTime() + GetDistance(myHero, L8_9283) / A0_9275.ProjectileSpeed + A0_9275:ExtraTime()
                  L12_9287 = L12_9287 * 2
                end
                if L11_9286 ~= nil and L11_9286 > Prediction.VP:GetPredictedHealth2(L8_9283, L12_9287) then
                  table.insert(L3_9278, L8_9283)
                end
              end
            end
          end
        end
      end
    end
    if L4_9279 > 0 then
      for L7_9282 = #L3_9278, 1, -1 do
        L8_9283 = L3_9278[L7_9282]
        if L8_9283 then
          L9_9284 = L8_9283.dead
          if not L9_9284 then
            L9_9284 = L8_9283.health
            if L9_9284 > 0 then
              L9_9284 = IsValidTarget
              L10_9285 = L8_9283
              L9_9284 = L9_9284(L10_9285)
              if L9_9284 then
                L10_9285 = A0_9275
                L9_9284 = A0_9275.SoldiersInRange
                L11_9286 = L8_9283
                L12_9287 = L2_9277
                L10_9285 = L9_9284(L10_9285, L11_9286, L12_9287)
                L11_9286, L12_9287 = nil, nil
                if L9_9284 then
                  L11_9286 = getDmg("W", L8_9283, myHero) * (0.75 + 0.25 * #L10_9285)
                  L12_9287 = A0_9275:SoldierWindUpTime() + GetDistance(L10_9285[1], L8_9283) / A0_9275.ProjectileSpeed + A0_9275:ExtraTime()
                elseif OrbwalkManager:InRange(L8_9283) then
                  L11_9286 = Prediction.VP:CalcDamageOfAttack(myHero, L8_9283, {name = "Basic"}, 0)
                  L12_9287 = A0_9275:WindUpTime() + GetDistance(myHero, L8_9283) / A0_9275.ProjectileSpeed + A0_9275:ExtraTime()
                end
                if L11_9286 ~= nil and L11_9286 > Prediction.VP:GetPredictedHealth(L8_9283, L12_9287, _G.OrbwalkManagerMenu.FarmDelay / 1000) and Prediction.VP:GetPredictedHealth(L8_9283, L12_9287, _G.OrbwalkManagerMenu.FarmDelay / 1000) > A0_9275.LimitHealth then
                  return L8_9283
                end
              end
            end
          end
        end
      end
    else
      for L7_9282, L8_9283 in L4_9279(L5_9280) do
        L9_9284 = L8_9283.dead
        if not L9_9284 then
          L9_9284 = L8_9283.health
          if L9_9284 > 0 then
            L9_9284 = IsValidTarget
            L10_9285 = L8_9283
            L9_9284 = L9_9284(L10_9285)
            if L9_9284 then
              L9_9284, L10_9285 = nil, nil
              L12_9287 = A0_9275
              L11_9286 = A0_9275.SoldiersInRange
              L12_9287 = L11_9286(L12_9287, L8_9283, L2_9277)
              if L11_9286 then
                L9_9284 = getDmg("W", L8_9283, myHero) * (0.75 + 0.25 * #L12_9287)
                L10_9285 = A0_9275:SoldierWindUpTime() + GetDistance(L12_9287[1], L8_9283) / A0_9275.ProjectileSpeed + A0_9275:ExtraTime()
              elseif OrbwalkManager:InRange(L8_9283) then
                L9_9284 = Prediction.VP:CalcDamageOfAttack(myHero, L8_9283, {name = "Basic"}, 0)
                L10_9285 = A0_9275:WindUpTime() + GetDistance(myHero, L8_9283) / A0_9275.ProjectileSpeed + A0_9275:ExtraTime()
              end
              if L9_9284 ~= nil and L9_9284 > Prediction.VP:GetPredictedHealth(L8_9283, L10_9285, _G.OrbwalkManagerMenu.FarmDelay / 1000) and Prediction.VP:GetPredictedHealth(L8_9283, L10_9285, _G.OrbwalkManagerMenu.FarmDelay / 1000) > A0_9275.LimitHealth then
                return L8_9283
              end
            end
          end
        end
      end
    end
    return L4_9279
  end
  function __Azir.GetAlmostKillableMinion(A0_9288, A1_9289)
    local L2_9290, L3_9291, L4_9292, L5_9293, L6_9294, L7_9295, L8_9296, L9_9297, L10_9298, L11_9299
    L2_9290 = 0
    L2_9290 = _ENV[L2_9290]
    if not L2_9290 then
      return
    end
    L2_9290 = L2_9290 * L2_9290
    L2_9290 = A1_9289 ~= nil and A1_9289 or 0
    for L6_9294, L7_9295 in L3_9291(L4_9292) do
      L8_9296 = IsValidTarget
      L9_9297 = L7_9295
      L8_9296 = L8_9296(L9_9297)
      if L8_9296 then
        L9_9297 = A0_9288
        L8_9296 = A0_9288.SoldiersInRange
        L10_9298 = L7_9295
        L11_9299 = L2_9290
        L9_9297 = L8_9296(L9_9297, L10_9298, L11_9299)
        L10_9298, L11_9299 = nil, nil
        if L8_9296 then
          L10_9298 = getDmg("W", L7_9295, myHero) * (0.75 + 0.25 * #L9_9297)
          L11_9299 = A0_9288:SoldierWindUpTime() + A0_9288:SoldierAnimationTime() + GetDistance(L9_9297[1], L7_9295) / A0_9288.ProjectileSpeed + A0_9288:ExtraTime()
          L11_9299 = L11_9299 * 2
        elseif OrbwalkManager:InRange(L7_9295) then
          L10_9298 = Prediction.VP:CalcDamageOfAttack(myHero, L7_9295, {name = "Basic"}, 0)
          L11_9299 = A0_9288:WindUpTime() + A0_9288:AnimationTime() + GetDistance(myHero, L7_9295) / A0_9288.ProjectileSpeed + A0_9288:ExtraTime()
          L11_9299 = L11_9299 * 2
        end
        if L10_9298 ~= nil and L10_9298 > Prediction.VP:GetPredictedHealth2(L7_9295, L11_9299) then
          return L7_9295
        end
      end
    end
    return L3_9291
  end
  function __Azir.GetMeanwhileMinion(A0_9300, A1_9301)
    local L2_9302, L3_9303, L4_9304, L5_9305, L6_9306, L7_9307, L8_9308, L9_9309, L10_9310, L11_9311, L12_9312
    L2_9302 = 0
    L2_9302 = _ENV[L2_9302]
    if not L2_9302 then
      return
    end
    L2_9302 = L2_9302 * L2_9302
    L2_9302 = A1_9301 ~= nil and A1_9301 or 0
    for L6_9306, L7_9307 in L3_9303(L4_9304) do
      L8_9308 = IsValidTarget
      L9_9309 = L7_9307
      L8_9308 = L8_9308(L9_9309)
      if L8_9308 then
        L9_9309 = A0_9300
        L8_9308 = A0_9300.SoldiersInRange
        L10_9310 = L7_9307
        L11_9311 = L2_9302
        L9_9309 = L8_9308(L9_9309, L10_9310, L11_9311)
        L10_9310, L11_9311, L12_9312 = nil, nil, nil
        if L8_9308 then
          L10_9310 = getDmg("W", L7_9307, myHero) * (0.75 + 0.25 * #L9_9309)
          L12_9312 = A0_9300:SoldierWindUpTime() + A0_9300:SoldierAnimationTime() + GetDistance(L9_9309[1], L7_9307) / A0_9300.ProjectileSpeed + A0_9300:ExtraTime()
          L12_9312 = L12_9312 * 2
          L11_9311 = A0_9300:SoldierWindUpTime() + A0_9300:ExtraTime()
        elseif OrbwalkManager:InRange(L7_9307) then
          L10_9310 = Prediction.VP:CalcDamageOfAttack(myHero, L7_9307, {name = "Basic"}, 0)
          L12_9312 = A0_9300:WindUpTime() + A0_9300:AnimationTime() + GetDistance(myHero, L7_9307) / A0_9300.ProjectileSpeed + A0_9300:ExtraTime()
          L12_9312 = L12_9312 * 2
          L11_9311 = A0_9300:WindUpTime() + A0_9300:ExtraTime()
        end
        if L10_9310 ~= nil and (Prediction.VP:GetPredictedHealth2(L7_9307, L12_9312) > 2 * L10_9310 or L7_9307.health == Prediction.VP:GetPredictedHealth(L7_9307, L11_9311, _G.OrbwalkManagerMenu.FarmDelay / 1000)) then
          return L7_9307
        end
      end
    end
    return L3_9303
  end
  function __Azir.GetJungleMinion(A0_9313, A1_9314)
    local L2_9315, L3_9316, L4_9317, L5_9318, L6_9319, L7_9320
    L2_9315 = 0
    L2_9315 = _ENV[L2_9315]
    if not L2_9315 then
      return
    end
    L2_9315 = L2_9315 * L2_9315
    L2_9315 = A1_9314 ~= nil and A1_9314 or 0
    for L6_9319, L7_9320 in L3_9316(L4_9317) do
      if IsValidTarget(L7_9320) then
        if A0_9313:SoldiersInRange(L7_9320, L2_9315) then
          return L7_9320
        end
        if OrbwalkManager:InRange(L7_9320) then
          return L7_9320
        end
      end
    end
    return L3_9316
  end
  function __Azir.GetComboDamage(A0_9321, A1_9322, A2_9323, A3_9324, A4_9325, A5_9326)
    local L6_9327, L7_9328
    L6_9327 = 0
    L6_9327 = _ENV[L6_9327]
    if not L6_9327 then
      return
    end
    L6_9327 = L6_9327 * L6_9327
    L6_9327 = 0
    L7_9328 = 0
    if IsValidTarget(A1_9322) then
      if A2_9323 then
        L6_9327 = L6_9327 + A0_9321.Q:Damage(A1_9322) * (0.75 + 0.25 * #A0_9321.Soldiers)
        L7_9328 = L7_9328 + A0_9321.Q:Mana()
      end
      if A3_9324 then
        L6_9327 = L6_9327 + A0_9321.W:Damage(A1_9322) * (0.75 + 0.25 * #A0_9321.Soldiers)
        L7_9328 = L7_9328 + A0_9321.W:Mana()
      end
      if A4_9325 then
        L6_9327 = L6_9327 + A0_9321.E:Damage(A1_9322)
        L7_9328 = L7_9328 + A0_9321.E:Mana()
      end
      if A5_9326 then
        L6_9327 = L6_9327 + A0_9321.R:Damage(A1_9322)
        L7_9328 = L7_9328 + A0_9321.R:Mana()
      end
      if A3_3:IsReady() then
        L6_9327 = L6_9327 + A3_3:Damage(A1_9322)
      end
      L6_9327 = L6_9327 + getDmg("AD", A1_9322, myHero)
    end
    L6_9327 = L6_9327 * A0_9321:GetOverkill()
    return L6_9327, L7_9328
  end
  function __Azir.GetOverkill(A0_9329)
    local L1_9330, L2_9331, L3_9332, L4_9333, L5_9334, L6_9335, L7_9336, L8_9337, L9_9338, L10_9339, L11_9340, L12_9341, L13_9342, L14_9343, L15_9344, L16_9345, L17_9346, L18_9347, L19_9348, L20_9349, L21_9350, L22_9351, L23_9352, L24_9353, L25_9354, L26_9355, L27_9356, L28_9357, L29_9358, L30_9359, L31_9360, L32_9361, L33_9362, L34_9363, L35_9364, L36_9365, L37_9366, L38_9367, L39_9368, L40_9369, L41_9370, L42_9371, L43_9372, L44_9373, L45_9374, L46_9375, L47_9376, L48_9377, L49_9378, L50_9379, L51_9380, L52_9381, L53_9382, L54_9383, L55_9384, L56_9385, L57_9386, L58_9387, L59_9388, L60_9389, L61_9390, L62_9391, L63_9392, L64_9393, L65_9394, L66_9395, L67_9396, L68_9397, L69_9398, L70_9399, L71_9400, L72_9401, L73_9402, L74_9403, L75_9404, L76_9405, L77_9406, L78_9407, L79_9408, L80_9409, L81_9410, L82_9411, L83_9412, L84_9413, L85_9414, L86_9415, L87_9416, L88_9417, L89_9418, L90_9419, L91_9420, L92_9421, L93_9422, L94_9423, L95_9424, L96_9425, L97_9426, L98_9427, L99_9428, L100_9429, L101_9430, L102_9431, L103_9432, L104_9433, L105_9434, L106_9435, L107_9436, L108_9437, L109_9438, L110_9439, L111_9440, L112_9441, L113_9442, L114_9443, L115_9444, L116_9445, L117_9446, L118_9447, L119_9448, L120_9449, L121_9450, L122_9451, L123_9452, L124_9453, L125_9454, L126_9455, L127_9456, L128_9457, L129_9458, L130_9459, L131_9460, L132_9461, L133_9462, L134_9463, L135_9464, L136_9465, L137_9466, L138_9467, L139_9468, L140_9469, L141_9470, L142_9471, L143_9472, L144_9473, L145_9474, L146_9475, L147_9476, L148_9477, L149_9478, L150_9479, L151_9480, L152_9481, L153_9482, L154_9483, L155_9484, L156_9485, L157_9486, L158_9487, L159_9488, L160_9489, L161_9490, L162_9491, L163_9492, L164_9493, L165_9494, L166_9495, L167_9496, L168_9497, L169_9498, L170_9499, L171_9500, L172_9501, L173_9502, L174_9503, L175_9504, L176_9505, L177_9506, L178_9507, L179_9508, L180_9509, L181_9510, L182_9511, L183_9512, L184_9513, L185_9514, L186_9515, L187_9516, L188_9517, L189_9518, L190_9519, L191_9520, L192_9521, L193_9522, L194_9523, L195_9524, L196_9525, L197_9526, L198_9527, L199_9528, L200_9529, L201_9530, L202_9531, L203_9532, L204_9533, L205_9534, L206_9535, L207_9536, L208_9537, L209_9538, L210_9539, L211_9540, L212_9541, L213_9542, L214_9543, L215_9544, L216_9545, L217_9546, L218_9547, L219_9548, L220_9549, L221_9550, L222_9551, L223_9552, L224_9553, L225_9554, L226_9555, L227_9556, L228_9557, L229_9558, L230_9559, L231_9560, L232_9561, L233_9562, L234_9563, L235_9564, L236_9565, L237_9566, L238_9567, L239_9568, L240_9569, L241_9570, L242_9571, L243_9572, L244_9573, L245_9574, L246_9575, L247_9576, L248_9577, L249_9578, L250_9579, L251_9580, L252_9581, L253_9582, L254_9583
    L1_9330 = A0_9329.Menu
    L1_9330 = L1_9330.General
    L1_9330 = L1_9330.Overkill
    L1_9330 = 100 + L1_9330
    L1_9330 = L1_9330 / 100
    return L1_9330
  end
  class("__Ahri")
  function __Ahri.__init(A0_9584)
    local L1_9585, L2_9586, L3_9587, L4_9588, L5_9589, L6_9590, L7_9591, L8_9592, L9_9593, L10_9594, L11_9595, L12_9596, L13_9597, L14_9598, L15_9599, L16_9600, L17_9601, L18_9602, L19_9603, L20_9604, L21_9605, L22_9606, L23_9607, L24_9608, L25_9609, L26_9610, L27_9611, L28_9612, L29_9613, L30_9614, L31_9615, L32_9616, L33_9617, L34_9618, L35_9619, L36_9620, L37_9621, L38_9622, L39_9623, L40_9624, L41_9625, L42_9626, L43_9627, L44_9628, L45_9629, L46_9630, L47_9631, L48_9632, L49_9633, L50_9634, L51_9635, L52_9636, L53_9637, L54_9638, L55_9639, L56_9640, L57_9641, L58_9642, L59_9643, L60_9644, L61_9645, L62_9646, L63_9647, L64_9648, L65_9649, L66_9650, L67_9651, L68_9652, L69_9653, L70_9654, L71_9655, L72_9656, L73_9657, L74_9658, L75_9659, L76_9660, L77_9661, L78_9662, L79_9663, L80_9664, L81_9665, L82_9666, L83_9667, L84_9668, L85_9669, L86_9670, L87_9671, L88_9672, L89_9673, L90_9674, L91_9675, L92_9676, L93_9677, L94_9678, L95_9679, L96_9680, L97_9681, L98_9682, L99_9683, L100_9684, L101_9685, L102_9686, L103_9687, L104_9688, L105_9689, L106_9690, L107_9691, L108_9692, L109_9693, L110_9694, L111_9695, L112_9696, L113_9697, L114_9698, L115_9699, L116_9700, L117_9701, L118_9702, L119_9703, L120_9704, L121_9705, L122_9706, L123_9707, L124_9708, L125_9709, L126_9710, L127_9711, L128_9712, L129_9713, L130_9714, L131_9715, L132_9716, L133_9717, L134_9718, L135_9719, L136_9720, L137_9721, L138_9722, L139_9723, L140_9724, L141_9725, L142_9726, L143_9727, L144_9728, L145_9729, L146_9730, L147_9731, L148_9732, L149_9733, L150_9734, L151_9735, L152_9736, L153_9737, L154_9738, L155_9739, L156_9740, L157_9741, L158_9742, L159_9743, L160_9744, L161_9745, L162_9746, L163_9747, L164_9748, L165_9749, L166_9750, L167_9751, L168_9752, L169_9753, L170_9754, L171_9755, L172_9756, L173_9757, L174_9758, L175_9759, L176_9760, L177_9761, L178_9762, L179_9763, L180_9764, L181_9765, L182_9766, L183_9767, L184_9768, L185_9769, L186_9770, L187_9771, L188_9772, L189_9773, L190_9774, L191_9775, L192_9776, L193_9777, L194_9778, L195_9779, L196_9780, L197_9781, L198_9782, L199_9783, L200_9784, L201_9785, L202_9786, L203_9787, L204_9788, L205_9789, L206_9790, L207_9791, L208_9792, L209_9793, L210_9794, L211_9795, L212_9796, L213_9797, L214_9798, L215_9799, L216_9800, L217_9801, L218_9802, L219_9803, L220_9804, L221_9805, L222_9806, L223_9807, L224_9808, L225_9809, L226_9810, L227_9811, L228_9812, L229_9813, L230_9814, L231_9815, L232_9816, L233_9817, L234_9818, L235_9819, L236_9820, L237_9821, L238_9822, L239_9823, L240_9824, L241_9825, L242_9826, L243_9827, L244_9828, L245_9829, L246_9830, L247_9831, L248_9832, L249_9833, L250_9834, L251_9835, L252_9836, L253_9837, L254_9838
    A0_9584.ScriptName = "Challenger Ahri Reborn"
    A0_9584.Author = "Da Vinci"
    A0_9584.MenuLoaded = false
    A0_9584.Menu = nil
    A0_9584.TS = nil
    A0_9584.Q = nil
    A0_9584.W = nil
    A0_9584.E = nil
    A0_9584.R = nil
  end
  function __Ahri.OnTick(A0_9839)
    if not _ENV[0] then
      return
    end
    if A0_9839.Menu == nil or A0_9839.TS == nil or not A0_9839.MenuLoaded then
      return
    end
    A0_9839.TS:update()
    A0_9839.Q.Width = A0_9839.Q.Width1
    if A0_9839.Q.Object ~= nil then
      A0_9839.Q.Range = math.huge
      A0_9839.Q.Source = A0_9839.Q.Object
      A0_9839.Q.Delay = 0
      if 0 < os.clock() - A0_9839.Q.LastObjectVectorTime then
        if A0_9839.Q.LastObjectVector ~= nil then
          A0_9839.Q.Speed = GetDistance(A0_9839.Q.Object, A0_9839.Q.LastObjectVector) / (os.clock() - A0_9839.Q.LastObjectVectorTime)
        end
        A0_9839.Q.LastObjectVector = Vector(A0_9839.Q.Object)
        A0_9839.Q.LastObjectVectorTime = os.clock()
      end
    else
      A0_9839.Q.Range = A0_9839.Q.Range1
      A0_9839.Q.Source = myHero
      A0_9839.Q.Delay = A0_9839.Q.Delay1
      A0_9839.Q.Speed = A0_9839.Q.Speed1
    end
    if A0_9839.Q.Object ~= nil and 0 < os.clock() - A0_9839.Q.LastObjectVectorTime then
      if A0_9839.Q.LastObjectVector == nil then
        A0_9839.Q.LastObjectVector = Vector(A0_9839.Q.Object)
        A0_9839.Q.LastObjectVectorTime = os.clock()
      else
        A0_9839.Q.Speed = GetDistance(A0_9839.Q.Object, A0_9839.Q.LastObjectVector) / (os.clock() - A0_9839.Q.LastObjectVectorTime)
        A0_9839.Q.LastObjectVector = Vector(A0_9839.Q.Object)
        A0_9839.Q.LastObjectVectorTime = os.clock()
      end
    end
    A0_9839:KillSteal()
    A0_9839:CatchQ()
    if OrbwalkManager:IsCombo() then
      A0_9839:Combo()
    elseif OrbwalkManager:IsHarass() then
      A0_9839:Harass()
    elseif OrbwalkManager:IsClear() then
      A0_9839:Clear()
    elseif OrbwalkManager:IsLastHit() then
      A0_9839:LastHit()
    end
    if A0_9839.Menu.Keys.HarassToggle then
      A0_9839:Harass()
    end
    if A0_9839.Menu.Keys.Run then
      myHero:MoveTo(mousePos.x, mousePos.z)
      if A0_9839.R:IsReady() then
        A0_9839.R:CastToVector(mousePos)
      end
      if A0_9839.Q:IsReady() then
        if IsValidTarget(A0_9839.TS.target) then
          A0_9839.Q:CastToVector(A0_9839.TS.target)
        else
          A0_9839.Q:CastToVector(mousePos)
        end
      end
      if IsValidTarget(A0_9839.TS.target) then
        A0_9839.E:Cast(A0_9839.TS.target)
      end
    end
  end
  function __Ahri.KillSteal(A0_9840)
    local L1_9841, L2_9842, L3_9843, L4_9844, L5_9845
    if not L1_9841 then
      return
    end
    L5_9845 = L2_9842()
    for L4_9844, L5_9845 in L1_9841(L2_9842, L3_9843, L4_9844, L5_9845, L2_9842()) do
      if IsValidTarget(L5_9845, A0_9840.TS.range) and L5_9845.health > 0 and PercentageHealth(L5_9845) <= 40 then
        if GetBestCombo(L5_9845, A0_9840) >= L5_9845.health then
          if A0_9840.Menu.KillSteal.UseQ and (GetBestCombo(L5_9845, A0_9840) or A0_9840.Q:Damage(L5_9845) * 2 > L5_9845.health) then
            A0_9840:CastQ(L5_9845)
          end
          if A0_9840.Menu.KillSteal.UseW and (GetBestCombo(L5_9845, A0_9840) or A0_9840.W:Damage(L5_9845) * 1.6 > L5_9845.health) then
            A0_9840:CastW(L5_9845)
          end
          if A0_9840.Menu.KillSteal.UseE and (GetBestCombo(L5_9845, A0_9840) or A0_9840.E:Damage(L5_9845) > L5_9845.health) then
            A0_9840.E:Cast(L5_9845)
          end
        end
        if A0_9840.Menu.KillSteal.UseIgnite and A3_3:IsReady() and A3_3:Damage(L5_9845) > L5_9845.health then
          A3_3:Cast(L5_9845)
        end
      end
    end
  end
  function __Ahri.CastQ(A0_9846, A1_9847)
    local L2_9848, L3_9849, L4_9850
    L2_9848 = 0
    L2_9848 = _ENV[L2_9848]
    if not L2_9848 then
      return
    end
    L2_9848 = L2_9848 * L2_9848
    L2_9848 = IsValidTarget
    L3_9849 = A1_9847
    L2_9848 = L2_9848(L3_9849)
    if L2_9848 then
      L2_9848 = A0_9846.Q
      L3_9849 = L2_9848
      L2_9848 = L2_9848.IsReady
      L2_9848 = L2_9848(L3_9849)
      if L2_9848 then
        L2_9848 = Prediction
        L3_9849 = L2_9848
        L2_9848 = L2_9848.GetPredictedPos
        L4_9850 = A1_9847
        L3_9849 = L2_9848(L3_9849, L4_9850, {
          Delay = A0_9846.Q.Delay
        })
        L4_9850 = OrbwalkManager
        L4_9850 = L4_9850.IsHarass
        L4_9850 = L4_9850(L4_9850)
        if L4_9850 then
          L4_9850 = A0_9846.Q
          L4_9850 = L4_9850.Range
          L4_9850 = L4_9850 - 50
        elseif not L4_9850 then
          L4_9850 = A0_9846.Q
          L4_9850 = L4_9850.Range
        end
        if L2_9848 and L3_9849 and GetDistanceSqr(myHero, L2_9848) < math.pow(L4_9850, 2) then
          A0_9846.Q.Speed = 1400
          if A0_9846.Q.Speed >= A0_9846.Q.MinSpeed and A0_9846.Q.Speed <= A0_9846.Q.MaxSpeed then
            A0_9846.Q.Target = A1_9847
            A0_9846.Q:Cast(A1_9847, {Speed = 1400, Width = 75})
          end
        end
      end
    end
  end
  function __Ahri.CastW(A0_9851, A1_9852)
    if not _ENV[0] then
      return
    end
    if IsValidTarget(A1_9852) and A0_9851.W:IsReady() then
      if A1_9852.type == myHero.type then
        if A0_9851.Q.Object ~= nil or OrbwalkManager.AA.LastTarget and OrbwalkManager.AA.LastTarget.networkID == A1_9852.networkID then
          A0_9851.W:Cast(A1_9852)
        end
      else
        A0_9851.W:Cast(A1_9852)
      end
    end
  end
  function __Ahri.CastR(A0_9853, A1_9854)
    if not _ENV[0] then
      return
    end
    if IsValidTarget(A1_9854) then
      if A0_9853.Menu.Combo.CatchQRPriority then
        if A0_9853.R.HaveBuff then
          if A0_9853.Q.Object ~= nil and A0_9853.Q.IsReturning and GetDistanceSqr(myHero, A0_9853.Q.Object) < GetDistanceSqr(myHero, A0_9853.Q.Target) then
            A0_9853.R:CastToVector(mousePos)
          elseif A0_9853.Q.Object ~= nil then
            return
          end
          if A0_9853.Q:GetSpellData() ~= nil and A0_9853.Q:GetSpellData().currentCd ~= nil and not A0_9853.Q:IsReady() and 10 - (os.clock() - A0_9853.R.FirstCastTime) <= A0_9853.Q:GetSpellData().currentCd and os.clock() - A0_9853.R.FirstCastTime <= 10 then
            A0_9853.R:CastToVector(mousePos)
          end
        end
        if GetBestCombo(A1_9854, A0_9853) >= A1_9854.health and GetDistanceSqr(mousePos, A1_9854) < GetDistanceSqr(myHero, A1_9854) then
          if A0_9853.Menu.Keys.StartE and A0_9853.E:IsReady() then
            if not A0_9853.E:GetPrediction(A1_9854, {
              TypeOfPrediction = "VPrediction"
            }) then
              A0_9853.R:CastToVector(mousePos)
            else
              return
            end
          end
          if GetBestCombo(A1_9854, A0_9853) and GetDistanceSqr(myHero, A1_9854) > math.pow(400, 2) then
            A0_9853.R:CastToVector(mousePos)
          end
        end
      else
        A0_9853.R:CastToVector(mousePos)
      end
    end
  end
  function __Ahri.Combo(A0_9855)
    local L1_9856
    L1_9856 = 0
    L1_9856 = _ENV[L1_9856]
    if not L1_9856 then
      return
    end
    L1_9856 = L1_9856 * L1_9856
    L1_9856 = A0_9855.TS
    L1_9856 = L1_9856.target
    if IsValidTarget(L1_9856) then
      if A0_9855.Menu.Combo.UseE then
        A0_9855.E:Cast(L1_9856)
      end
      if A3_3:IsReady() and A0_9855.Menu.Combo.UseIgnite and GetBestCombo(L1_9856, A0_9855) / A0_9855:GetOverkill() >= L1_9856.health then
        A3_3:Cast(L1_9856)
      end
      if A0_9855.Menu.Combo.Zhonyas > 0 and PercentageHealth() <= A0_9855.Menu.Combo.Zhonyas and L6_6.Zhonyas:IsReady() then
        L6_6.Zhonyas:Cast()
      end
      if A0_9855.Menu.Combo.UseR and A0_9855.R:IsReady() and A0_9855.R:ValidTarget(L1_9856) then
        A0_9855:CastR(L1_9856)
      end
      if os.clock() - A0_9855.E.LastCastTime < 0.26 or A0_9855.E.Object ~= nil and GetDistanceSqr(myHero, A0_9855.E.Object) <= GetDistanceSqr(myHero, L1_9856) then
        return
      end
      if A0_9855.Menu.Keys.StartE and A0_9855.E:IsReady() then
        return
      end
      if A0_9855.Menu.Combo.UseQ then
        A0_9855:CastQ(L1_9856)
      end
      if A0_9855.Menu.Combo.UseW then
        A0_9855:CastW(L1_9856)
      end
    end
  end
  function __Ahri.Harass(A0_9857)
    local L1_9858
    L1_9858 = 0
    L1_9858 = _ENV[L1_9858]
    if not L1_9858 then
      return
    end
    L1_9858 = L1_9858 * L1_9858
    L1_9858 = A0_9857.TS
    L1_9858 = L1_9858.target
    if PercentageMana() >= A0_9857.Menu.Harass.Mana and IsValidTarget(L1_9858) then
      if A0_9857.Menu.Harass.UseE then
        A0_9857.E:Cast(L1_9858)
      end
      if os.clock() - A0_9857.E.LastCastTime < 0.26 or A0_9857.E.Object ~= nil and GetDistanceSqr(myHero, A0_9857.E.Object) <= GetDistanceSqr(myHero, L1_9858) then
        return
      end
      if A0_9857.Menu.Keys.StartE and A0_9857.E:IsReady() then
        return
      end
      if A0_9857.Menu.Harass.UseQ then
        A0_9857:CastQ(L1_9858)
      end
      if A0_9857.Menu.Harass.UseW then
        A0_9857:CastW(L1_9858)
      end
    end
  end
  function __Ahri.Clear(A0_9859)
    local L1_9860
    L1_9860 = 0
    L1_9860 = _ENV[L1_9860]
    if not L1_9860 then
      return
    end
    L1_9860 = L1_9860 * L1_9860
    L1_9860 = PercentageMana
    L1_9860 = L1_9860()
    if L1_9860 >= A0_9859.Menu.LaneClear.Mana then
      L1_9860 = A0_9859.Menu
      L1_9860 = L1_9860.LaneClear
      L1_9860 = L1_9860.UseE
      if L1_9860 then
        L1_9860 = A0_9859.E
        L1_9860 = L1_9860.LaneClear
        L1_9860(L1_9860)
      end
      L1_9860 = A0_9859.Menu
      L1_9860 = L1_9860.LaneClear
      L1_9860 = L1_9860.UseQ
      if L1_9860 > 0 then
        L1_9860 = A0_9859.Q
        L1_9860 = L1_9860.LaneClear
        L1_9860 = L1_9860(L1_9860, {
          NumberOfHits = A0_9859.Menu.LaneClear.UseQ,
          UseCast = false
        })
        A0_9859:CastQ(L1_9860)
        if A0_9859.Menu.LastHit.UseQ > 1 then
          A0_9859.Q:LastHit()
        end
      end
      L1_9860 = A0_9859.Menu
      L1_9860 = L1_9860.LaneClear
      L1_9860 = L1_9860.UseW
      if L1_9860 > 0 then
        L1_9860 = A0_9859.W
        L1_9860 = L1_9860.LaneClear
        L1_9860(L1_9860, {
          NumberOfHits = A0_9859.Menu.LaneClear.UseW
        })
      end
    end
    L1_9860 = A0_9859.Menu
    L1_9860 = L1_9860.JungleClear
    L1_9860 = L1_9860.UseE
    if L1_9860 then
      L1_9860 = A0_9859.E
      L1_9860 = L1_9860.JungleClear
      L1_9860(L1_9860)
    end
    L1_9860 = A0_9859.Menu
    L1_9860 = L1_9860.JungleClear
    L1_9860 = L1_9860.UseQ
    if L1_9860 then
      L1_9860 = A0_9859.Q
      L1_9860 = L1_9860.JungleClear
      L1_9860 = L1_9860(L1_9860, {UseCast = false})
      A0_9859:CastQ(L1_9860)
    end
    L1_9860 = A0_9859.Menu
    L1_9860 = L1_9860.JungleClear
    L1_9860 = L1_9860.UseW
    if L1_9860 then
      L1_9860 = A0_9859.W
      L1_9860 = L1_9860.JungleClear
      L1_9860(L1_9860)
    end
  end
  function __Ahri.LastHit(A0_9861)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_9861.Menu.LastHit.Mana then
      if A0_9861.Menu.LastHit.UseQ then
        A0_9861.Q:LastHit({
          Mode = A0_9861.Menu.LastHit.UseQ
        })
      end
      if A0_9861.Menu.LastHit.UseE then
        A0_9861.E:LastHit({
          Mode = A0_9861.Menu.LastHit.UseE
        })
      end
    end
  end
  function __Ahri.GetComboDamage(A0_9862, A1_9863, A2_9864, A3_9865, A4_9866, A5_9867)
    local L6_9868, L7_9869
    L6_9868 = 0
    L6_9868 = _ENV[L6_9868]
    if not L6_9868 then
      return
    end
    L6_9868 = L6_9868 * L6_9868
    L6_9868 = 0
    L7_9869 = 0
    if IsValidTarget(A1_9863) then
      if A2_9864 then
        L6_9868 = L6_9868 + A0_9862.Q:Damage(A1_9863) * 2
        L7_9869 = L7_9869 + A0_9862.Q:Mana()
      end
      if A3_9865 then
        L6_9868 = L6_9868 + A0_9862.W:Damage(A1_9863) * 1.6
        L7_9869 = L7_9869 + A0_9862.W:Mana()
      end
      if A4_9866 then
        L6_9868 = L6_9868 + A0_9862.E:Damage(A1_9863)
        L7_9869 = L7_9869 + A0_9862.E:Mana()
      end
      if A5_9867 then
        L6_9868 = L6_9868 + A0_9862.R:Damage(A1_9863) * 3
        L7_9869 = L7_9869 + A0_9862.R:Mana()
      end
      if A3_3:IsReady() then
        L6_9868 = L6_9868 + A3_3:Damage(A1_9863)
      end
      L6_9868 = L6_9868 + getDmg("AD", A1_9863, myHero) * 2
    end
    L6_9868 = L6_9868 * A0_9862:GetOverkill()
    return L6_9868, L7_9869
  end
  function __Ahri.GetOverkill(A0_9870)
    local L1_9871, L2_9872, L3_9873, L4_9874, L5_9875, L6_9876, L7_9877, L8_9878, L9_9879, L10_9880, L11_9881, L12_9882, L13_9883, L14_9884, L15_9885, L16_9886, L17_9887, L18_9888, L19_9889, L20_9890, L21_9891, L22_9892, L23_9893, L24_9894, L25_9895, L26_9896, L27_9897, L28_9898, L29_9899, L30_9900, L31_9901, L32_9902, L33_9903, L34_9904, L35_9905, L36_9906, L37_9907, L38_9908, L39_9909, L40_9910, L41_9911, L42_9912, L43_9913, L44_9914, L45_9915, L46_9916, L47_9917, L48_9918, L49_9919, L50_9920, L51_9921, L52_9922, L53_9923, L54_9924, L55_9925, L56_9926, L57_9927, L58_9928, L59_9929, L60_9930, L61_9931, L62_9932, L63_9933, L64_9934, L65_9935, L66_9936, L67_9937, L68_9938, L69_9939, L70_9940, L71_9941, L72_9942, L73_9943, L74_9944, L75_9945, L76_9946, L77_9947, L78_9948, L79_9949, L80_9950, L81_9951, L82_9952, L83_9953, L84_9954, L85_9955, L86_9956, L87_9957, L88_9958, L89_9959, L90_9960, L91_9961, L92_9962, L93_9963, L94_9964, L95_9965, L96_9966, L97_9967, L98_9968, L99_9969, L100_9970, L101_9971, L102_9972, L103_9973, L104_9974, L105_9975, L106_9976, L107_9977, L108_9978, L109_9979, L110_9980, L111_9981, L112_9982, L113_9983, L114_9984, L115_9985, L116_9986, L117_9987, L118_9988, L119_9989, L120_9990, L121_9991, L122_9992, L123_9993, L124_9994, L125_9995, L126_9996, L127_9997, L128_9998, L129_9999, L130_10000, L131_10001, L132_10002, L133_10003, L134_10004, L135_10005, L136_10006, L137_10007, L138_10008, L139_10009, L140_10010, L141_10011, L142_10012, L143_10013, L144_10014, L145_10015, L146_10016, L147_10017, L148_10018, L149_10019, L150_10020, L151_10021, L152_10022, L153_10023, L154_10024, L155_10025, L156_10026, L157_10027, L158_10028, L159_10029, L160_10030, L161_10031, L162_10032, L163_10033, L164_10034, L165_10035, L166_10036, L167_10037, L168_10038, L169_10039, L170_10040, L171_10041, L172_10042, L173_10043, L174_10044, L175_10045, L176_10046, L177_10047, L178_10048, L179_10049, L180_10050, L181_10051, L182_10052, L183_10053, L184_10054, L185_10055, L186_10056, L187_10057, L188_10058, L189_10059, L190_10060, L191_10061, L192_10062, L193_10063, L194_10064, L195_10065, L196_10066, L197_10067, L198_10068, L199_10069, L200_10070, L201_10071, L202_10072, L203_10073, L204_10074, L205_10075, L206_10076, L207_10077, L208_10078, L209_10079, L210_10080, L211_10081, L212_10082, L213_10083, L214_10084, L215_10085, L216_10086, L217_10087, L218_10088, L219_10089, L220_10090, L221_10091, L222_10092, L223_10093, L224_10094, L225_10095, L226_10096, L227_10097, L228_10098, L229_10099, L230_10100, L231_10101, L232_10102, L233_10103, L234_10104, L235_10105, L236_10106, L237_10107, L238_10108, L239_10109, L240_10110, L241_10111, L242_10112, L243_10113, L244_10114, L245_10115, L246_10116, L247_10117, L248_10118, L249_10119, L250_10120, L251_10121, L252_10122, L253_10123, L254_10124
    L1_9871 = A0_9870.Menu
    L1_9871 = L1_9871.General
    L1_9871 = L1_9871.Overkill
    L1_9871 = 100 + L1_9871
    L1_9871 = L1_9871 / 100
    return L1_9871
  end
  function __Ahri.EvadeR(A0_10125, A1_10126)
    local L2_10127, L3_10128
    L2_10127 = 0
    L2_10127 = _ENV[L2_10127]
    if not L2_10127 then
      return
    end
    L2_10127 = L2_10127 * L2_10127
    L2_10127 = A0_10125.R
    L3_10128 = L2_10127
    L2_10127 = L2_10127.IsReady
    L2_10127 = L2_10127(L3_10128)
    if L2_10127 then
      L2_10127 = IsValidTarget
      L3_10128 = A1_10126
      L2_10127 = L2_10127(L3_10128, 1100)
      if L2_10127 then
        L2_10127 = Vector
        L3_10128 = myHero
        L2_10127 = L2_10127(L3_10128)
        L3_10128 = Vector
        L3_10128 = L3_10128(Vector(A1_10126) - Vector(myHero))
        L3_10128 = L3_10128.normalized
        L3_10128 = L3_10128(L3_10128)
        L3_10128 = L3_10128.perpendicular
        L3_10128 = L3_10128(L3_10128)
        L3_10128 = L3_10128 * 450
        L2_10127 = L2_10127 + L3_10128
        L3_10128 = Vector
        L3_10128 = L3_10128(myHero)
        L3_10128 = L3_10128 + Vector(Vector(A1_10126) - Vector(myHero)):normalized():perpendicular2() * 450
        if not Collides(L2_10127) then
          A0_10125.R:CastToVector(L2_10127)
        elseif not Collides(L3_10128) then
          A0_10125.R:CastToVector(L3_10128)
        else
          A0_10125.R:CastToVector(L2_10127)
        end
      end
    end
  end
  function __Ahri.OnProcessSpell(A0_10129, A1_10130, A2_10131)
    if not _ENV[0] then
      return
    end
    if A1_10130 and A2_10131 and A2_10131.name and A1_10130.isMe then
      if A2_10131.name:lower() == "ahriorbofdeception" then
        A0_10129.Q.Object = nil
        A0_10129.Q.LastCastTime = os.clock()
        A0_10129.Q.IsReturning = false
        DelayAction(function()
          local L1_10132, L2_10133, L3_10134, L4_10135, L5_10136, L6_10137, L7_10138, L8_10139, L9_10140, L10_10141, L11_10142, L12_10143, L13_10144, L14_10145, L15_10146, L16_10147, L17_10148, L18_10149, L19_10150, L20_10151, L21_10152, L22_10153, L23_10154, L24_10155, L25_10156, L26_10157, L27_10158, L28_10159, L29_10160, L30_10161, L31_10162, L32_10163, L33_10164, L34_10165, L35_10166, L36_10167, L37_10168, L38_10169, L39_10170, L40_10171, L41_10172, L42_10173, L43_10174, L44_10175, L45_10176, L46_10177, L47_10178, L48_10179, L49_10180, L50_10181, L51_10182, L52_10183, L53_10184, L54_10185, L55_10186, L56_10187, L57_10188, L58_10189, L59_10190, L60_10191, L61_10192, L62_10193, L63_10194, L64_10195, L65_10196, L66_10197, L67_10198, L68_10199, L69_10200, L70_10201, L71_10202, L72_10203, L73_10204, L74_10205, L75_10206, L76_10207, L77_10208, L78_10209, L79_10210, L80_10211, L81_10212, L82_10213, L83_10214, L84_10215, L85_10216, L86_10217, L87_10218, L88_10219, L89_10220, L90_10221, L91_10222, L92_10223, L93_10224, L94_10225, L95_10226, L96_10227, L97_10228, L98_10229, L99_10230, L100_10231, L101_10232, L102_10233, L103_10234, L104_10235, L105_10236, L106_10237, L107_10238, L108_10239, L109_10240, L110_10241, L111_10242, L112_10243, L113_10244, L114_10245, L115_10246, L116_10247, L117_10248, L118_10249, L119_10250, L120_10251, L121_10252, L122_10253, L123_10254, L124_10255, L125_10256, L126_10257, L127_10258, L128_10259, L129_10260, L130_10261, L131_10262, L132_10263, L133_10264, L134_10265, L135_10266, L136_10267, L137_10268, L138_10269, L139_10270, L140_10271, L141_10272, L142_10273, L143_10274, L144_10275, L145_10276, L146_10277, L147_10278, L148_10279, L149_10280, L150_10281, L151_10282, L152_10283, L153_10284, L154_10285, L155_10286, L156_10287, L157_10288, L158_10289, L159_10290, L160_10291, L161_10292, L162_10293, L163_10294, L164_10295, L165_10296, L166_10297, L167_10298, L168_10299, L169_10300, L170_10301, L171_10302, L172_10303, L173_10304, L174_10305, L175_10306, L176_10307, L177_10308, L178_10309, L179_10310, L180_10311, L181_10312, L182_10313, L183_10314, L184_10315, L185_10316, L186_10317, L187_10318, L188_10319, L189_10320, L190_10321, L191_10322, L192_10323, L193_10324, L194_10325, L195_10326, L196_10327, L197_10328, L198_10329, L199_10330, L200_10331, L201_10332, L202_10333, L203_10334, L204_10335, L205_10336, L206_10337, L207_10338, L208_10339, L209_10340, L210_10341, L211_10342, L212_10343, L213_10344, L214_10345, L215_10346, L216_10347, L217_10348, L218_10349, L219_10350, L220_10351, L221_10352, L222_10353, L223_10354, L224_10355, L225_10356, L226_10357, L227_10358, L228_10359, L229_10360, L230_10361, L231_10362, L232_10363, L233_10364, L234_10365, L235_10366, L236_10367, L237_10368, L238_10369, L239_10370, L240_10371, L241_10372, L242_10373, L243_10374, L244_10375, L245_10376, L246_10377, L247_10378, L248_10379, L249_10380, L250_10381, L251_10382, L252_10383, L253_10384, L254_10385
          L1_10132 = A0_10129.Q
          L1_10132.Object = nil
        end, A0_10129.Q.Delay + 2 * GetDistance(myHero, Vector(A1_10130.endPos)) / A0_10129.Q.Speed + 0.8)
      elseif A2_10131.name:lower() == "ahritumble" then
        if os.clock() - A0_10129.R.LastCastTime > 15 then
          A0_10129.R.FirstCastTime = os.clock()
        end
        A0_10129.R.LastCastTime = os.clock()
      end
    end
  end
  function __Ahri.OnCastSpell(A0_10386, A1_10387, A2_10388, A3_10389, A4_10390)
    if not _ENV[0] then
      return
    end
    if A1_10387 == A0_10386.Q.Slot then
      A0_10386.Q.Object = nil
      A0_10386.Q.LastCastTime = os.clock() + 5 * GetLatency() / 2000
      A0_10386.Q.IsReturning = false
    elseif A1_10387 == A0_10386.E.Slot then
      A0_10386.E.LastCastTime = os.clock() + 5 * GetLatency() / 2000
      A0_10386.E.Object = nil
    elseif A1_10387 == A0_10386.R.Slot then
      if os.clock() - A0_10386.R.LastCastTime > 15 then
        A0_10386.R.FirstCastTime = os.clock() + 5 * GetLatency() / 2000
      end
      A0_10386.R.LastCastTime = os.clock() + 5 * GetLatency() / 2000
    end
  end
  function __Ahri.OnCreateObj(A0_10391, A1_10392)
    if not _ENV[0] then
      return
    end
    if not A0_10391.MenuLoaded then
      return
    end
    if A1_10392 and A1_10392.name then
      if A1_10392.name:lower():find("missile") and A1_10392.spellOwner and A1_10392.spellOwner.charName and A1_10392.spellName and A1_10392.spellOwner.charName:lower():find(myHero.charName:lower()) then
        if A1_10392.spellName:lower() == "ahriorbmissile" then
          A0_10391.Q.IsReturning = false
          A0_10391.Q.Object = A1_10392
        elseif A1_10392.spellName:lower() == "ahriorbreturn" then
          A0_10391.Q.Object = A1_10392
          A0_10391.Q.IsReturning = true
        end
      end
      if A1_10392.name:lower():find("ahri_") and A1_10392.name:lower():find("base_") and A1_10392.name:lower():find("spiritrushready_tar") then
        A0_10391.R.HaveBuff = true
      end
    end
  end
  function __Ahri.OnDeleteObj(A0_10393, A1_10394)
    if not _ENV[0] then
      return
    end
    if not A0_10393.MenuLoaded then
      return
    end
    if A1_10394 and A1_10394.name then
      if not A1_10394.name:lower():find("missile") or not A1_10394.spellOwner or not A1_10394.spellOwner.charName or not A1_10394.spellName or not A1_10394.spellOwner.charName:lower():find(myHero.charName:lower()) or A1_10394.spellName:lower() == "ahriorbmissile" then
      elseif A1_10394.spellName:lower() == "ahriorbreturn" then
        A0_10393.Q.Object = nil
        A0_10393.Q.IsReturning = false
        A0_10393.Q.Target = nil
        A0_10393.Q.LastObjectVector = nil
      end
      if A1_10394.name:lower():find("ahri_") and A1_10394.name:lower():find("base_") and A1_10394.name:lower():find("spiritrushready_tar") then
        A0_10393.R.HaveBuff = false
      end
    end
  end
  function __Ahri.OnDraw(A0_10395)
    local L1_10396, L2_10397
    L1_10396 = 0
    L1_10396 = _ENV[L1_10396]
    if not L1_10396 then
      return
    end
    L1_10396 = L1_10396 * L1_10396
    L1_10396 = A0_10395.MenuLoaded
    if not L1_10396 then
      return
    end
    L1_10396 = myHero
    L1_10396 = L1_10396.dead
    if not L1_10396 then
      L1_10396 = A0_10395.Menu
    elseif L1_10396 == nil then
      return
    end
    L1_10396 = A0_10395.Q
    L1_10396 = L1_10396.Object
    if L1_10396 ~= nil then
      L1_10396 = A0_10395.Menu
      L1_10396 = L1_10396.Draw
      L1_10396 = L1_10396.Line
      if L1_10396 then
        L1_10396 = Vector
        L2_10397 = A0_10395.Q
        L2_10397 = L2_10397.Object
        L1_10396 = L1_10396(L2_10397)
        L2_10397 = Vector
        L2_10397 = L2_10397(myHero)
        if GetDistanceSqr(L1_10396, L2_10397) < math.pow(A0_10395.Q.Range * 1.8, 2) then
          DrawLine(WorldToScreen(D3DXVECTOR3(myHero.x, myHero.y, myHero.z)).x, WorldToScreen(D3DXVECTOR3(myHero.x, myHero.y, myHero.z)).y, WorldToScreen(D3DXVECTOR3(A0_10395.Q.Object.x, A0_10395.Q.Object.y, A0_10395.Q.Object.z)).x, WorldToScreen(D3DXVECTOR3(A0_10395.Q.Object.x, A0_10395.Q.Object.y, A0_10395.Q.Object.z)).y, A0_10395.Q.Width, ARGB(100, 255, 255, 255))
        end
      end
      L1_10396 = A0_10395.Menu
      L1_10396 = L1_10396.Draw
      L1_10396 = L1_10396.Path
      if L1_10396 then
        L1_10396 = A0_10395.Q
        L1_10396 = L1_10396.CatchPosition
        if L1_10396 ~= nil then
          L1_10396 = WorldToScreen
          L2_10397 = D3DXVECTOR3
          L2_10397 = L2_10397(A0_10395.Q.CatchPosition.x, A0_10395.Q.CatchPosition.y, A0_10395.Q.CatchPosition.z)
          L1_10396 = L1_10396(L2_10397, L2_10397(A0_10395.Q.CatchPosition.x, A0_10395.Q.CatchPosition.y, A0_10395.Q.CatchPosition.z))
          L2_10397 = WorldToScreen
          L2_10397 = L2_10397(D3DXVECTOR3(myHero.x, myHero.y, myHero.z))
          DrawLine(L1_10396.x, L1_10396.y, L2_10397.x, L2_10397.y, 40, A0_10395.Q.CatchColor)
        end
      end
    end
  end
  function __Ahri.CatchQ(A0_10398)
    local L1_10399, L2_10400, L3_10401, L4_10402, L5_10403, L6_10404, L7_10405, L8_10406, L9_10407, L10_10408, L11_10409, L12_10410, L13_10411, L14_10412, L15_10413, L16_10414, L17_10415
    L1_10399 = 0
    L1_10399 = _ENV[L1_10399]
    if not L1_10399 then
      return
    end
    L1_10399 = L1_10399 * L1_10399
    L1_10399 = A0_10398.Q
    L1_10399.CatchPosition = nil
    L1_10399 = OrbwalkManager
    L2_10400 = L1_10399
    L1_10399 = L1_10399.EnableAttacks
    L1_10399(L2_10400)
    L1_10399 = OrbwalkManager
    L2_10400 = L1_10399
    L1_10399 = L1_10399.EnableMovement
    L1_10399(L2_10400)
    L1_10399 = A0_10398.Q
    L1_10399 = L1_10399.Target
    if not L1_10399 then
      L1_10399 = A0_10398.TS
      L1_10399 = L1_10399.target
    end
    L2_10400 = A0_10398.Q
    L2_10400 = L2_10400.Object
    if L2_10400 ~= nil then
      L2_10400 = ValidTarget
      L3_10401 = L1_10399
      L2_10400 = L2_10400(L3_10401)
      if L2_10400 then
        L2_10400 = A0_10398.Q
        L2_10400 = L2_10400.IsReturning
        if L2_10400 then
          L2_10400 = GetDistanceSqr
          L3_10401 = myHero
          L4_10402 = L1_10399
          L2_10400 = L2_10400(L3_10401, L4_10402)
          L3_10401 = GetDistanceSqr
          L4_10402 = myHero
          L5_10403 = A0_10398.Q
          L5_10403 = L5_10403.Object
          L3_10401 = L3_10401(L4_10402, L5_10403)
          if L2_10400 < L3_10401 then
            L2_10400 = A0_10398.Q
            L3_10401 = L2_10400
            L2_10400 = L2_10400.GetPrediction
            L4_10402 = L1_10399
            L5_10403 = {}
            L5_10403.TypeOfPrediction = "VPrediction"
            L3_10401 = L2_10400(L3_10401, L4_10402, L5_10403)
            if L2_10400 and L3_10401 then
              L4_10402 = GetDistanceSqr
              L5_10403 = myHero
              L6_10404 = L2_10400
              L4_10402 = L4_10402(L5_10403, L6_10404)
              L5_10403 = GetDistanceSqr
              L6_10404 = myHero
              L7_10405 = A0_10398.Q
              L7_10405 = L7_10405.Object
              L5_10403 = L5_10403(L6_10404, L7_10405)
              if L4_10402 < L5_10403 then
                L4_10402 = GetDistance
                L5_10403 = A0_10398.Q
                L5_10403 = L5_10403.Object
                L6_10404 = L1_10399
                L4_10402 = L4_10402(L5_10403, L6_10404)
                L5_10403 = A0_10398.Q
                L5_10403 = L5_10403.Speed
                L4_10402 = L4_10402 / L5_10403
                L5_10403 = Vector
                L6_10404 = A0_10398.Q
                L6_10404 = L6_10404.Object
                L5_10403 = L5_10403(L6_10404)
                L6_10404 = Vector
                L7_10405 = Vector
                L8_10406 = L2_10400
                L7_10405 = L7_10405(L8_10406)
                L8_10406 = Vector
                L9_10407 = A0_10398.Q
                L9_10407 = L9_10407.Object
                L8_10406 = L8_10406(L9_10407)
                L7_10405 = L7_10405 - L8_10406
                L6_10404 = L6_10404(L7_10405)
                L7_10405 = L6_10404
                L6_10404 = L6_10404.normalized
                L6_10404 = L6_10404(L7_10405)
                L6_10404 = L6_10404 * 1500
                L5_10403 = L5_10403 + L6_10404
                L6_10404 = VectorPointProjectionOnLineSegment
                L7_10405 = L5_10403
                L8_10406 = A0_10398.Q
                L8_10406 = L8_10406.Object
                L9_10407 = myHero
                L8_10406 = L6_10404(L7_10405, L8_10406, L9_10407)
                L9_10407 = VectorPointProjectionOnLineSegment
                L10_10408 = myHero
                L11_10409 = A0_10398.Q
                L11_10409 = L11_10409.Object
                L12_10410 = L2_10400
                L11_10409 = L9_10407(L10_10408, L11_10409, L12_10410)
                L12_10410 = Vector
                L13_10411 = L6_10404.x
                L14_10412 = A0_10398.Q
                L14_10412 = L14_10412.Object
                L14_10412 = L14_10412.y
                L15_10413 = L6_10404.y
                L12_10410 = L12_10410(L13_10411, L14_10412, L15_10413)
                L6_10404 = L12_10410
                L12_10410 = Vector
                L13_10411 = L9_10407.x
                L14_10412 = A0_10398.Q
                L14_10412 = L14_10412.Object
                L14_10412 = L14_10412.y
                L15_10413 = L9_10407.y
                L12_10410 = L12_10410(L13_10411, L14_10412, L15_10413)
                L9_10407 = L12_10410
                if L8_10406 and L11_10409 then
                  L12_10410 = GetDistanceSqr
                  L13_10411 = L6_10404
                  L14_10412 = A0_10398.Q
                  L14_10412 = L14_10412.Object
                  L12_10410 = L12_10410(L13_10411, L14_10412)
                  L13_10411 = GetDistanceSqr
                  L14_10412 = L2_10400
                  L15_10413 = A0_10398.Q
                  L15_10413 = L15_10413.Object
                  L13_10411 = L13_10411(L14_10412, L15_10413)
                  if L12_10410 > L13_10411 then
                    L12_10410 = GetDistanceSqr
                    L13_10411 = myHero
                    L14_10412 = L6_10404
                    L12_10410 = L12_10410(L13_10411, L14_10412)
                    L13_10411 = math
                    L13_10411 = L13_10411.pow
                    L14_10412 = myHero
                    L14_10412 = L14_10412.ms
                    L14_10412 = L14_10412 * L4_10402
                    L15_10413 = 2
                    L13_10411 = L13_10411(L14_10412, L15_10413)
                    if L12_10410 < L13_10411 then
                      L12_10410 = A0_10398.Q
                      L12_10410.CatchPosition = L6_10404
                      L12_10410 = A0_10398.Q
                      L13_10411 = ARGB
                      L14_10412 = 255
                      L15_10413 = 0
                      L16_10414 = 0
                      L17_10415 = 255
                      L13_10411 = L13_10411(L14_10412, L15_10413, L16_10414, L17_10415)
                      L12_10410.CatchColor = L13_10411
                      L12_10410 = A0_10398.Menu
                      L12_10410 = L12_10410.General
                      L12_10410 = L12_10410.CatchQMovement
                      if L12_10410 then
                        L12_10410 = GetDistanceSqr
                        L13_10411 = L9_10407
                        L14_10412 = L2_10400
                        L12_10410 = L12_10410(L13_10411, L14_10412)
                        L13_10411 = math
                        L13_10411 = L13_10411.pow
                        L14_10412 = A0_10398.Q
                        L14_10412 = L14_10412.Width
                        L15_10413 = 2
                        L13_10411 = L13_10411(L14_10412, L15_10413)
                        if L12_10410 > L13_10411 then
                          L12_10410 = OrbwalkManager
                          L13_10411 = L12_10410
                          L12_10410 = L12_10410.DisableAttacks
                          L12_10410(L13_10411)
                          L12_10410 = OrbwalkManager
                          L13_10411 = L12_10410
                          L12_10410 = L12_10410.DisableMovement
                          L12_10410(L13_10411)
                          L12_10410 = OrbwalkManager
                          L13_10411 = L12_10410
                          L12_10410 = L12_10410.CanMove
                          L12_10410 = L12_10410(L13_10411)
                          if L12_10410 then
                            L12_10410 = myHero
                            L13_10411 = L12_10410
                            L12_10410 = L12_10410.MoveTo
                            L14_10412 = A0_10398.Q
                            L14_10412 = L14_10412.CatchPosition
                            L14_10412 = L14_10412.x
                            L15_10413 = A0_10398.Q
                            L15_10413 = L15_10413.CatchPosition
                            L15_10413 = L15_10413.z
                            L12_10410(L13_10411, L14_10412, L15_10413)
                          end
                        end
                      end
                    else
                      L12_10410 = GetDistanceSqr
                      L13_10411 = myHero
                      L14_10412 = L6_10404
                      L12_10410 = L12_10410(L13_10411, L14_10412)
                      L13_10411 = math
                      L13_10411 = L13_10411.pow
                      L14_10412 = myHero
                      L14_10412 = L14_10412.ms
                      L14_10412 = L14_10412 * L4_10402
                      L14_10412 = 450 + L14_10412
                      L15_10413 = 2
                      L13_10411 = L13_10411(L14_10412, L15_10413)
                      if L12_10410 < L13_10411 then
                        L12_10410 = A0_10398.Q
                        L12_10410.CatchPosition = L6_10404
                        L12_10410 = OrbwalkManager
                        L13_10411 = L12_10410
                        L12_10410 = L12_10410.IsCombo
                        L12_10410 = L12_10410(L13_10411)
                        if L12_10410 then
                          L12_10410 = A0_10398.Menu
                          L12_10410 = L12_10410.Combo
                          L12_10410 = L12_10410.CatchQR
                          if L12_10410 then
                            L12_10410 = GetDistanceSqr
                            L13_10411 = L9_10407
                            L14_10412 = L2_10400
                            L12_10410 = L12_10410(L13_10411, L14_10412)
                            L13_10411 = math
                            L13_10411 = L13_10411.pow
                            L14_10412 = A0_10398.Q
                            L14_10412 = L14_10412.Width
                            L15_10413 = 2
                            L13_10411 = L13_10411(L14_10412, L15_10413)
                            if L12_10410 > L13_10411 then
                              L12_10410 = GetBestCombo
                              L13_10411 = L1_10399
                              L14_10412 = A0_10398
                              L16_10414 = L12_10410(L13_10411, L14_10412)
                              L17_10415 = A0_10398.R
                              L17_10415 = L17_10415.IsReady
                              L17_10415 = L17_10415(L17_10415)
                              if L17_10415 then
                                L17_10415 = L1_10399.health
                                if L16_10414 >= L17_10415 then
                                  L17_10415 = A0_10398.R
                                  L17_10415 = L17_10415.ObjectsInArea
                                  L17_10415 = L17_10415(L17_10415, GetEnemyHeroes())
                                  L17_10415 = #L17_10415
                                  if L17_10415 < 3 then
                                    L17_10415 = myHero
                                    L17_10415 = L17_10415 + Vector(Vector(A0_10398.Q.CatchPosition) - Vector(myHero)):normalized() * GetDistance(myHero, A0_10398.Q.CatchPosition) * 1.2
                                    if not Collides(L17_10415) then
                                      A0_10398.R:CastToVector(L17_10415)
                                    end
                                  end
                                end
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  class("__Zed")
  function __Zed.__init(A0_10416)
    local L1_10417, L2_10418, L3_10419, L4_10420, L5_10421, L6_10422, L7_10423, L8_10424, L9_10425, L10_10426, L11_10427, L12_10428, L13_10429, L14_10430, L15_10431, L16_10432, L17_10433, L18_10434, L19_10435, L20_10436, L21_10437, L22_10438, L23_10439, L24_10440, L25_10441, L26_10442, L27_10443, L28_10444, L29_10445, L30_10446, L31_10447, L32_10448, L33_10449, L34_10450, L35_10451, L36_10452, L37_10453, L38_10454, L39_10455, L40_10456, L41_10457, L42_10458, L43_10459, L44_10460, L45_10461, L46_10462, L47_10463, L48_10464, L49_10465, L50_10466, L51_10467, L52_10468, L53_10469, L54_10470, L55_10471, L56_10472, L57_10473, L58_10474, L59_10475, L60_10476, L61_10477, L62_10478, L63_10479, L64_10480, L65_10481, L66_10482, L67_10483, L68_10484, L69_10485, L70_10486, L71_10487, L72_10488, L73_10489, L74_10490, L75_10491, L76_10492, L77_10493, L78_10494, L79_10495, L80_10496, L81_10497, L82_10498, L83_10499, L84_10500, L85_10501, L86_10502, L87_10503, L88_10504, L89_10505, L90_10506, L91_10507, L92_10508, L93_10509, L94_10510, L95_10511, L96_10512, L97_10513, L98_10514, L99_10515, L100_10516, L101_10517, L102_10518, L103_10519, L104_10520, L105_10521, L106_10522, L107_10523, L108_10524, L109_10525, L110_10526, L111_10527, L112_10528, L113_10529, L114_10530, L115_10531, L116_10532, L117_10533, L118_10534, L119_10535, L120_10536, L121_10537, L122_10538, L123_10539, L124_10540, L125_10541, L126_10542, L127_10543, L128_10544, L129_10545, L130_10546, L131_10547, L132_10548, L133_10549, L134_10550, L135_10551, L136_10552, L137_10553, L138_10554, L139_10555, L140_10556, L141_10557, L142_10558, L143_10559, L144_10560, L145_10561, L146_10562, L147_10563, L148_10564, L149_10565, L150_10566, L151_10567, L152_10568, L153_10569, L154_10570, L155_10571, L156_10572, L157_10573, L158_10574, L159_10575, L160_10576, L161_10577, L162_10578, L163_10579, L164_10580, L165_10581, L166_10582, L167_10583, L168_10584, L169_10585, L170_10586, L171_10587, L172_10588, L173_10589, L174_10590, L175_10591, L176_10592, L177_10593, L178_10594, L179_10595, L180_10596, L181_10597, L182_10598, L183_10599, L184_10600, L185_10601, L186_10602, L187_10603, L188_10604, L189_10605, L190_10606, L191_10607, L192_10608, L193_10609, L194_10610, L195_10611, L196_10612, L197_10613, L198_10614, L199_10615, L200_10616, L201_10617, L202_10618, L203_10619, L204_10620, L205_10621, L206_10622, L207_10623, L208_10624, L209_10625, L210_10626, L211_10627, L212_10628, L213_10629, L214_10630, L215_10631, L216_10632, L217_10633, L218_10634, L219_10635, L220_10636, L221_10637, L222_10638, L223_10639, L224_10640, L225_10641, L226_10642, L227_10643, L228_10644, L229_10645, L230_10646, L231_10647, L232_10648, L233_10649, L234_10650, L235_10651, L236_10652, L237_10653, L238_10654, L239_10655, L240_10656, L241_10657, L242_10658, L243_10659, L244_10660, L245_10661, L246_10662, L247_10663, L248_10664, L249_10665, L250_10666, L251_10667, L252_10668, L253_10669, L254_10670
    A0_10416.ScriptName = "BioZed Reborn"
    A0_10416.Author = "Da Vinci"
    A0_10416.MenuLoaded = false
    A0_10416.Menu = nil
    A0_10416.TS = nil
    A0_10416.wShadow = nil
    A0_10416.rShadow = nil
    A0_10416.wShadowEndPosition = nil
    A0_10416.rShadowEndPosition = nil
    L1_10417 = {}
    A0_10416.Shadows = L1_10417
    A0_10416.IsDashing = false
    L1_10417 = {}
    A0_10416.PassiveTable = L1_10417
  end
  function __Zed.OnTick(A0_10671)
    local L1_10672, L2_10673, L3_10674, L4_10675, L5_10676, L6_10677
    if not L1_10672 then
      return
    end
    if not L1_10672 then
    elseif not L1_10672 then
      return
    end
    L1_10672.range = L2_10673
    L1_10672(L2_10673)
    if L1_10672 then
      L1_10672.Type = L2_10673
    else
      L1_10672.Type = L2_10673
    end
    if L1_10672 then
      L1_10672.Type = L2_10673
    else
      L1_10672.Type = L2_10673
    end
    if L1_10672 then
      if not L1_10672 then
        L6_10677 = L2_10673()
        for L4_10675, L5_10676 in L1_10672(L2_10673, L3_10674, L4_10675, L5_10676, L6_10677, L2_10673()) do
          L6_10677 = A0_10671.TargetHaveUltimate
          L6_10677 = L6_10677(A0_10671, L5_10676)
          if L6_10677 then
            L6_10677 = A0_10671.TS
            L6_10677.target = L5_10676
          end
        end
      end
      if L1_10672 then
        if L1_10672 then
          L6_10677 = L3_10674()
          for L5_10676, L6_10677 in L2_10673(L3_10674, L4_10675, L5_10676, L6_10677, L3_10674()) do
            if IsValidTarget(L6_10677, A0_10671.TS.range) and L6_10677.networkID ~= A0_10671.TS.target.networkID then
              if L1_10672 == nil then
              else
              end
            end
          end
          if L2_10673 then
            L2_10673.target = L1_10672
          end
        end
      end
    end
    if L1_10672 > 0 then
      if L1_10672 ~= nil then
        if L1_10672 ~= nil then
          if L1_10672 and L2_10673 then
            if L3_10674 ~= L4_10675 then
              A0_10671.wShadow = L1_10672
              A0_10671.rShadow = L2_10673
            end
          end
        end
      elseif L1_10672 ~= nil then
        if L1_10672 == nil then
          A0_10671.wShadow = L1_10672
        end
      elseif L1_10672 == nil then
        if L1_10672 ~= nil then
          A0_10671.rShadow = L1_10672
        end
      elseif L1_10672 == nil then
        if L1_10672 == nil then
        end
      end
    end
    if not L1_10672 then
    elseif L1_10672 then
      L1_10672(L2_10673)
    end
    if L1_10672 then
      L1_10672(L2_10673, L3_10674, L4_10675)
      if L1_10672 then
        if L1_10672 then
          L1_10672(L2_10673, L3_10674)
        else
          L1_10672(L2_10673)
        end
      end
      if L1_10672 then
        L6_10677 = L2_10673()
        for L4_10675, L5_10676 in L1_10672(L2_10673, L3_10674, L4_10675, L5_10676, L6_10677, L2_10673()) do
          L6_10677 = IsValidTarget
          L6_10677 = L6_10677(L5_10676, A0_10671.TS.range)
          if L6_10677 then
            L6_10677 = A0_10671.E
            L6_10677 = L6_10677.IsReady
            L6_10677 = L6_10677(L6_10677)
            if L6_10677 then
              L6_10677 = GetDistanceSqr
              L6_10677 = L6_10677(myHero, L5_10676)
              if L6_10677 > math.pow(A0_10671.E.Range, 2) then
                L6_10677 = A0_10671.CastE
                L6_10677(A0_10671, L5_10676)
              end
            end
          end
        end
      end
    end
    if L1_10672 then
      L1_10672(L2_10673)
    elseif L1_10672 then
      L1_10672(L2_10673)
    elseif L1_10672 then
      L1_10672(L2_10673)
    elseif L1_10672 then
      L1_10672(L2_10673)
    end
    L1_10672(L2_10673)
    if L1_10672 then
      if L1_10672 then
        L6_10677 = L2_10673()
        for L4_10675, L5_10676 in L1_10672(L2_10673, L3_10674, L4_10675, L5_10676, L6_10677, L2_10673()) do
          L6_10677 = IsValidTarget
          L6_10677 = L6_10677(L5_10676, A0_10671.TS.range)
          if L6_10677 then
            L6_10677 = A0_10671.Q
            L6_10677 = L6_10677.IsReady
            L6_10677 = L6_10677(L6_10677)
            if L6_10677 then
              L6_10677 = A0_10671.CastQ
              L6_10677(A0_10671, L5_10676)
            end
          end
        end
      end
    end
    if L1_10672 then
      if L1_10672 then
        L6_10677 = L2_10673()
        for L4_10675, L5_10676 in L1_10672(L2_10673, L3_10674, L4_10675, L5_10676, L6_10677, L2_10673()) do
          L6_10677 = IsValidTarget
          L6_10677 = L6_10677(L5_10676, A0_10671.TS.range)
          if L6_10677 then
            L6_10677 = A0_10671.E
            L6_10677 = L6_10677.IsReady
            L6_10677 = L6_10677(L6_10677)
            if L6_10677 then
              L6_10677 = A0_10671.CastE
              L6_10677(A0_10671, L5_10676)
            end
          end
        end
      end
    end
  end
  function __Zed.NearestShadow(A0_10678, A1_10679)
    local L2_10680
    L2_10680 = 0
    L2_10680 = _ENV[L2_10680]
    if not L2_10680 then
      return
    end
    L2_10680 = L2_10680 * L2_10680
    L2_10680 = nil
    if A1_10679 then
      for _FORV_6_, _FORV_7_ in ipairs(A0_10678.Shadows) do
        if _FORV_7_ and _FORV_7_.valid and not _FORV_7_.dead then
          if L2_10680 == nil then
            L2_10680 = _FORV_7_
          elseif math.pow(A1_10679.x - _FORV_7_.x, 2) + math.pow(A1_10679.z - _FORV_7_.z, 2) < math.pow(L2_10680.x - _FORV_7_.x, 2) + math.pow(L2_10680.z - _FORV_7_.z, 2) then
            L2_10680 = _FORV_7_
          end
        end
      end
    end
    return L2_10680
  end
  function __Zed.OnProcessSpell(A0_10681, A1_10682, A2_10683)
    local L3_10684, L4_10685
    L3_10684 = 0
    L3_10684 = _ENV[L3_10684]
    if not L3_10684 then
      return
    end
    L3_10684 = L3_10684 * L3_10684
    if A1_10682 and A2_10683 then
      L3_10684 = A1_10682.team
      if L3_10684 then
        L3_10684 = A2_10683.name
        if L3_10684 then
          L3_10684 = A1_10682.type
          if L3_10684 then
            L3_10684 = A2_10683.name
            L4_10685 = L3_10684
            L3_10684 = L3_10684.lower
            L3_10684 = L3_10684(L4_10685)
            L4_10685 = L3_10684.find
            L4_10685 = L4_10685(L3_10684, "zhonyas")
            if L4_10685 then
              L4_10685 = A1_10682.team
              if L4_10685 ~= myHero.team then
                L4_10685 = myHero
                L4_10685 = L4_10685.type
                if L4_10685 == A1_10682.type then
                  L4_10685 = A0_10681.ForceW
                  L4_10685(A0_10681, A1_10682)
                end
              end
            end
            L4_10685 = A1_10682.isMe
            if L4_10685 then
              L4_10685 = A0_10681.W
              L4_10685 = L4_10685.GetSpellData
              L4_10685 = L4_10685(L4_10685)
              L4_10685 = L4_10685.name
              L4_10685 = L4_10685.lower
              L4_10685 = L4_10685(L4_10685)
              if L4_10685 == L3_10684 then
                if L3_10684 == "zedw2" then
                  L4_10685 = A0_10681.wShadow
                  if L4_10685 == nil then
                    L4_10685 = Vector
                    L4_10685 = L4_10685(myHero)
                    A0_10681.wShadowEndPosition = L4_10685
                  else
                    L4_10685 = Vector
                    L4_10685 = L4_10685(myHero)
                    A0_10681.wShadowEndPosition = L4_10685
                  end
                else
                  L4_10685 = Vector
                  L4_10685 = L4_10685(A2_10683.endPos)
                  if IsWall(D3DXVECTOR3(L4_10685.x, L4_10685.y, L4_10685.z)) then
                    for _FORV_8_ = A0_10681.W.Range, 0, -20 do
                      if not IsWall(D3DXVECTOR3((myHero + Vector(Vector(L4_10685) - Vector(myHero)):normalized() * _FORV_8_).x, (myHero + Vector(Vector(L4_10685) - Vector(myHero)):normalized() * _FORV_8_).y, (myHero + Vector(Vector(L4_10685) - Vector(myHero)):normalized() * _FORV_8_).z)) then
                        L4_10685 = myHero + Vector(Vector(L4_10685) - Vector(myHero)):normalized() * _FORV_8_
                        break
                      end
                    end
                  end
                  A0_10681.wShadow = nil
                  A0_10681.W.LastCastTime = os.clock()
                  A0_10681.wShadowEndPosition = L4_10685
                  DelayAction(function()
                    local L0_10686, L1_10687, L2_10688, L3_10689, L4_10690, L5_10691, L6_10692, L7_10693, L8_10694, L9_10695, L10_10696, L11_10697, L12_10698, L13_10699, L14_10700, L15_10701, L16_10702, L17_10703, L18_10704, L19_10705, L20_10706, L21_10707, L22_10708, L23_10709, L24_10710, L25_10711, L26_10712, L27_10713, L28_10714, L29_10715, L30_10716, L31_10717, L32_10718, L33_10719, L34_10720, L35_10721, L36_10722, L37_10723, L38_10724, L39_10725, L40_10726, L41_10727, L42_10728, L43_10729, L44_10730, L45_10731, L46_10732, L47_10733, L48_10734, L49_10735, L50_10736, L51_10737, L52_10738, L53_10739, L54_10740, L55_10741, L56_10742, L57_10743, L58_10744, L59_10745, L60_10746, L61_10747, L62_10748, L63_10749, L64_10750, L65_10751, L66_10752, L67_10753, L68_10754, L69_10755, L70_10756, L71_10757, L72_10758, L73_10759, L74_10760, L75_10761, L76_10762, L77_10763, L78_10764, L79_10765, L80_10766, L81_10767, L82_10768, L83_10769, L84_10770, L85_10771, L86_10772, L87_10773, L88_10774, L89_10775, L90_10776, L91_10777, L92_10778, L93_10779, L94_10780, L95_10781, L96_10782, L97_10783, L98_10784, L99_10785, L100_10786, L101_10787, L102_10788, L103_10789, L104_10790, L105_10791, L106_10792, L107_10793, L108_10794, L109_10795, L110_10796, L111_10797, L112_10798, L113_10799, L114_10800, L115_10801, L116_10802, L117_10803, L118_10804, L119_10805, L120_10806, L121_10807, L122_10808, L123_10809, L124_10810, L125_10811, L126_10812, L127_10813, L128_10814, L129_10815, L130_10816, L131_10817, L132_10818, L133_10819, L134_10820, L135_10821, L136_10822, L137_10823, L138_10824, L139_10825, L140_10826, L141_10827, L142_10828, L143_10829, L144_10830, L145_10831, L146_10832, L147_10833, L148_10834, L149_10835, L150_10836, L151_10837, L152_10838, L153_10839, L154_10840, L155_10841, L156_10842, L157_10843, L158_10844, L159_10845, L160_10846, L161_10847, L162_10848, L163_10849, L164_10850, L165_10851, L166_10852, L167_10853, L168_10854, L169_10855, L170_10856, L171_10857, L172_10858, L173_10859, L174_10860, L175_10861, L176_10862, L177_10863, L178_10864, L179_10865, L180_10866, L181_10867, L182_10868, L183_10869, L184_10870, L185_10871, L186_10872, L187_10873, L188_10874, L189_10875, L190_10876, L191_10877, L192_10878, L193_10879, L194_10880, L195_10881, L196_10882, L197_10883, L198_10884, L199_10885, L200_10886, L201_10887, L202_10888, L203_10889, L204_10890, L205_10891, L206_10892, L207_10893, L208_10894, L209_10895, L210_10896, L211_10897, L212_10898, L213_10899, L214_10900, L215_10901, L216_10902, L217_10903, L218_10904, L219_10905, L220_10906, L221_10907, L222_10908, L223_10909, L224_10910, L225_10911, L226_10912, L227_10913, L228_10914, L229_10915, L230_10916, L231_10917, L232_10918, L233_10919, L234_10920, L235_10921, L236_10922, L237_10923, L238_10924, L239_10925, L240_10926, L241_10927, L242_10928, L243_10929, L244_10930, L245_10931, L246_10932, L247_10933, L248_10934, L249_10935, L250_10936, L251_10937, L252_10938, L253_10939, L254_10940
                    A0_10681.wShadow = nil
                    A0_10681.wShadowEndPosition = nil
                  end, A0_10681.W.Delay + GetDistance(myHero, L4_10685) / A0_10681.W.Speed + 4.9)
                end
              end
              L4_10685 = A0_10681.R
              L4_10685 = L4_10685.GetSpellData
              L4_10685 = L4_10685(L4_10685)
              L4_10685 = L4_10685.name
              L4_10685 = L4_10685.lower
              L4_10685 = L4_10685(L4_10685)
              if L4_10685 == L3_10684 then
                if L3_10684 == "zedr2" then
                  L4_10685 = A0_10681.rShadow
                  if L4_10685 == nil then
                    L4_10685 = Vector
                    L4_10685 = L4_10685(myHero)
                    A0_10681.rShadowEndPosition = L4_10685
                  else
                    L4_10685 = Vector
                    L4_10685 = L4_10685(myHero)
                    A0_10681.rShadowEndPosition = L4_10685
                  end
                else
                  A0_10681.rShadow = nil
                  L4_10685 = Vector
                  L4_10685 = L4_10685(myHero)
                  A0_10681.rShadowEndPosition = L4_10685
                  L4_10685 = DelayAction
                  L4_10685(function()
                    local L0_10941, L1_10942, L2_10943, L3_10944, L4_10945, L5_10946, L6_10947, L7_10948, L8_10949, L9_10950, L10_10951, L11_10952, L12_10953, L13_10954, L14_10955, L15_10956, L16_10957, L17_10958, L18_10959, L19_10960, L20_10961, L21_10962, L22_10963, L23_10964, L24_10965, L25_10966, L26_10967, L27_10968, L28_10969, L29_10970, L30_10971, L31_10972, L32_10973, L33_10974, L34_10975, L35_10976, L36_10977, L37_10978, L38_10979, L39_10980, L40_10981, L41_10982, L42_10983, L43_10984, L44_10985, L45_10986, L46_10987, L47_10988, L48_10989, L49_10990, L50_10991, L51_10992, L52_10993, L53_10994, L54_10995, L55_10996, L56_10997, L57_10998, L58_10999, L59_11000, L60_11001, L61_11002, L62_11003, L63_11004, L64_11005, L65_11006, L66_11007, L67_11008, L68_11009, L69_11010, L70_11011, L71_11012, L72_11013, L73_11014, L74_11015, L75_11016, L76_11017, L77_11018, L78_11019, L79_11020, L80_11021, L81_11022, L82_11023, L83_11024, L84_11025, L85_11026, L86_11027, L87_11028, L88_11029, L89_11030, L90_11031, L91_11032, L92_11033, L93_11034, L94_11035, L95_11036, L96_11037, L97_11038, L98_11039, L99_11040, L100_11041, L101_11042, L102_11043, L103_11044, L104_11045, L105_11046, L106_11047, L107_11048, L108_11049, L109_11050, L110_11051, L111_11052, L112_11053, L113_11054, L114_11055, L115_11056, L116_11057, L117_11058, L118_11059, L119_11060, L120_11061, L121_11062, L122_11063, L123_11064, L124_11065, L125_11066, L126_11067, L127_11068, L128_11069, L129_11070, L130_11071, L131_11072, L132_11073, L133_11074, L134_11075, L135_11076, L136_11077, L137_11078, L138_11079, L139_11080, L140_11081, L141_11082, L142_11083, L143_11084, L144_11085, L145_11086, L146_11087, L147_11088, L148_11089, L149_11090, L150_11091, L151_11092, L152_11093, L153_11094, L154_11095, L155_11096, L156_11097, L157_11098, L158_11099, L159_11100, L160_11101, L161_11102, L162_11103, L163_11104, L164_11105, L165_11106, L166_11107, L167_11108, L168_11109, L169_11110, L170_11111, L171_11112, L172_11113, L173_11114, L174_11115, L175_11116, L176_11117, L177_11118, L178_11119, L179_11120, L180_11121, L181_11122, L182_11123, L183_11124, L184_11125, L185_11126, L186_11127, L187_11128, L188_11129, L189_11130, L190_11131, L191_11132, L192_11133, L193_11134, L194_11135, L195_11136, L196_11137, L197_11138, L198_11139, L199_11140, L200_11141, L201_11142, L202_11143, L203_11144, L204_11145, L205_11146, L206_11147, L207_11148, L208_11149, L209_11150, L210_11151, L211_11152, L212_11153, L213_11154, L214_11155, L215_11156, L216_11157, L217_11158, L218_11159, L219_11160, L220_11161, L221_11162, L222_11163, L223_11164, L224_11165, L225_11166, L226_11167, L227_11168, L228_11169, L229_11170, L230_11171, L231_11172, L232_11173, L233_11174, L234_11175, L235_11176, L236_11177, L237_11178, L238_11179, L239_11180, L240_11181, L241_11182, L242_11183, L243_11184, L244_11185, L245_11186, L246_11187, L247_11188, L248_11189, L249_11190, L250_11191, L251_11192, L252_11193, L253_11194, L254_11195
                    A0_10681.rShadow = nil
                    A0_10681.rShadowEndPosition = nil
                  end, 7.5)
                  L4_10685 = IsValidTarget
                  L4_10685 = L4_10685(A2_10683.target)
                  if L4_10685 then
                    L4_10685 = A0_10681.R
                    L4_10685.target = false
                    L4_10685 = A0_10681.R
                    L4_10685.target = A2_10683.target
                  end
                  A0_10681.IsDashing = true
                  L4_10685 = A0_10681.R
                  L4_10685.LastCastTime = os.clock()
                end
              end
            end
          end
        end
      end
    end
  end
  function __Zed.OnCreateObj(A0_11196, A1_11197)
    if not _ENV[0] then
      return
    end
    if A1_11197 and A1_11197.name then
      if A1_11197.name:lower() == "shadow" and A1_11197.team and A1_11197.team == myHero.team and (A0_11196.W.Shadow == nil and os.clock() - A0_11196.W.LastCastTime < 0.6 and not A0_11196.IsDashing or A0_11196.R.Shadow == nil and os.clock() - A0_11196.R.LastCastTime < 0.1) then
        A1_11197.LastAnimation = "Idle1"
        A1_11197.Time = os.clock() + 0.4
        table.insert(A0_11196.Shadows, A1_11197)
      end
      if A1_11197.name:lower():find(myHero.charName:lower()) and A1_11197.name:lower():find("passive") and A1_11197.name:lower():find("proc") and A1_11197.name:lower():find("tar") and OrbwalkManager.AA.LastTarget and GetDistanceSqr(OrbwalkManager.AA.LastTarget, A1_11197) < 10000 then
        table.insert(A0_11196.PassiveTable, {
          Object = OrbwalkManager.AA.LastTarget
        })
        DelayAction(function()
          table.remove(A0_11196.PassiveTable, #A0_11196.PassiveTable)
        end, 10)
      end
      if A1_11197.name:lower():find(myHero.charName:lower()) and A1_11197.name:lower():find("base_r") and A1_11197.name:lower():find("buf_tell") and A0_11196.R.target and 10000 > GetDistanceSqr(A0_11196.R.target, A1_11197) then
        PrintAlert(A0_11196.R.target.charName:upper() .. " DEAD!!!", 4, 255, 0, 0)
        A0_11196.R.isDead = true
      end
      if A1_11197.name:lower():find(myHero.charName:lower()) and not A1_11197.name:lower():find("indicator") and A0_11196.Menu.General.Developer then
        print("CREATED " .. A1_11197.name)
      end
    end
  end
  function __Zed.OnDeleteObj(A0_11198, A1_11199)
    if not _ENV[0] then
      return
    end
    if A1_11199 and A1_11199.name then
      if A1_11199.name:lower():find("zed_ult_delayeddamage") and A0_11198.R.target and GetDistanceSqr(A0_11198.R.target, A1_11199) < 10000 then
        A0_11198.R.target = nil
        A0_11198.R.isDead = false
      end
      if A1_11199.name:lower():find(myHero.charName:lower()) and not A1_11199.name:lower():find("indicator") and A0_11198.Menu.General.Developer then
        print("Deleted " .. A1_11199.name)
      end
      if A1_11199.name:lower():find(myHero.charName:lower()) and A1_11199.name:lower():find("r_dash") then
        A0_11198.IsDashing = false
      end
    end
  end
  function __Zed.OnAnimation(A0_11200, A1_11201, A2_11202)
    local L3_11203, L4_11204, L5_11205, L6_11206
    if not L3_11203 then
      return
    end
    if A1_11201 and A2_11202 then
      if L3_11203 then
        if L3_11203 == "shadow" then
          for L6_11206, _FORV_7_ in L3_11203(L4_11204) do
            if _FORV_7_.networkID == A1_11201.networkID then
              if A2_11202:lower():find("death") then
                if A0_11200.wShadow ~= nil and A0_11200.wShadow.networkID == A1_11201.networkID then
                  A0_11200.wShadow = nil
                  A0_11200.wShadowEndPosition = nil
                end
                if A0_11200.rShadow ~= nil and A0_11200.rShadow.networkID == A1_11201.networkID then
                  A0_11200.rShadow = nil
                  A0_11200.rShadowEndPosition = nil
                end
                table.remove(A0_11200.Shadows, L6_11206)
                break
              end
              _FORV_7_.LastAnimation = A2_11202
            end
          end
        end
      end
    end
  end
  function __Zed.OnWndMsg(A0_11207, A1_11208, A2_11209)
    local L3_11210
    L3_11210 = 0
    L3_11210 = _ENV[L3_11210]
    if not L3_11210 then
      return
    end
    L3_11210 = L3_11210 * L3_11210
    L3_11210 = A0_11207.Menu
    if L3_11210 ~= nil then
      L3_11210 = A0_11207.MenuLoaded
    elseif not L3_11210 then
      return
    end
    L3_11210 = KEY_UP
    if A1_11208 == L3_11210 then
      L3_11210 = A0_11207.Menu
      L3_11210 = L3_11210.Keys
      L3_11210 = L3_11210._param
      L3_11210 = L3_11210[A0_11207.Menu.Keys:getParamIndex("Switcher")]
      L3_11210 = L3_11210.key
      if A2_11209 == L3_11210 then
        L3_11210 = A0_11207.Menu
        L3_11210 = L3_11210.Combo
        L3_11210.Mode = A0_11207.Menu.Combo.Mode + 1
        L3_11210 = A0_11207.Menu
        L3_11210 = L3_11210.Combo
        L3_11210 = L3_11210.Mode
        if L3_11210 == 4 then
          L3_11210 = A0_11207.Menu
          L3_11210 = L3_11210.Combo
          L3_11210.Mode = 1
        end
      end
    end
  end
  function __Zed.OnDraw(A0_11211)
    local L1_11212, L2_11213, L3_11214, L4_11215, L5_11216, L6_11217, L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223
    if not L1_11212 then
      return
    end
    if not L1_11212 then
    elseif not L1_11212 then
      return
    end
    if L1_11212 then
      L12_11223 = L2_11213()
      for L4_11215, L5_11216 in L1_11212(L2_11213, L3_11214, L4_11215, L5_11216, L6_11217, L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L2_11213()) do
        L6_11217 = WorldToScreen
        L7_11218 = D3DXVECTOR3
        L12_11223 = L7_11218(L8_11219, L9_11220, L10_11221)
        L6_11217 = L6_11217(L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L7_11218(L8_11219, L9_11220, L10_11221))
        L7_11218 = OnScreen
        L7_11218 = L7_11218(L8_11219, L9_11220)
        if L7_11218 then
          L7_11218 = IsValidTarget
          L7_11218 = L7_11218(L8_11219)
          if L7_11218 then
            L7_11218 = L5_11216.visible
            if L7_11218 then
              L7_11218 = A0_11211.GetBestCombo
              L11_11222 = L7_11218(L8_11219, L9_11220)
              L12_11223 = L5_11216.health
              if L11_11222 >= L12_11223 then
                L12_11223 = DrawLineHPBar
                L12_11223(L11_11222, "KILLABLE", L5_11216, true)
              else
                L12_11223 = ""
                if L7_11218 then
                  L12_11223 = "Q"
                end
                if L8_11219 then
                  L12_11223 = L12_11223 .. "W"
                end
                if L9_11220 then
                  L12_11223 = L12_11223 .. "E"
                end
                if L10_11221 then
                  L12_11223 = L12_11223 .. "R"
                end
                DrawLineHPBar(L11_11222, L12_11223, L5_11216, true)
              end
            end
          end
        end
      end
    end
    if L1_11212 then
      L12_11223 = L2_11213()
      for L4_11215, L5_11216 in L1_11212(L2_11213, L3_11214, L4_11215, L5_11216, L6_11217, L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L2_11213()) do
        L6_11217 = WorldToScreen
        L7_11218 = D3DXVECTOR3
        L12_11223 = L7_11218(L8_11219, L9_11220, L10_11221)
        L6_11217 = L6_11217(L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L7_11218(L8_11219, L9_11220, L10_11221))
        L7_11218 = OnScreen
        L7_11218 = L7_11218(L8_11219, L9_11220)
        if L7_11218 then
          L7_11218 = IsValidTarget
          L7_11218 = L7_11218(L8_11219)
          if L7_11218 then
            L7_11218 = L5_11216.visible
            if L7_11218 then
              L7_11218 = PercentageHealth
              L7_11218 = L7_11218(L8_11219)
              if L7_11218 <= 50 then
                L7_11218 = A0_11211.PassiveTable
                L7_11218 = #L7_11218
                if L7_11218 > 0 then
                  L7_11218 = 0
                  for L11_11222 = #L8_11219, 1, -1 do
                    L12_11223 = A0_11211.PassiveTable
                    L12_11223 = L12_11223[L11_11222]
                    if L12_11223.Object.networkID == L5_11216.networkID then
                      L7_11218 = L7_11218 + 1
                      break
                    end
                  end
                  if L7_11218 == 0 then
                    L11_11222 = L6_11217.x
                    L12_11223 = L6_11217.y
                    L8_11219(L9_11220, L10_11221, L11_11222, L12_11223, ARGB(255, 255, 255, 255))
                  end
                else
                  L7_11218 = DrawText
                  L11_11222 = L6_11217.y
                  L12_11223 = ARGB
                  L12_11223 = L12_11223(255, 255, 255, 255)
                  L7_11218(L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L12_11223(255, 255, 255, 255))
                end
              end
            end
          end
        end
      end
    end
    if L1_11212 then
      if L1_11212 ~= nil then
        L4_11215 = A0_11211.wShadow
        L4_11215 = L4_11215.y
        L5_11216 = A0_11211.wShadow
        L5_11216 = L5_11216.z
        L12_11223 = L2_11213(L3_11214, L4_11215, L5_11216)
        L4_11215 = string
        L4_11215 = L4_11215.sub
        L5_11216 = tostring
        L6_11217 = math
        L6_11217 = L6_11217.max
        L7_11218 = os
        L7_11218 = L7_11218.clock
        L7_11218 = L7_11218()
        L7_11218 = L7_11218 - L8_11219
        L7_11218 = 4 - L7_11218
        L12_11223 = L6_11217(L7_11218, L8_11219)
        L5_11216 = L5_11216(L6_11217, L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L6_11217(L7_11218, L8_11219))
        L6_11217 = 0
        L7_11218 = 3
        L4_11215 = L4_11215(L5_11216, L6_11217, L7_11218)
        L5_11216 = "s"
        L4_11215 = 25
        L5_11216 = L1_11212.x
        L6_11217 = L1_11212.y
        L7_11218 = ARGB
        L11_11222 = 255
        L12_11223 = L7_11218(L8_11219, L9_11220, L10_11221, L11_11222)
        L2_11213(L3_11214, L4_11215, L5_11216, L6_11217, L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L7_11218(L8_11219, L9_11220, L10_11221, L11_11222))
      end
      if L1_11212 ~= nil then
        L4_11215 = A0_11211.rShadow
        L4_11215 = L4_11215.y
        L5_11216 = A0_11211.rShadow
        L5_11216 = L5_11216.z
        L12_11223 = L2_11213(L3_11214, L4_11215, L5_11216)
        L4_11215 = string
        L4_11215 = L4_11215.sub
        L5_11216 = tostring
        L6_11217 = math
        L6_11217 = L6_11217.max
        L7_11218 = os
        L7_11218 = L7_11218.clock
        L7_11218 = L7_11218()
        L7_11218 = L7_11218 - L8_11219
        L7_11218 = 6.9 - L7_11218
        L12_11223 = L6_11217(L7_11218, L8_11219)
        L5_11216 = L5_11216(L6_11217, L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L6_11217(L7_11218, L8_11219))
        L6_11217 = 0
        L7_11218 = 3
        L4_11215 = L4_11215(L5_11216, L6_11217, L7_11218)
        L5_11216 = "s"
        L4_11215 = 25
        L5_11216 = L1_11212.x
        L6_11217 = L1_11212.y
        L7_11218 = ARGB
        L11_11222 = 255
        L12_11223 = L7_11218(L8_11219, L9_11220, L10_11221, L11_11222)
        L2_11213(L3_11214, L4_11215, L5_11216, L6_11217, L7_11218, L8_11219, L9_11220, L10_11221, L11_11222, L12_11223, L7_11218(L8_11219, L9_11220, L10_11221, L11_11222))
      end
    end
  end
  function __Zed.OnCastSpell(A0_11224, A1_11225, A2_11226, A3_11227, A4_11228)
    local L5_11229, L6_11230, L7_11231, L8_11232, L9_11233, L10_11234, L11_11235, L12_11236, L13_11237, L14_11238, L15_11239, L16_11240, L17_11241, L18_11242, L19_11243, L20_11244, L21_11245, L22_11246, L23_11247, L24_11248, L25_11249, L26_11250, L27_11251, L28_11252, L29_11253, L30_11254, L31_11255, L32_11256, L33_11257, L34_11258, L35_11259, L36_11260, L37_11261, L38_11262, L39_11263, L40_11264, L41_11265, L42_11266, L43_11267, L44_11268, L45_11269, L46_11270, L47_11271, L48_11272, L49_11273, L50_11274, L51_11275, L52_11276, L53_11277, L54_11278, L55_11279, L56_11280, L57_11281, L58_11282, L59_11283, L60_11284, L61_11285, L62_11286, L63_11287, L64_11288, L65_11289, L66_11290, L67_11291, L68_11292, L69_11293, L70_11294, L71_11295, L72_11296, L73_11297, L74_11298, L75_11299, L76_11300, L77_11301, L78_11302, L79_11303, L80_11304, L81_11305, L82_11306, L83_11307, L84_11308, L85_11309, L86_11310, L87_11311, L88_11312, L89_11313, L90_11314, L91_11315, L92_11316, L93_11317, L94_11318, L95_11319, L96_11320, L97_11321, L98_11322, L99_11323, L100_11324, L101_11325, L102_11326, L103_11327, L104_11328, L105_11329, L106_11330, L107_11331, L108_11332, L109_11333, L110_11334, L111_11335, L112_11336, L113_11337, L114_11338, L115_11339, L116_11340, L117_11341, L118_11342, L119_11343, L120_11344, L121_11345, L122_11346, L123_11347, L124_11348, L125_11349, L126_11350, L127_11351, L128_11352, L129_11353, L130_11354, L131_11355, L132_11356, L133_11357, L134_11358, L135_11359, L136_11360, L137_11361, L138_11362, L139_11363, L140_11364, L141_11365, L142_11366, L143_11367, L144_11368, L145_11369, L146_11370, L147_11371, L148_11372, L149_11373, L150_11374, L151_11375, L152_11376, L153_11377, L154_11378, L155_11379, L156_11380, L157_11381, L158_11382, L159_11383, L160_11384, L161_11385, L162_11386, L163_11387, L164_11388, L165_11389, L166_11390, L167_11391, L168_11392, L169_11393, L170_11394, L171_11395, L172_11396, L173_11397, L174_11398, L175_11399, L176_11400, L177_11401, L178_11402, L179_11403, L180_11404, L181_11405, L182_11406, L183_11407, L184_11408, L185_11409, L186_11410, L187_11411, L188_11412, L189_11413, L190_11414, L191_11415, L192_11416, L193_11417, L194_11418, L195_11419, L196_11420, L197_11421, L198_11422, L199_11423, L200_11424, L201_11425, L202_11426, L203_11427, L204_11428, L205_11429, L206_11430, L207_11431, L208_11432, L209_11433, L210_11434, L211_11435, L212_11436, L213_11437, L214_11438, L215_11439, L216_11440, L217_11441, L218_11442, L219_11443, L220_11444, L221_11445, L222_11446, L223_11447, L224_11448, L225_11449, L226_11450, L227_11451, L228_11452, L229_11453, L230_11454, L231_11455, L232_11456, L233_11457, L234_11458, L235_11459, L236_11460, L237_11461, L238_11462, L239_11463, L240_11464, L241_11465, L242_11466, L243_11467, L244_11468, L245_11469, L246_11470, L247_11471, L248_11472, L249_11473, L250_11474, L251_11475, L252_11476, L253_11477, L254_11478
  end
  function __Zed.GetRange(A0_11479)
    local L1_11480
    L1_11480 = 0
    L1_11480 = _ENV[L1_11480]
    if not L1_11480 then
      return
    end
    L1_11480 = L1_11480 * L1_11480
    L1_11480 = A0_11479.Q
    L1_11480 = L1_11480.Range
    if A0_11479.wShadow and A0_11479.rShadow then
      L1_11480 = A0_11479.Q.Range + math.max(GetDistance(myHero, A0_11479.rShadow), GetDistance(myHero, A0_11479.wShadow))
    elseif A0_11479:IsW1() and A0_11479.W:IsReady() and A0_11479.rShadow then
      L1_11480 = A0_11479.Q.Range + math.max(GetDistance(myHero, A0_11479.rShadow), A0_11479.W.Range)
    elseif A0_11479.wShadow then
      L1_11480 = A0_11479.Q.Range + GetDistance(myHero, A0_11479.wShadow)
    elseif A0_11479:IsW1() and A0_11479.W:IsReady() then
      L1_11480 = A0_11479.Q.Range + A0_11479.W.Range
    end
    return L1_11480
  end
  function __Zed.KillSteal(A0_11481)
    local L1_11482, L2_11483, L3_11484, L4_11485, L5_11486
    if not L1_11482 then
      return
    end
    L5_11486 = L2_11483()
    for L4_11485, L5_11486 in L1_11482(L2_11483, L3_11484, L4_11485, L5_11486, L2_11483()) do
      if IsValidTarget(L5_11486, A0_11481.TS.range) and L5_11486.visible and PercentageHealth(L5_11486) <= 40 and (not A0_11481.R.isDead or A0_11481.R.isDead and A0_11481.R.target.networkID ~= L5_11486.networkID) then
        if A0_11481:GetBestCombo(L5_11486) >= L5_11486.health then
          if A0_11481.Menu.KillSteal.UseW and PercentageHealth(L5_11486) <= 25 and A0_11481:IsW1() and A0_11481.W:IsReady() and (A0_11481:GetBestCombo(L5_11486) or GetDistanceSqr(myHero, target) > math.pow(A0_11481.W.Range, 2)) and (A0_11481.Q:Damage(L5_11486) > L5_11486.health or A0_11481:GetBestCombo(L5_11486) or A0_11481.E:Damage(L5_11486) > L5_11486.health or A0_11481:GetBestCombo(L5_11486)) then
            A0_11481:CastW(L5_11486)
          end
          if A0_11481.Menu.KillSteal.UseQ and (A0_11481.Q:Damage(L5_11486) > L5_11486.health or A0_11481:GetBestCombo(L5_11486)) then
            A0_11481:CastQ(L5_11486)
          end
          if A0_11481.Menu.KillSteal.UseE and (A0_11481.E:Damage(L5_11486) > L5_11486.health or A0_11481:GetBestCombo(L5_11486)) then
            A0_11481:CastE(L5_11486)
          end
        end
        if A0_11481.Menu.KillSteal.UseIgnite and A3_3:IsReady() and A3_3:Damage(L5_11486) > L5_11486.health then
          A3_3:Cast(L5_11486)
        end
      end
    end
  end
  function __Zed.IsW1(A0_11487)
    return A0_11487.W:GetSpellData().name:lower() ~= "zedw2"
  end
  function __Zed.IsR1(A0_11488)
    return A0_11488.R:GetSpellData().name:lower() ~= "zedr2"
  end
  function __Zed.IsWaitingW(A0_11489)
    if not _ENV[0] then
      return
    end
    return A0_11489:IsW1() and A0_11489.W:IsReady() and os.clock() - A0_11489.W.LastCastTime <= 0.15 and A0_11489.wShadowEndPosition == nil
  end
  function __Zed.CheckSwap(A0_11490)
    local L1_11491, L2_11492, L3_11493, L4_11494, L5_11495, L6_11496, L7_11497, L8_11498, L9_11499
    L1_11491 = 0
    L1_11491 = _ENV[L1_11491]
    if not L1_11491 then
      return
    end
    L1_11491 = L1_11491 * L1_11491
    L1_11491 = A0_11490.TS
    L1_11491 = L1_11491.target
    L2_11492 = IsValidTarget
    L3_11493 = L1_11491
    L2_11492 = L2_11492(L3_11493)
    if L2_11492 then
      L2_11492 = A0_11490.R
      L2_11492 = L2_11492.isDead
      if not L2_11492 then
        L3_11493 = A0_11490
        L2_11492 = A0_11490.GetBestCombo
        L4_11494 = L1_11491
        L6_11496 = L2_11492(L3_11493, L4_11494)
        L7_11497 = OrbwalkManager
        L8_11498 = L7_11497
        L7_11497 = L7_11497.IsCombo
        L7_11497 = L7_11497(L8_11498)
        if L7_11497 then
          L7_11497 = A0_11490.Menu
          L7_11497 = L7_11497.Combo
          L7_11497 = L7_11497.SwapGC
          if L7_11497 > 1 then
            L7_11497 = A0_11490.Menu
            L7_11497 = L7_11497.Combo
            L7_11497 = L7_11497.SwapGC
            if L7_11497 ~= 3 then
              L7_11497 = A0_11490.Menu
              L7_11497 = L7_11497.Combo
              L7_11497 = L7_11497.SwapGC
              if L7_11497 == 2 then
                L7_11497 = L1_11491.health
              end
            elseif L6_11496 > L7_11497 then
              L7_11497 = GetDistanceSqr
              L8_11498 = myHero
              L9_11499 = L1_11491
              L7_11497 = L7_11497(L8_11498, L9_11499)
              L8_11498 = math
              L8_11498 = L8_11498.pow
              L9_11499 = A0_11490.E
              L9_11499 = L9_11499.Range
              L8_11498 = L8_11498(L9_11499, 2)
              if L7_11497 > L8_11498 then
                L7_11497 = GetDistanceSqr
                L8_11498 = myHero
                L9_11499 = L1_11491
                L7_11497 = L7_11497(L8_11498, L9_11499)
                L8_11498 = A0_11490.wShadow
                if L8_11498 ~= nil then
                  L8_11498 = A0_11490.W
                  L9_11499 = L8_11498
                  L8_11498 = L8_11498.IsReady
                  L8_11498 = L8_11498(L9_11499)
                  if L8_11498 then
                    L8_11498 = GetDistanceSqr
                    L9_11499 = A0_11490.wShadow
                    L8_11498 = L8_11498(L9_11499, L1_11491)
                  end
                else
                  L8_11498 = L8_11498 or 1000000000000
                end
                L9_11499 = A0_11490.rShadow
                if L9_11499 ~= nil then
                  L9_11499 = A0_11490.R
                  L9_11499 = L9_11499.IsReady
                  L9_11499 = L9_11499(L9_11499)
                  if L9_11499 then
                    L9_11499 = GetDistanceSqr
                    L9_11499 = L9_11499(A0_11490.rShadow, L1_11491)
                  end
                else
                  L9_11499 = L9_11499 or 1000000000000
                end
                if math.min(L7_11497, L8_11498, L9_11499) <= math.pow(500, 2) and L7_11497 > math.min(L7_11497, L8_11498, L9_11499) then
                  if math.min(L7_11497, L8_11498, L9_11499) == L8_11498 then
                    A0_11490.W:Cast()
                  elseif math.min(L7_11497, L8_11498, L9_11499) == L9_11499 then
                    A0_11490.R:Cast()
                  end
                end
              end
            end
          end
        else
          L7_11497 = OrbwalkManager
          L8_11498 = L7_11497
          L7_11497 = L7_11497.IsHarass
          L7_11497 = L7_11497(L8_11498)
          if L7_11497 then
            L7_11497 = A0_11490.W
            L8_11498 = L7_11497
            L7_11497 = L7_11497.IsReady
            L7_11497 = L7_11497(L8_11498)
            if L7_11497 then
              L8_11498 = A0_11490
              L7_11497 = A0_11490.IsW1
              L7_11497 = L7_11497(L8_11498)
              if not L7_11497 then
                L8_11498 = A0_11490
                L7_11497 = A0_11490.GetDamageP
                L9_11499 = L1_11491
                L7_11497 = L7_11497(L8_11498, L9_11499, L1_11491.health)
                if L7_11497 then
                  L7_11497 = A0_11490.wShadow
                  if L7_11497 ~= nil then
                    L7_11497 = PercentageHealth
                    L8_11498 = L1_11491
                    L7_11497 = L7_11497(L8_11498)
                    if L7_11497 <= 50 then
                      L7_11497 = 100 * L6_11496
                      L8_11498 = A0_11490.Menu
                      L8_11498 = L8_11498.General
                      L8_11498 = L8_11498.Overkill
                      L8_11498 = 100 * L8_11498
                      L7_11497 = L7_11497 / L8_11498
                      L8_11498 = L1_11491.health
                      if L7_11497 > L8_11498 then
                        L7_11497 = GetDistanceSqr
                        L8_11498 = myHero
                        L9_11499 = L1_11491
                        L7_11497 = L7_11497(L8_11498, L9_11499)
                        L8_11498 = GetDistanceSqr
                        L9_11499 = A0_11490.wShadow
                        L8_11498 = L8_11498(L9_11499, L1_11491)
                        if L7_11497 > L8_11498 then
                          L7_11497 = A0_11490.E
                          L8_11498 = L7_11497
                          L7_11497 = L7_11497.ValidTarget
                          L9_11499 = L1_11491
                          L7_11497 = L7_11497(L8_11498, L9_11499)
                          if L7_11497 then
                            L7_11497 = A0_11490.W
                            L8_11498 = L7_11497
                            L7_11497 = L7_11497.Cast
                            L7_11497(L8_11498)
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  function __Zed.CastQ(A0_11500, A1_11501)
    local L2_11502, L3_11503, L4_11504
    L2_11502 = 0
    L2_11502 = _ENV[L2_11502]
    if not L2_11502 then
      return
    end
    L2_11502 = L2_11502 * L2_11502
    L2_11502 = IsValidTarget
    L3_11503 = A1_11501
    L2_11502 = L2_11502(L3_11503)
    if L2_11502 then
      L3_11503 = A0_11500
      L2_11502 = A0_11500.IsWaitingW
      L2_11502 = L2_11502(L3_11503)
      if L2_11502 then
        return
      end
      L2_11502 = A0_11500.Q
      L3_11503 = L2_11502
      L2_11502 = L2_11502.IsReady
      L2_11502 = L2_11502(L3_11503)
      if L2_11502 then
        L2_11502 = GetDistanceSqr
        L3_11503 = myHero
        L4_11504 = A1_11501
        L2_11502 = L2_11502(L3_11503, L4_11504)
        L3_11503 = A0_11500.wShadow
        if L3_11503 ~= nil then
          L3_11503 = GetDistanceSqr
          L4_11504 = A0_11500.wShadow
          L3_11503 = L3_11503(L4_11504, A1_11501)
        else
          L3_11503 = L3_11503 or 1000000000000
        end
        L4_11504 = A0_11500.rShadow
        if L4_11504 ~= nil then
          L4_11504 = GetDistanceSqr
          L4_11504 = L4_11504(A0_11500.rShadow, A1_11501)
        else
          L4_11504 = L4_11504 or 1000000000000
        end
        if L2_11502 > math.pow(A0_11500.Q.Range * 0.9, 2) then
          if math.min(L2_11502, L3_11503, L4_11504) == L2_11502 then
            A0_11500.Q.Source = myHero
          elseif math.min(L2_11502, L3_11503, L4_11504) == L3_11503 then
            A0_11500.Q.Source = A0_11500.wShadow
          elseif math.min(L2_11502, L3_11503, L4_11504) == L4_11504 then
            A0_11500.Q.Source = A0_11500.rShadow
          else
            A0_11500.Q.Source = myHero
          end
        end
        A0_11500.Q:Cast(A1_11501)
      end
    end
  end
  function __Zed.CastW(A0_11505, A1_11506)
    local L2_11507, L3_11508, L4_11509, L5_11510, L6_11511, L7_11512, L8_11513, L9_11514
    L2_11507 = 0
    L2_11507 = _ENV[L2_11507]
    if not L2_11507 then
      return
    end
    L2_11507 = L2_11507 * L2_11507
    L2_11507 = IsValidTarget
    L3_11508 = A1_11506
    L2_11507 = L2_11507(L3_11508)
    if L2_11507 then
      L3_11508 = A0_11505
      L2_11507 = A0_11505.IsW1
      L2_11507 = L2_11507(L3_11508)
      if L2_11507 then
        L2_11507 = A0_11505.W
        L3_11508 = L2_11507
        L2_11507 = L2_11507.IsReady
        L2_11507 = L2_11507(L3_11508)
        if L2_11507 then
          L2_11507 = A0_11505.wShadowEndPosition
          if L2_11507 == nil then
            L2_11507 = GetDistanceSqr
            L3_11508 = myHero
            L4_11509 = A1_11506
            L2_11507 = L2_11507(L3_11508, L4_11509)
            L3_11508 = math
            L3_11508 = L3_11508.pow
            L4_11509 = A0_11505.Q
            L4_11509 = L4_11509.Range
            L4_11509 = L4_11509 + L5_11510
            L3_11508 = L3_11508(L4_11509, L5_11510)
            if L2_11507 < L3_11508 then
              L2_11507 = A0_11505.W
              L2_11507 = L2_11507.LastSentTime
              if L2_11507 ~= nil then
                L2_11507 = os
                L2_11507 = L2_11507.clock
                L2_11507 = L2_11507()
                L3_11508 = A0_11505.W
                L3_11508 = L3_11508.LastSentTime
                L2_11507 = L2_11507 - L3_11508
              elseif L2_11507 > 0.12 then
                L2_11507 = A0_11505.W
                L3_11508 = os
                L3_11508 = L3_11508.clock
                L3_11508 = L3_11508()
                L2_11507.LastCastTime = L3_11508
                L2_11507 = A0_11505.W
                L3_11508 = os
                L3_11508 = L3_11508.clock
                L3_11508 = L3_11508()
                L2_11507.LastSentTime = L3_11508
                L2_11507 = A0_11505.W
                L3_11508 = L2_11507
                L2_11507 = L2_11507.GetPrediction
                L4_11509 = A1_11506
                L5_11510.Range = L6_11511
                L3_11508 = L2_11507(L3_11508, L4_11509, L5_11510)
                if L2_11507 ~= nil then
                  L4_11509 = Vector
                  L4_11509 = L4_11509(L5_11510)
                  L8_11513 = myHero
                  L4_11509 = L4_11509 + L5_11510
                  if L5_11510 ~= nil then
                    if L5_11510 == 1 then
                      L8_11513 = L2_11507
                      L8_11513 = Vector
                      L9_11514 = A0_11505.rShadow
                      L8_11513 = L8_11513(L9_11514)
                      L4_11509 = L5_11510 + L6_11511
                    elseif L5_11510 == 2 then
                      L8_11513 = L2_11507
                      L8_11513 = Vector
                      L9_11514 = A0_11505.rShadow
                      L8_11513 = L8_11513(L9_11514)
                      L8_11513 = Vector
                      L9_11514 = L2_11507
                      L8_11513 = L8_11513(L9_11514)
                      L9_11514 = Vector
                      L9_11514 = L9_11514(A0_11505.rShadow)
                      L8_11513 = L8_11513 - L9_11514
                      L8_11513 = L7_11512
                      L8_11513 = L7_11512
                      L8_11513 = A0_11505.W
                      L8_11513 = L8_11513.Range
                      L8_11513 = D3DXVECTOR3
                      L9_11514 = L5_11510.x
                      L9_11514 = L8_11513(L9_11514, L5_11510.y, L5_11510.z)
                      if not L7_11512 then
                        L4_11509 = L5_11510
                      else
                        L8_11513 = D3DXVECTOR3
                        L9_11514 = L6_11511.x
                        L9_11514 = L8_11513(L9_11514, L6_11511.y, L6_11511.z)
                        if not L7_11512 then
                          L4_11509 = L6_11511
                        else
                          L8_11513 = L5_11510
                          L9_11514 = A1_11506
                          L8_11513 = GetDistanceSqr
                          L9_11514 = L6_11511
                          L8_11513 = L8_11513(L9_11514, A1_11506)
                          L4_11509 = L7_11512 < L8_11513 and L5_11510 or L6_11511
                        end
                      end
                    elseif L5_11510 == 3 then
                      L8_11513 = mousePos
                      L8_11513 = Vector
                      L9_11514 = A0_11505.rShadow
                      L8_11513 = L8_11513(L9_11514)
                      L4_11509 = L5_11510 + L6_11511
                    end
                  end
                  L8_11513 = L4_11509.y
                  L9_11514 = L4_11509.z
                  L9_11514 = L6_11511(L7_11512, L8_11513, L9_11514)
                  if not L5_11510 then
                    L5_11510(L6_11511, L7_11512)
                  else
                    for L8_11513 = L5_11510.Range, 400, -50 do
                      L9_11514 = myHero
                      L9_11514 = L9_11514 + Vector(Vector(L4_11509) - Vector(myHero)):normalized() * L8_11513
                      if not IsWall(D3DXVECTOR3(L9_11514.x, L9_11514.y, L9_11514.z)) then
                        A0_11505.W:CastToVector(L9_11514)
                        return
                      end
                    end
                    L5_11510(L6_11511, L7_11512)
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  function __Zed.ForceW(A0_11515, A1_11516)
    local L2_11517, L3_11518, L4_11519, L5_11520, L6_11521, L7_11522, L8_11523, L9_11524
    L2_11517 = 0
    L2_11517 = _ENV[L2_11517]
    if not L2_11517 then
      return
    end
    L2_11517 = L2_11517 * L2_11517
    L2_11517 = OrbwalkManager
    L3_11518 = L2_11517
    L2_11517 = L2_11517.IsCombo
    L2_11517 = L2_11517(L3_11518)
    if L2_11517 then
      L3_11518 = A0_11515
      L2_11517 = A0_11515.TargetHaveUltimate
      L4_11519 = A1_11516
      L2_11517 = L2_11517(L3_11518, L4_11519)
      if L2_11517 then
        L3_11518 = A0_11515
        L2_11517 = A0_11515.IsW1
        L2_11517 = L2_11517(L3_11518)
        if L2_11517 then
          L2_11517 = A0_11515.W
          L3_11518 = L2_11517
          L2_11517 = L2_11517.IsReady
          L2_11517 = L2_11517(L3_11518)
          if L2_11517 then
            L2_11517 = GetDistanceSqr
            L3_11518 = myHero
            L4_11519 = A1_11516
            L2_11517 = L2_11517(L3_11518, L4_11519)
            L3_11518 = math
            L3_11518 = L3_11518.pow
            L4_11519 = A0_11515.Q
            L4_11519 = L4_11519.Range
            L4_11519 = L4_11519 + L5_11520
            L3_11518 = L3_11518(L4_11519, L5_11520)
            if L2_11517 < L3_11518 then
              L2_11517 = A0_11515.W
              L2_11517 = L2_11517.LastSentTime
              if L2_11517 ~= nil then
                L2_11517 = os
                L2_11517 = L2_11517.clock
                L2_11517 = L2_11517()
                L3_11518 = A0_11515.W
                L3_11518 = L3_11518.LastSentTime
                L2_11517 = L2_11517 - L3_11518
              elseif L2_11517 > 0.1 then
                L2_11517 = A0_11515.W
                L3_11518 = os
                L3_11518 = L3_11518.clock
                L3_11518 = L3_11518()
                L2_11517.LastCastTime = L3_11518
                L2_11517 = A0_11515.W
                L3_11518 = os
                L3_11518 = L3_11518.clock
                L3_11518 = L3_11518()
                L2_11517.LastSentTime = L3_11518
                L2_11517 = A0_11515.W
                L3_11518 = L2_11517
                L2_11517 = L2_11517.GetPrediction
                L4_11519 = A1_11516
                L5_11520.Range = L6_11521
                L3_11518 = L2_11517(L3_11518, L4_11519, L5_11520)
                if L2_11517 ~= nil then
                  L4_11519 = Vector
                  L4_11519 = L4_11519(L5_11520)
                  L8_11523 = myHero
                  L4_11519 = L4_11519 + L5_11520
                  if L5_11520 ~= nil then
                    if L5_11520 == 1 then
                      L8_11523 = L2_11517
                      L8_11523 = Vector
                      L9_11524 = A0_11515.rShadow
                      L8_11523 = L8_11523(L9_11524)
                      L4_11519 = L5_11520 + L6_11521
                    elseif L5_11520 == 2 then
                      L8_11523 = L2_11517
                      L8_11523 = Vector
                      L9_11524 = A0_11515.rShadow
                      L8_11523 = L8_11523(L9_11524)
                      L8_11523 = Vector
                      L9_11524 = L2_11517
                      L8_11523 = L8_11523(L9_11524)
                      L9_11524 = Vector
                      L9_11524 = L9_11524(A0_11515.rShadow)
                      L8_11523 = L8_11523 - L9_11524
                      L8_11523 = L7_11522
                      L8_11523 = L7_11522
                      L8_11523 = A0_11515.W
                      L8_11523 = L8_11523.Range
                      L8_11523 = D3DXVECTOR3
                      L9_11524 = L5_11520.x
                      L9_11524 = L8_11523(L9_11524, L5_11520.y, L5_11520.z)
                      if not L7_11522 then
                        L4_11519 = L5_11520
                      else
                        L8_11523 = D3DXVECTOR3
                        L9_11524 = L6_11521.x
                        L9_11524 = L8_11523(L9_11524, L6_11521.y, L6_11521.z)
                        if not L7_11522 then
                          L4_11519 = L6_11521
                        else
                          L8_11523 = L5_11520
                          L9_11524 = A1_11516
                          L8_11523 = GetDistanceSqr
                          L9_11524 = L6_11521
                          L8_11523 = L8_11523(L9_11524, A1_11516)
                          L4_11519 = L7_11522 < L8_11523 and L5_11520 or L6_11521
                        end
                      end
                    elseif L5_11520 == 3 then
                      L8_11523 = mousePos
                      L8_11523 = Vector
                      L9_11524 = A0_11515.rShadow
                      L8_11523 = L8_11523(L9_11524)
                      L4_11519 = L5_11520 + L6_11521
                    end
                  end
                  L8_11523 = L4_11519.y
                  L9_11524 = L4_11519.z
                  L9_11524 = L6_11521(L7_11522, L8_11523, L9_11524)
                  if not L5_11520 then
                    L5_11520(L6_11521, L7_11522)
                  else
                    for L8_11523 = L5_11520.Range, 400, -50 do
                      L9_11524 = myHero
                      L9_11524 = L9_11524 + Vector(Vector(L4_11519) - Vector(myHero)):normalized() * L8_11523
                      if not IsWall(D3DXVECTOR3(L9_11524.x, L9_11524.y, L9_11524.z)) then
                        A0_11515.W:CastToVector(L9_11524)
                        return
                      end
                    end
                    L5_11520(L6_11521, L7_11522)
                  end
                end
              end
            end
          end
        end
      end
    end
    L3_11518 = A0_11515
    L2_11517 = A0_11515.IsW1
    L2_11517 = L2_11517(L3_11518)
    if L2_11517 then
      L2_11517 = A0_11515.W
      L3_11518 = L2_11517
      L2_11517 = L2_11517.IsReady
      L2_11517 = L2_11517(L3_11518)
      if L2_11517 then
        L2_11517 = OrbwalkManager
        L3_11518 = L2_11517
        L2_11517 = L2_11517.IsCombo
        L2_11517 = L2_11517(L3_11518)
        if L2_11517 then
          L3_11518 = A0_11515
          L2_11517 = A0_11515.TargetHaveUltimate
          L4_11519 = A1_11516
          L2_11517 = L2_11517(L3_11518, L4_11519)
          if L2_11517 then
            L2_11517 = DelayAction
            function L3_11518(A0_11525)
              A0_11515:ForceW(A0_11525)
            end
            L4_11519 = 0.1
            L2_11517(L3_11518, L4_11519, L5_11520)
          end
        end
      end
    end
  end
  function __Zed.CastE(A0_11526, A1_11527)
    local L2_11528, L3_11529, L4_11530
    L2_11528 = 0
    L2_11528 = _ENV[L2_11528]
    if not L2_11528 then
      return
    end
    L2_11528 = L2_11528 * L2_11528
    L2_11528 = IsValidTarget
    L3_11529 = A1_11527
    L2_11528 = L2_11528(L3_11529)
    if L2_11528 then
      L3_11529 = A0_11526
      L2_11528 = A0_11526.IsWaitingW
      L2_11528 = L2_11528(L3_11529)
      if L2_11528 then
        return
      end
      L2_11528 = A0_11526.E
      L3_11529 = L2_11528
      L2_11528 = L2_11528.IsReady
      L2_11528 = L2_11528(L3_11529)
      if L2_11528 then
        L2_11528 = GetDistanceSqr
        L3_11529 = myHero
        L4_11530 = A1_11527
        L2_11528 = L2_11528(L3_11529, L4_11530)
        L3_11529 = A0_11526.wShadow
        if L3_11529 ~= nil then
          L3_11529 = GetDistanceSqr
          L4_11530 = A0_11526.wShadow
          L3_11529 = L3_11529(L4_11530, A1_11527)
        else
          L3_11529 = L3_11529 or 1000000000000
        end
        L4_11530 = A0_11526.rShadow
        if L4_11530 ~= nil then
          L4_11530 = GetDistanceSqr
          L4_11530 = L4_11530(A0_11526.rShadow, A1_11527)
        else
          L4_11530 = L4_11530 or 1000000000000
        end
        if math.min(L2_11528, L3_11529, L4_11530) == L2_11528 then
          A0_11526.E.Source = myHero
        elseif math.min(L2_11528, L3_11529, L4_11530) == L3_11529 then
          A0_11526.E.Source = A0_11526.wShadow
        elseif math.min(L2_11528, L3_11529, L4_11530) == L4_11530 then
          A0_11526.E.Source = A0_11526.rShadow
        else
          A0_11526.E.Source = myHero
        end
        A0_11526.E:Cast(A1_11527)
      end
    end
  end
  function __Zed.CastR(A0_11531, A1_11532)
    if A0_11531:IsR1() then
      A0_11531.R:Cast(A1_11532)
    end
  end
  function __Zed.NeedsW(A0_11533, A1_11534)
    if not _ENV[0] then
      return
    end
    if IsValidTarget(A1_11534) and GetDistanceSqr(myHero, A1_11534) < math.pow(A0_11533.W.Range, 2) and (myHero.mana < A0_11533.Q:Mana() + A0_11533.W:Mana() or myHero.mana < A0_11533.E:Mana() + A0_11533.W:Mana()) and A0_11533:GetBestCombo(A1_11534) >= A1_11534.health then
      return false
    end
    return true
  end
  function __Zed.Combo(A0_11535)
    local L1_11536, L2_11537, L3_11538, L4_11539, L5_11540, L6_11541, L7_11542, L8_11543, L9_11544
    L1_11536 = 0
    L1_11536 = _ENV[L1_11536]
    if not L1_11536 then
      return
    end
    L1_11536 = L1_11536 * L1_11536
    L1_11536 = A0_11535.TS
    L1_11536 = L1_11536.target
    L2_11537 = IsValidTarget
    L3_11538 = L1_11536
    L2_11537 = L2_11537(L3_11538)
    if L2_11537 then
      L3_11538 = A0_11535
      L2_11537 = A0_11535.GetBestCombo
      L4_11539 = L1_11536
      L6_11541 = L2_11537(L3_11538, L4_11539)
      L7_11542 = PercentageHealth
      L7_11542 = L7_11542()
      L8_11543 = A0_11535.Menu
      L8_11543 = L8_11543.Combo
      L8_11543 = L8_11543.SwapHP
      if L7_11542 <= L8_11543 then
        L7_11542 = L1_11536.health
        if not (L6_11541 < L7_11542) then
          L7_11542 = PercentageHealth
          L8_11543 = myHero
          L7_11542 = L7_11542(L8_11543)
          L8_11543 = PercentageHealth
          L9_11544 = L1_11536
          L8_11543 = L8_11543(L9_11544)
        elseif L7_11542 < L8_11543 then
          L7_11542 = ObjectsInArea
          L8_11543 = GetEnemyHeroes
          L8_11543 = L8_11543()
          L9_11544 = 400
          L7_11542 = L7_11542(L8_11543, L9_11544, myHero)
          L7_11542 = #L7_11542
          L8_11543 = A0_11535.wShadow
          if L8_11543 ~= nil then
            L8_11543 = A0_11535.W
            L9_11544 = L8_11543
            L8_11543 = L8_11543.IsReady
            L8_11543 = L8_11543(L9_11544)
            if L8_11543 then
              L8_11543 = ObjectsInArea
              L9_11544 = GetEnemyHeroes
              L9_11544 = L9_11544()
              L8_11543 = L8_11543(L9_11544, 400, A0_11535.wShadow)
              L8_11543 = #L8_11543
            end
          else
            L8_11543 = L8_11543 or 1000000000000
          end
          L9_11544 = A0_11535.rShadow
          if L9_11544 ~= nil then
            L9_11544 = A0_11535.R
            L9_11544 = L9_11544.IsReady
            L9_11544 = L9_11544(L9_11544)
            if L9_11544 then
              L9_11544 = ObjectsInArea
              L9_11544 = L9_11544(GetEnemyHeroes(), 400, A0_11535.rShadow)
              L9_11544 = #L9_11544
            end
          else
            L9_11544 = L9_11544 or 1000000000000
          end
          if L7_11542 > math.min(L7_11542, L8_11543, L9_11544) then
            if math.min(L7_11542, L8_11543, L9_11544) == L8_11543 then
              A0_11535.W:Cast()
            elseif math.min(L7_11542, L8_11543, L9_11544) == L9_11544 then
              A0_11535.R:Cast()
            end
          end
        end
      end
      L7_11542 = A0_11535.R
      L7_11542 = L7_11542.isDead
      if L7_11542 then
        L7_11542 = A0_11535.Menu
        L7_11542 = L7_11542.Combo
        L7_11542 = L7_11542.SwapDead
        if L7_11542 then
          L7_11542 = ObjectsInArea
          L8_11543 = GetEnemyHeroes
          L8_11543 = L8_11543()
          L9_11544 = 400
          L7_11542 = L7_11542(L8_11543, L9_11544, myHero)
          L7_11542 = #L7_11542
          L8_11543 = A0_11535.wShadow
          if L8_11543 ~= nil then
            L8_11543 = A0_11535.W
            L9_11544 = L8_11543
            L8_11543 = L8_11543.IsReady
            L8_11543 = L8_11543(L9_11544)
            if L8_11543 then
              L8_11543 = ObjectsInArea
              L9_11544 = GetEnemyHeroes
              L9_11544 = L9_11544()
              L8_11543 = L8_11543(L9_11544, 400, A0_11535.wShadow)
              L8_11543 = #L8_11543
            end
          else
            L8_11543 = L8_11543 or 1000000000000
          end
          L9_11544 = A0_11535.rShadow
          if L9_11544 ~= nil then
            L9_11544 = A0_11535.R
            L9_11544 = L9_11544.IsReady
            L9_11544 = L9_11544(L9_11544)
            if L9_11544 then
              L9_11544 = ObjectsInArea
              L9_11544 = L9_11544(GetEnemyHeroes(), 400, A0_11535.rShadow)
              L9_11544 = #L9_11544
            end
          else
            L9_11544 = L9_11544 or 1000000000000
          end
          if L7_11542 > math.min(L7_11542, L8_11543, L9_11544) then
            if math.min(L7_11542, L8_11543, L9_11544) == L8_11543 then
              A0_11535.W:Cast()
            elseif math.min(L7_11542, L8_11543, L9_11544) == L9_11544 then
              A0_11535.R:Cast()
            end
          end
        end
      end
      L7_11542 = A0_11535.Menu
      L7_11542 = L7_11542.Combo
      L7_11542 = L7_11542.UseItems
      if L7_11542 then
        L8_11543 = A0_11535
        L7_11542 = A0_11535.TargetHaveUltimate
        L9_11544 = L1_11536
        L7_11542 = L7_11542(L8_11543, L9_11544)
        if not L7_11542 then
          L7_11542 = A0_11535.R
          L8_11543 = L7_11542
          L7_11542 = L7_11542.IsReady
          L7_11542 = L7_11542(L8_11543)
          if L7_11542 then
            L7_11542 = A0_11535.Menu
            L7_11542 = L7_11542.Keys
            L7_11542 = L7_11542.ComboWR
          end
        elseif L7_11542 then
          L7_11542 = UseItems
          L8_11543 = L1_11536
          L7_11542(L8_11543)
        end
      end
      L7_11542 = A0_11535.Menu
      L7_11542 = L7_11542.Keys
      L7_11542 = L7_11542.ComboR
      if L7_11542 then
        L7_11542 = A0_11535.Menu
        L7_11542 = L7_11542.Combo
        L7_11542 = L7_11542.UseR
        if L7_11542 then
          L7_11542 = A0_11535.R
          L8_11543 = L7_11542
          L7_11542 = L7_11542.IsReady
          L7_11542 = L7_11542(L8_11543)
          if L7_11542 then
            L7_11542 = A0_11535.Menu
            L7_11542 = L7_11542.Combo
            L7_11542 = L7_11542.DontR
            L8_11543 = L1_11536.charName
            L7_11542 = L7_11542[L8_11543]
            if not L7_11542 then
              L8_11543 = A0_11535
              L7_11542 = A0_11535.CastR
              L9_11544 = L1_11536
              L7_11542(L8_11543, L9_11544)
            end
          end
        end
        L8_11543 = A0_11535
        L7_11542 = A0_11535.IsR1
        L7_11542 = L7_11542(L8_11543)
        if L7_11542 then
          L7_11542 = A0_11535.R
          L8_11543 = L7_11542
          L7_11542 = L7_11542.IsReady
          L7_11542 = L7_11542(L8_11543)
          if L7_11542 then
            L7_11542 = A0_11535.Menu
            L7_11542 = L7_11542.Keys
            L7_11542 = L7_11542.PreventCast
            if L7_11542 then
              return
            end
          end
        end
        L7_11542 = A0_11535.Menu
        L7_11542 = L7_11542.Combo
        L7_11542 = L7_11542.UseWR
        if L7_11542 then
          L8_11543 = A0_11535
          L7_11542 = A0_11535.NeedsW
          L9_11544 = L1_11536
          L7_11542 = L7_11542(L8_11543, L9_11544)
          if L7_11542 then
            L8_11543 = A0_11535
            L7_11542 = A0_11535.CastW
            L9_11544 = L1_11536
            L7_11542(L8_11543, L9_11544)
          end
        end
      else
        L7_11542 = A0_11535.Menu
        L7_11542 = L7_11542.Keys
        L7_11542 = L7_11542.ComboWR
        if L7_11542 then
          L7_11542 = A0_11535.Menu
          L7_11542 = L7_11542.Combo
          L7_11542 = L7_11542.UseW
          if L7_11542 then
            L8_11543 = A0_11535
            L7_11542 = A0_11535.NeedsW
            L9_11544 = L1_11536
            L7_11542 = L7_11542(L8_11543, L9_11544)
            if L7_11542 then
              L8_11543 = A0_11535
              L7_11542 = A0_11535.CastW
              L9_11544 = L1_11536
              L7_11542(L8_11543, L9_11544)
            end
          end
        end
      end
      L7_11542 = A0_11535.Menu
      L7_11542 = L7_11542.Combo
      L7_11542 = L7_11542.UseIgnite
      if L7_11542 > 1 then
        L7_11542 = A0_11535.Menu
        L7_11542 = L7_11542.Combo
        L7_11542 = L7_11542.UseIgnite
        if L7_11542 ~= 3 then
          L7_11542 = A0_11535.Menu
          L7_11542 = L7_11542.Combo
          L7_11542 = L7_11542.UseIgnite
          if L7_11542 == 2 then
            L7_11542 = L1_11536.health
          end
        elseif L6_11541 >= L7_11542 then
          L7_11542 = A3_3
          L8_11543 = L7_11542
          L7_11542 = L7_11542.Cast
          L9_11544 = L1_11536
          L7_11542(L8_11543, L9_11544)
        end
      end
      L7_11542 = A0_11535.Menu
      L7_11542 = L7_11542.Combo
      L7_11542 = L7_11542.UseQ
      if L7_11542 then
        L8_11543 = A0_11535
        L7_11542 = A0_11535.CastQ
        L9_11544 = L1_11536
        L7_11542(L8_11543, L9_11544)
      end
      L7_11542 = A0_11535.Menu
      L7_11542 = L7_11542.Combo
      L7_11542 = L7_11542.UseE
      if L7_11542 then
        L8_11543 = A0_11535
        L7_11542 = A0_11535.CastE
        L9_11544 = L1_11536
        L7_11542(L8_11543, L9_11544)
      end
    end
  end
  function __Zed.Harass(A0_11545)
    local L1_11546, L2_11547, L3_11548, L4_11549, L5_11550, L6_11551
    L1_11546 = 0
    L1_11546 = _ENV[L1_11546]
    if not L1_11546 then
      return
    end
    L1_11546 = L1_11546 * L1_11546
    L1_11546 = A0_11545.TS
    L1_11546 = L1_11546.target
    if L2_11547 then
      if L2_11547 <= L3_11548 then
        if not L2_11547 then
        elseif L2_11547 then
          if not L2_11547 then
          elseif L2_11547 then
            L2_11547(L3_11548, L4_11549)
          end
        end
        L2_11547(L3_11548, L4_11549)
        L2_11547(L3_11548, L4_11549)
        if L2_11547 then
          L6_11551 = L3_11548()
          for L5_11550, L6_11551 in L2_11547(L3_11548, L4_11549, L5_11550, L6_11551, L3_11548()) do
            A0_11545:CastE(L6_11551)
          end
        end
      end
    end
  end
  function __Zed.Clear(A0_11552)
    local L1_11553, L2_11554
    L1_11553 = 0
    L1_11553 = _ENV[L1_11553]
    if not L1_11553 then
      return
    end
    L1_11553 = L1_11553 * L1_11553
    L1_11553 = A0_11552.Menu
    L1_11553 = L1_11553.LaneClear
    L1_11553 = L1_11553.Mana
    L2_11554 = PercentageMana
    L2_11554 = L2_11554()
    if L1_11553 <= L2_11554 then
      L1_11553 = nil
      L2_11554 = A0_11552.Menu
      L2_11554 = L2_11554.LaneClear
      L2_11554 = L2_11554.UseW
      if L2_11554 then
        L2_11554 = A0_11552.W
        L2_11554 = L2_11554.LaneClear
        L2_11554 = L2_11554(L2_11554, {
          UseCast = false,
          NumberOfHits = A0_11552.Menu.LaneClear.UseW
        })
        L1_11553 = L2_11554
        L2_11554 = A0_11552.CastW
        L2_11554(A0_11552, L1_11553)
      end
      L2_11554 = A0_11552.Menu
      L2_11554 = L2_11554.LaneClear
      L2_11554 = L2_11554.UseQ
      if L2_11554 then
        L2_11554 = A0_11552.Q
        L2_11554 = L2_11554.LaneClear
        L2_11554 = L2_11554(L2_11554, {
          UseCast = false,
          NumberOfHits = A0_11552.Menu.LaneClear.UseQ
        })
        L1_11553 = L2_11554
        L2_11554 = A0_11552.CastQ
        L2_11554(A0_11552, L1_11553)
      end
      L2_11554 = A0_11552.Menu
      L2_11554 = L2_11554.LaneClear
      L2_11554 = L2_11554.UseE
      if L2_11554 then
        L2_11554 = A0_11552.E
        L2_11554 = L2_11554.LaneClear
        L2_11554 = L2_11554(L2_11554, {
          UseCast = false,
          NumberOfHits = A0_11552.Menu.LaneClear.UseE
        })
        L2_11554 = L2_11554 or L1_11553
        A0_11552:CastE(L2_11554)
      end
      L2_11554 = A0_11552.Menu
      L2_11554 = L2_11554.LastHit
      L2_11554 = L2_11554.UseQ
      if L2_11554 > 1 then
        L2_11554 = A0_11552.Q
        L2_11554 = L2_11554.LastHit
        L2_11554(L2_11554)
      end
      L2_11554 = A0_11552.Menu
      L2_11554 = L2_11554.LastHit
      L2_11554 = L2_11554.UseE
      if L2_11554 > 1 then
        L2_11554 = A0_11552.E
        L2_11554 = L2_11554.LastHit
        L2_11554(L2_11554)
      end
    end
    L1_11553 = nil
    L2_11554 = A0_11552.Menu
    L2_11554 = L2_11554.JungleClear
    L2_11554 = L2_11554.UseW
    if L2_11554 then
      L2_11554 = A0_11552.W
      L2_11554 = L2_11554.JungleClear
      L2_11554 = L2_11554(L2_11554, {UseCast = false})
      L1_11553 = L2_11554
      L2_11554 = A0_11552.CastW
      L2_11554(A0_11552, L1_11553)
    end
    L2_11554 = A0_11552.Menu
    L2_11554 = L2_11554.JungleClear
    L2_11554 = L2_11554.UseQ
    if L2_11554 then
      L2_11554 = A0_11552.Q
      L2_11554 = L2_11554.JungleClear
      L2_11554 = L2_11554(L2_11554, {UseCast = false})
      L1_11553 = L2_11554
      L2_11554 = A0_11552.CastQ
      L2_11554(A0_11552, L1_11553)
    end
    L2_11554 = A0_11552.Menu
    L2_11554 = L2_11554.JungleClear
    L2_11554 = L2_11554.UseE
    if L2_11554 then
      L2_11554 = A0_11552.E
      L2_11554 = L2_11554.JungleClear
      L2_11554 = L2_11554(L2_11554, {UseCast = false})
      L2_11554 = L2_11554 or L1_11553
      A0_11552:CastE(L2_11554)
    end
  end
  function __Zed.LastHit(A0_11555)
    if not _ENV[0] then
      return
    end
    if A0_11555.Menu.LastHit.Mana <= PercentageMana() then
      A0_11555.Q:LastHit({
        Mode = A0_11555.Menu.LastHit.UseQ
      })
      A0_11555.E:LastHit({
        Mode = A0_11555.Menu.LastHit.UseE
      })
    end
  end
  function __Zed.GetDamageP(A0_11556, A1_11557, A2_11558)
    local L3_11559
    L3_11559 = 0
    L3_11559 = _ENV[L3_11559]
    if not L3_11559 then
      return
    end
    L3_11559 = L3_11559 * L3_11559
    L3_11559 = 100 * A2_11558
    L3_11559 = L3_11559 / A1_11557.maxHealth
    if L3_11559 <= 50 then
      L3_11559 = 0
      for _FORV_7_ = #A0_11556.PassiveTable, 1, -1 do
        if A0_11556.PassiveTable[_FORV_7_].Object.networkID == A1_11557.networkID then
          L3_11559 = L3_11559 + 1
          break
        end
      end
      if L3_11559 == 0 then
        return getDmg("P", A1_11557, myHero)
      end
    end
    L3_11559 = 0
    return L3_11559
  end
  function __Zed.TargetHaveUltimate(A0_11560, A1_11561)
    if not _ENV[0] then
      return
    end
    return not A0_11560:IsR1() and ValidTarget(A1_11561) and A0_11560.R.target and A0_11560.R.target.networkID == A1_11561.networkID
  end
  function __Zed.GetComboDamage(A0_11562, A1_11563, A2_11564, A3_11565, A4_11566, A5_11567)
    local L6_11568, L7_11569
    L6_11568 = 0
    L6_11568 = _ENV[L6_11568]
    if not L6_11568 then
      return
    end
    L6_11568 = L6_11568 * L6_11568
    L6_11568 = 0
    L7_11569 = 0
    if A1_11563 ~= nil then
      if A3_11565 and A0_11562:IsW1() and A0_11562.W:IsReady() then
        L7_11569 = L7_11569 + A0_11562.W:Mana()
      end
      if A3_11565 and A4_11566 and A0_11562.E:IsReady() then
        L6_11568 = L6_11568 + A0_11562.E:Damage(A1_11563)
      end
      if A3_11565 and A2_11564 and A0_11562.Q:IsReady() then
        L6_11568 = L6_11568 + A0_11562.Q:Damage(A1_11563) * 0.5
      end
      if A5_11567 and A2_11564 and A0_11562.Q:IsReady() then
        L6_11568 = L6_11568 + A0_11562.Q:Damage(A1_11563) * 0.5
      end
      if A2_11564 then
        L6_11568 = L6_11568 + A0_11562.Q:Damage(A1_11563)
        L7_11569 = L7_11569 + A0_11562.Q:Mana()
      end
      if A4_11566 then
        L6_11568 = L6_11568 + A0_11562.E:Damage(A1_11563)
        L7_11569 = L7_11569 + A0_11562.E:Mana()
      end
      L6_11568 = L6_11568 + getDmg("AD", A1_11563, myHero)
      if A3_3:IsReady() then
        L6_11568 = L6_11568 + A3_3:Damage(A1_11563)
      end
      if A5_11567 then
        L6_11568 = L6_11568 + L6_11568 * (5 + (A0_11562.R:GetSpellData() ~= nil and A0_11562.R:GetSpellData().level ~= nil and A0_11562.R:GetSpellData().level or 0) * 15) / 100
        L6_11568 = L6_11568 + A0_11562.R:Damage(A1_11563)
        L7_11569 = L7_11569 + A0_11562.R:Mana()
      end
      if A0_11562:TargetHaveUltimate(A1_11563) then
        L6_11568 = L6_11568 + L6_11568 * (5 + (A0_11562.R:GetSpellData() ~= nil and A0_11562.R:GetSpellData().level ~= nil and A0_11562.R:GetSpellData().level or 0) * 15) / 100
      end
      L6_11568 = L6_11568 + A0_11562:GetDamageP(A1_11563, A1_11563.health - L6_11568)
      for _FORV_11_, _FORV_12_ in pairs(L5_5) do
        if _FORV_12_:IsReady() then
          L6_11568 = L6_11568 + _FORV_12_:Damage(A1_11563)
        end
      end
      L6_11568 = L6_11568 * (100 + A0_11562.Menu.General.Overkill) / 100
    end
    return L6_11568, L7_11569
  end
  function __Zed.GetBestCombo(A0_11570, A1_11571)
    local L2_11572, L3_11573, L4_11574, L5_11575, L6_11576, L7_11577, L8_11578, L9_11579, L10_11580, L11_11581, L12_11582, L13_11583
    L2_11572 = 0
    L2_11572 = _ENV[L2_11572]
    if not L2_11572 then
      return
    end
    L2_11572 = L2_11572 * L2_11572
    L2_11572 = IsValidTarget
    L3_11573 = A1_11571
    L2_11572 = L2_11572(L3_11573)
    if not L2_11572 then
      L2_11572 = false
      L3_11573 = false
      L4_11574 = false
      L5_11575 = false
      L6_11576 = 0
      return L2_11572, L3_11573, L4_11574, L5_11575, L6_11576
    end
    L2_11572 = {L3_11573}
    L3_11573 = false
    L3_11573 = {L4_11574}
    L4_11574 = false
    L4_11574 = {L5_11575}
    L5_11575 = false
    L5_11575 = {L6_11576}
    L6_11576 = false
    L6_11576 = A1_11571.networkID
    L6_11576 = L12_12[L6_11576]
    if L6_11576 ~= nil then
      L7_11577 = L6_11576[6]
      L8_11578 = os
      L8_11578 = L8_11578.clock
      L8_11578 = L8_11578()
      L8_11578 = L8_11578 - L7_11577
      L9_11579 = L13_13
      if L8_11578 <= L9_11579 then
        L8_11578 = L6_11576[1]
        L9_11579 = L6_11576[2]
        L10_11580 = L6_11576[3]
        L11_11581 = L6_11576[4]
        return L8_11578, L9_11579, L10_11580, L11_11581, L12_11582
      end
      L8_11578 = A0_11570.Q
      L9_11579 = L8_11578
      L8_11578 = L8_11578.IsReady
      L8_11578 = L8_11578(L9_11579)
      if L8_11578 then
        L8_11578 = {L9_11579, L10_11580}
        L9_11579 = false
        L10_11580 = true
        L2_11572 = L8_11578
      end
      L8_11578 = A0_11570.wShadow
      if L8_11578 == nil then
        L9_11579 = A0_11570
        L8_11578 = A0_11570.IsW1
        L8_11578 = L8_11578(L9_11579)
        if L8_11578 then
          L8_11578 = A0_11570.W
          L9_11579 = L8_11578
          L8_11578 = L8_11578.IsReady
          L8_11578 = L8_11578(L9_11579)
        end
      elseif L8_11578 then
        L8_11578 = {L9_11579, L10_11580}
        L9_11579 = false
        L10_11580 = true
        L3_11573 = L8_11578
      end
      L8_11578 = A0_11570.E
      L9_11579 = L8_11578
      L8_11578 = L8_11578.IsReady
      L8_11578 = L8_11578(L9_11579)
      if L8_11578 then
        L8_11578 = {L9_11579, L10_11580}
        L9_11579 = false
        L10_11580 = true
        L4_11574 = L8_11578
      end
      L9_11579 = A0_11570
      L8_11578 = A0_11570.IsR1
      L8_11578 = L8_11578(L9_11579)
      if L8_11578 then
        L8_11578 = A0_11570.R
        L9_11579 = L8_11578
        L8_11578 = L8_11578.IsReady
        L8_11578 = L8_11578(L9_11579)
        if L8_11578 then
          L8_11578 = {L9_11579, L10_11580}
          L9_11579 = false
          L10_11580 = true
          L5_11575 = L8_11578
        end
      end
      L8_11578 = 0
      L9_11579 = {
        L10_11580,
        L11_11581,
        L12_11582,
        L13_11583
      }
      L10_11580 = A0_11570.Q
      L11_11581 = L10_11580
      L10_11580 = L10_11580.IsReady
      L10_11580 = L10_11580(L11_11581)
      L11_11581 = A0_11570.wShadow
      if L11_11581 == nil then
        L11_11581 = A0_11570.IsW1
        L11_11581 = L11_11581(L12_11582)
        if L11_11581 then
          L11_11581 = A0_11570.W
          L11_11581 = L11_11581.IsReady
          L11_11581 = L11_11581(L12_11582)
        end
      else
        L11_11581 = true
      end
      L11_11581 = A0_11570
      L10_11580 = A0_11570.GetComboDamage
      if A0_11570.wShadow == nil then
      else
      end
      L11_11581 = L10_11580(L11_11581, L12_11582, L13_11583, true, A0_11570.E:IsReady(), A0_11570:IsR1() and A0_11570.R:IsReady())
      L8_11578 = L10_11580
      if L10_11580 > L12_11582 then
        for _FORV_15_ = 1, #L2_11572 do
          for _FORV_19_ = 1, #L3_11573 do
            for _FORV_23_ = 1, #L4_11574 do
              for _FORV_27_ = 1, #L5_11575 do
                if A0_11570:GetComboDamage(A1_11571, L2_11572[_FORV_15_], L3_11573[_FORV_19_], L4_11574[_FORV_23_], L5_11575[_FORV_27_]) >= A1_11571.health and A0_11570:GetComboDamage(A1_11571, L2_11572[_FORV_15_], L3_11573[_FORV_19_], L4_11574[_FORV_23_], L5_11575[_FORV_27_]) <= myHero.mana and L8_11578 > A0_11570:GetComboDamage(A1_11571, L2_11572[_FORV_15_], L3_11573[_FORV_19_], L4_11574[_FORV_23_], L5_11575[_FORV_27_]) then
                  L8_11578 = A0_11570:GetComboDamage(A1_11571, L2_11572[_FORV_15_], L3_11573[_FORV_19_], L4_11574[_FORV_23_], L5_11575[_FORV_27_])
                  L9_11579 = {
                    L2_11572[_FORV_15_],
                    L3_11573[_FORV_19_],
                    L4_11574[_FORV_23_],
                    L5_11575[_FORV_27_]
                  }
                end
              end
            end
          end
        end
        L6_11576[1] = L12_11582
        L6_11576[2] = L12_11582
        L6_11576[3] = L12_11582
        L6_11576[4] = L12_11582
        L6_11576[5] = L8_11578
        L6_11576[6] = L12_11582
      else
        for _FORV_18_ = 1, #L2_11572 do
          for _FORV_22_ = 1, #L3_11573 do
            for _FORV_26_ = 1, #L4_11574 do
              for _FORV_30_ = 1, #L5_11575 do
                if L13_11583 < A0_11570:GetComboDamage(A1_11571, L2_11572[_FORV_18_], L3_11573[_FORV_22_], L4_11574[_FORV_26_], L5_11575[_FORV_30_]) then
                end
              end
            end
          end
        end
        L6_11576[1] = _FOR_
        L6_11576[2] = L12_11582[2]
        L6_11576[3] = L12_11582[3]
        L6_11576[4] = L12_11582[4]
        L6_11576[5] = L13_11583
        L6_11576[6] = os.clock()
      end
      return L12_11582, L13_11583, L6_11576[3], L6_11576[4], L6_11576[5]
    end
    L8_11578 = A0_11570
    L7_11577 = A0_11570.GetComboDamage
    L9_11579 = A1_11571
    L10_11580 = A0_11570.Q
    L11_11581 = L10_11580
    L10_11580 = L10_11580.IsReady
    L10_11580 = L10_11580(L11_11581)
    L11_11581 = A0_11570.wShadow
    if L11_11581 == nil then
      L11_11581 = A0_11570.IsW1
      L11_11581 = L11_11581(L12_11582)
      if L11_11581 then
        L11_11581 = A0_11570.W
        L11_11581 = L11_11581.IsReady
        L11_11581 = L11_11581(L12_11582)
      end
    else
      L11_11581 = true
    end
    L8_11578 = L7_11577(L8_11578, L9_11579, L10_11580, L11_11581, L12_11582, L13_11583)
    L9_11579 = A1_11571.networkID
    L10_11580 = {
      L11_11581,
      L12_11582,
      L13_11583,
      false,
      L7_11577,
      os.clock() - L13_13 * 2
    }
    L11_11581 = false
    L12_12[L9_11579] = L10_11580
    L10_11580 = A0_11570
    L9_11579 = A0_11570.GetBestCombo
    L11_11581 = A1_11571
    return L9_11579(L10_11580, L11_11581)
  end
  class("__Ezreal")
  function __Ezreal.__init(A0_11584)
    local L1_11585, L2_11586, L3_11587, L4_11588, L5_11589, L6_11590, L7_11591, L8_11592, L9_11593, L10_11594, L11_11595, L12_11596, L13_11597, L14_11598, L15_11599, L16_11600, L17_11601, L18_11602, L19_11603, L20_11604, L21_11605, L22_11606, L23_11607, L24_11608, L25_11609, L26_11610, L27_11611, L28_11612, L29_11613, L30_11614, L31_11615, L32_11616, L33_11617, L34_11618, L35_11619, L36_11620, L37_11621, L38_11622, L39_11623, L40_11624, L41_11625, L42_11626, L43_11627, L44_11628, L45_11629, L46_11630, L47_11631, L48_11632, L49_11633, L50_11634, L51_11635, L52_11636, L53_11637, L54_11638, L55_11639, L56_11640, L57_11641, L58_11642, L59_11643, L60_11644, L61_11645, L62_11646, L63_11647, L64_11648, L65_11649, L66_11650, L67_11651, L68_11652, L69_11653, L70_11654, L71_11655, L72_11656, L73_11657, L74_11658, L75_11659, L76_11660, L77_11661, L78_11662, L79_11663, L80_11664, L81_11665, L82_11666, L83_11667, L84_11668, L85_11669, L86_11670, L87_11671, L88_11672, L89_11673, L90_11674, L91_11675, L92_11676, L93_11677, L94_11678, L95_11679, L96_11680, L97_11681, L98_11682, L99_11683, L100_11684, L101_11685, L102_11686, L103_11687, L104_11688, L105_11689, L106_11690, L107_11691, L108_11692, L109_11693, L110_11694, L111_11695, L112_11696, L113_11697, L114_11698, L115_11699, L116_11700, L117_11701, L118_11702, L119_11703, L120_11704, L121_11705, L122_11706, L123_11707, L124_11708, L125_11709, L126_11710, L127_11711, L128_11712, L129_11713, L130_11714, L131_11715, L132_11716, L133_11717, L134_11718, L135_11719, L136_11720, L137_11721, L138_11722, L139_11723, L140_11724, L141_11725, L142_11726, L143_11727, L144_11728, L145_11729, L146_11730, L147_11731, L148_11732, L149_11733, L150_11734, L151_11735, L152_11736, L153_11737, L154_11738, L155_11739, L156_11740, L157_11741, L158_11742, L159_11743, L160_11744, L161_11745, L162_11746, L163_11747, L164_11748, L165_11749, L166_11750, L167_11751, L168_11752, L169_11753, L170_11754, L171_11755, L172_11756, L173_11757, L174_11758, L175_11759, L176_11760, L177_11761, L178_11762, L179_11763, L180_11764, L181_11765, L182_11766, L183_11767, L184_11768, L185_11769, L186_11770, L187_11771, L188_11772, L189_11773, L190_11774, L191_11775, L192_11776, L193_11777, L194_11778, L195_11779, L196_11780, L197_11781, L198_11782, L199_11783, L200_11784, L201_11785, L202_11786, L203_11787, L204_11788, L205_11789, L206_11790, L207_11791, L208_11792, L209_11793, L210_11794, L211_11795, L212_11796, L213_11797, L214_11798, L215_11799, L216_11800, L217_11801, L218_11802, L219_11803, L220_11804, L221_11805, L222_11806, L223_11807, L224_11808, L225_11809, L226_11810, L227_11811, L228_11812, L229_11813, L230_11814, L231_11815, L232_11816, L233_11817, L234_11818, L235_11819, L236_11820, L237_11821, L238_11822, L239_11823, L240_11824, L241_11825, L242_11826, L243_11827, L244_11828, L245_11829, L246_11830, L247_11831, L248_11832, L249_11833, L250_11834, L251_11835, L252_11836, L253_11837, L254_11838
    A0_11584.ScriptName = "Forbidden Ezreal"
    A0_11584.Author = "Da Vinci"
    A0_11584.MenuLoaded = false
    A0_11584.Menu = nil
    A0_11584.TS = nil
  end
  function __Ezreal.OnTick(A0_11839)
    local L1_11840, L2_11841, L3_11842, L4_11843, L5_11844, L6_11845
    L1_11840 = 0
    L1_11840 = _ENV[L1_11840]
    if not L1_11840 then
      return
    end
    L1_11840 = L1_11840 * L1_11840
    L1_11840 = A0_11839.Menu
    if L1_11840 ~= nil then
      L1_11840 = A0_11839.TS
      if L1_11840 ~= nil then
        L1_11840 = A0_11839.MenuLoaded
      end
    elseif not L1_11840 then
      return
    end
    L1_11840 = A0_11839.TS
    L1_11840 = L1_11840.update
    L1_11840(L2_11841)
    L1_11840 = A0_11839.KillSteal
    L1_11840(L2_11841)
    L1_11840 = OrbwalkManager
    L1_11840 = L1_11840.IsCombo
    L1_11840 = L1_11840(L2_11841)
    if L1_11840 then
      L1_11840 = A0_11839.Combo
      L1_11840(L2_11841)
    else
      L1_11840 = OrbwalkManager
      L1_11840 = L1_11840.IsHarass
      L1_11840 = L1_11840(L2_11841)
      if L1_11840 then
        L1_11840 = A0_11839.Harass
        L1_11840(L2_11841)
      else
        L1_11840 = OrbwalkManager
        L1_11840 = L1_11840.IsClear
        L1_11840 = L1_11840(L2_11841)
        if L1_11840 then
          L1_11840 = A0_11839.Clear
          L1_11840(L2_11841)
        else
          L1_11840 = OrbwalkManager
          L1_11840 = L1_11840.IsLastHit
          L1_11840 = L1_11840(L2_11841)
          if L1_11840 then
            L1_11840 = A0_11839.LastHit
            L1_11840(L2_11841)
          end
        end
      end
    end
    L1_11840 = A0_11839.Menu
    L1_11840 = L1_11840.Keys
    L1_11840 = L1_11840.HarassToggle
    if L1_11840 then
      L1_11840 = A0_11839.Harass
      L1_11840(L2_11841)
    end
    L1_11840 = A0_11839.Menu
    L1_11840 = L1_11840.Keys
    L1_11840 = L1_11840.AssistedUltimate
    if L1_11840 then
      L1_11840 = nil
      L6_11845 = L3_11842()
      for L5_11844, L6_11845 in L2_11841(L3_11842, L4_11843, L5_11844, L6_11845, L3_11842()) do
        if A0_11839.R:ValidTarget(L6_11845) then
          if L1_11840 == nil then
            L1_11840 = L6_11845
          elseif GetDistanceSqr(mousePos, L1_11840) > GetDistanceSqr(mousePos, L6_11845) then
            L1_11840 = L6_11845
          end
        end
      end
      if L2_11841 then
        L2_11841(L3_11842, L4_11843)
      end
    end
    L1_11840 = A0_11839.Menu
    L1_11840 = L1_11840.Keys
    L1_11840 = L1_11840.LastHitToggle
    if L1_11840 then
      L1_11840 = OrbwalkManager
      L1_11840 = L1_11840.IsCombo
      L1_11840 = L1_11840(L2_11841)
      if not L1_11840 then
        L1_11840 = Q
        L1_11840 = L1_11840.LastHit
        L3_11842.Mode = L4_11843
        L3_11842.UseCast = false
        L1_11840 = L1_11840(L2_11841, L3_11842)
        if L2_11841 then
          if L2_11841 then
            L2_11841(L3_11842, L4_11843)
          end
        end
      end
    end
  end
  function __Ezreal.KillSteal(A0_11846)
    local L1_11847, L2_11848, L3_11849, L4_11850, L5_11851
    if not L1_11847 then
      return
    end
    L5_11851 = L2_11848()
    for L4_11850, L5_11851 in L1_11847(L2_11848, L3_11849, L4_11850, L5_11851, L2_11848()) do
      if IsValidTarget(L5_11851, 1800) and L5_11851.health > 0 and PercentageHealth(L5_11851) <= 30 then
        if A0_11846.Menu.KillSteal.useQ and A0_11846.Q:Damage(L5_11851) >= L5_11851.health then
          A0_11846.Q:Cast(L5_11851)
        end
        if A0_11846.Menu.KillSteal.useW and A0_11846.W:Damage(L5_11851) >= L5_11851.health then
          A0_11846.W:Cast(L5_11851)
        end
        if A0_11846.Menu.KillSteal.useE and A0_11846.E:Damage(L5_11851) >= L5_11851.health then
          A0_11846.E:Cast(L5_11851)
        end
        if A0_11846.Menu.KillSteal.useR and A0_11846.R:Damage(L5_11851) >= L5_11851.health then
          A0_11846.R:Cast(L5_11851)
        end
        if A0_11846.Menu.KillSteal.useIgnite and A3_3:IsReady() and A3_3:Damage(L5_11851) >= L5_11851.health then
          A3_3:Cast(L5_11851)
        end
      end
    end
  end
  function __Ezreal.Combo(A0_11852)
    local L1_11853, L2_11854, L3_11855, L4_11856, L5_11857, L6_11858, L7_11859, L8_11860, L9_11861
    L1_11853 = 0
    L1_11853 = _ENV[L1_11853]
    if not L1_11853 then
      return
    end
    L1_11853 = L1_11853 * L1_11853
    L1_11853 = A0_11852.TS
    L1_11853 = L1_11853.target
    if L2_11854 then
      if L2_11854 then
        L2_11854(L3_11855, L4_11856)
      end
      if L2_11854 then
        L2_11854(L3_11855, L4_11856)
      end
      if L2_11854 > 0 then
        if L2_11854 then
          L5_11857 = 1200
          if L2_11854 <= L3_11855 then
            L9_11861 = L3_11855()
            for L5_11857, L6_11858 in L2_11854(L3_11855, L4_11856, L5_11857, L6_11858, L7_11859, L8_11860, L9_11861, L3_11855()) do
              L7_11859 = A0_11852.R
              L8_11860 = L7_11859
              L7_11859 = L7_11859.GetPrediction
              L9_11861 = L6_11858
              L9_11861 = L7_11859(L8_11860, L9_11861, {
                TypeOfPrediction = "VPrediction"
              })
              if L9_11861 and type(L9_11861) == "number" and L9_11861 >= A0_11852.Menu.Combo.useR2 and L8_11860 then
                A0_11852.R:Cast(L1_11853)
              end
            end
          end
        end
      end
    end
  end
  function __Ezreal.Harass(A0_11862)
    local L1_11863
    L1_11863 = 0
    L1_11863 = _ENV[L1_11863]
    if not L1_11863 then
      return
    end
    L1_11863 = L1_11863 * L1_11863
    L1_11863 = PercentageMana
    L1_11863 = L1_11863()
    if L1_11863 >= A0_11862.Menu.Harass.Mana then
      L1_11863 = A0_11862.TS
      L1_11863 = L1_11863.target
      if ValidTarget(L1_11863) then
        if A0_11862.Menu.Harass.useQ then
          A0_11862.Q:Cast(L1_11863)
        end
        if A0_11862.Menu.Harass.useW then
          A0_11862.W:Cast(L1_11863)
        end
      end
    end
  end
  function __Ezreal.Clear(A0_11864)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_11864.Menu.LaneClear.Mana and A0_11864.Menu.LaneClear.useQ then
      A0_11864.Q:LaneClear()
      A0_11864.Q:LastHit()
    end
    if A0_11864.Menu.JungleClear.useQ then
      A0_11864.Q:JungleClear()
    end
  end
  function __Ezreal.LastHit(A0_11865)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_11865.Menu.LastHit.Mana and A0_11865.Menu.LastHit.useQ then
      A0_11865.Q:LastHit({
        Mode = A0_11865.Menu.LastHit.useQ
      })
    end
  end
  function __Ezreal.EvadeE(A0_11866, A1_11867)
    local L2_11868, L3_11869
    L2_11868 = 0
    L2_11868 = _ENV[L2_11868]
    if not L2_11868 then
      return
    end
    L2_11868 = L2_11868 * L2_11868
    L2_11868 = A0_11866.E
    L3_11869 = L2_11868
    L2_11868 = L2_11868.IsReady
    L2_11868 = L2_11868(L3_11869)
    if L2_11868 then
      L2_11868 = IsValidTarget
      L3_11869 = A1_11867
      L2_11868 = L2_11868(L3_11869)
      if L2_11868 then
        L2_11868 = Vector
        L3_11869 = myHero
        L2_11868 = L2_11868(L3_11869)
        L3_11869 = Vector
        L3_11869 = L3_11869(Vector(A1_11867) - Vector(myHero))
        L3_11869 = L3_11869.normalized
        L3_11869 = L3_11869(L3_11869)
        L3_11869 = L3_11869.perpendicular
        L3_11869 = L3_11869(L3_11869)
        L3_11869 = L3_11869 * A0_11866.E.Range
        L2_11868 = L2_11868 + L3_11869
        L3_11869 = Vector
        L3_11869 = L3_11869(myHero)
        L3_11869 = L3_11869 + Vector(Vector(A1_11867) - Vector(myHero)):normalized():perpendicular2() * A0_11866.E.Range
        if not Collides(L2_11868) then
          A0_11866.E:CastToVector(L2_11868)
        elseif not Collides(L3_11869) then
          A0_11866.E:CastToVector(L3_11869)
        else
          A0_11866.E:CastToVector(L2_11868)
        end
      end
    end
  end
  class("__Kayle")
  function __Kayle.__init(A0_11870)
    local L1_11871, L2_11872, L3_11873, L4_11874, L5_11875, L6_11876, L7_11877, L8_11878, L9_11879, L10_11880, L11_11881, L12_11882, L13_11883, L14_11884, L15_11885, L16_11886, L17_11887, L18_11888, L19_11889, L20_11890, L21_11891, L22_11892, L23_11893, L24_11894, L25_11895, L26_11896, L27_11897, L28_11898, L29_11899, L30_11900, L31_11901, L32_11902, L33_11903, L34_11904, L35_11905, L36_11906, L37_11907, L38_11908, L39_11909, L40_11910, L41_11911, L42_11912, L43_11913, L44_11914, L45_11915, L46_11916, L47_11917, L48_11918, L49_11919, L50_11920, L51_11921, L52_11922, L53_11923, L54_11924, L55_11925, L56_11926, L57_11927, L58_11928, L59_11929, L60_11930, L61_11931, L62_11932, L63_11933, L64_11934, L65_11935, L66_11936, L67_11937, L68_11938, L69_11939, L70_11940, L71_11941, L72_11942, L73_11943, L74_11944, L75_11945, L76_11946, L77_11947, L78_11948, L79_11949, L80_11950, L81_11951, L82_11952, L83_11953, L84_11954, L85_11955, L86_11956, L87_11957, L88_11958, L89_11959, L90_11960, L91_11961, L92_11962, L93_11963, L94_11964, L95_11965, L96_11966, L97_11967, L98_11968, L99_11969, L100_11970, L101_11971, L102_11972, L103_11973, L104_11974, L105_11975, L106_11976, L107_11977, L108_11978, L109_11979, L110_11980, L111_11981, L112_11982, L113_11983, L114_11984, L115_11985, L116_11986, L117_11987, L118_11988, L119_11989, L120_11990, L121_11991, L122_11992, L123_11993, L124_11994, L125_11995, L126_11996, L127_11997, L128_11998, L129_11999, L130_12000, L131_12001, L132_12002, L133_12003, L134_12004, L135_12005, L136_12006, L137_12007, L138_12008, L139_12009, L140_12010, L141_12011, L142_12012, L143_12013, L144_12014, L145_12015, L146_12016, L147_12017, L148_12018, L149_12019, L150_12020, L151_12021, L152_12022, L153_12023, L154_12024, L155_12025, L156_12026, L157_12027, L158_12028, L159_12029, L160_12030, L161_12031, L162_12032, L163_12033, L164_12034, L165_12035, L166_12036, L167_12037, L168_12038, L169_12039, L170_12040, L171_12041, L172_12042, L173_12043, L174_12044, L175_12045, L176_12046, L177_12047, L178_12048, L179_12049, L180_12050, L181_12051, L182_12052, L183_12053, L184_12054, L185_12055, L186_12056, L187_12057, L188_12058, L189_12059, L190_12060, L191_12061, L192_12062, L193_12063, L194_12064, L195_12065, L196_12066, L197_12067, L198_12068, L199_12069, L200_12070, L201_12071, L202_12072, L203_12073, L204_12074, L205_12075, L206_12076, L207_12077, L208_12078, L209_12079, L210_12080, L211_12081, L212_12082, L213_12083, L214_12084, L215_12085, L216_12086, L217_12087, L218_12088, L219_12089, L220_12090, L221_12091, L222_12092, L223_12093, L224_12094, L225_12095, L226_12096, L227_12097, L228_12098, L229_12099, L230_12100, L231_12101, L232_12102, L233_12103, L234_12104, L235_12105, L236_12106, L237_12107, L238_12108, L239_12109, L240_12110, L241_12111, L242_12112, L243_12113, L244_12114, L245_12115, L246_12116, L247_12117, L248_12118, L249_12119, L250_12120, L251_12121, L252_12122, L253_12123, L254_12124
    A0_11870.ScriptName = "Devourer Kayle"
    A0_11870.Author = "Da Vinci"
    A0_11870.MenuLoaded = false
    A0_11870.Menu = nil
    A0_11870.TS = nil
  end
  function __Kayle.OnTick(A0_12125)
    if not _ENV[0] then
      return
    end
    if A0_12125.Menu == nil or A0_12125.TS == nil or not A0_12125.MenuLoaded then
      return
    end
    A0_12125.TS:update()
    A0_12125:KillSteal()
    if OrbwalkManager:IsCombo() then
      A0_12125:Combo()
    elseif OrbwalkManager:IsHarass() then
      A0_12125:Harass()
    elseif OrbwalkManager:IsClear() then
      A0_12125:Clear()
    end
    if A0_12125.Menu.Keys.HarassToggle then
      A0_12125:Harass()
    end
  end
  function __Kayle.KillSteal(A0_12126)
    local L1_12127, L2_12128, L3_12129, L4_12130, L5_12131
    if not L1_12127 then
      return
    end
    L5_12131 = L2_12128()
    for L4_12130, L5_12131 in L1_12127(L2_12128, L3_12129, L4_12130, L5_12131, L2_12128()) do
      if IsValidTarget(L5_12131, 1800) and L5_12131.health > 0 and PercentageHealth(L5_12131) <= 30 then
        if A0_12126.Menu.KillSteal.useQ and A0_12126.Q:Damage(L5_12131) >= L5_12131.health then
          A0_12126.Q:Cast(L5_12131)
        end
        if A0_12126.Menu.KillSteal.useE and A0_12126.E:Damage(L5_12131) >= L5_12131.health then
          A0_12126.E:Cast(L5_12131)
        end
        if A0_12126.Menu.KillSteal.useIgnite and A3_3:IsReady() and A3_3:Damage(L5_12131) >= L5_12131.health then
          A3_3:Cast(L5_12131)
        end
      end
    end
  end
  function __Kayle.Combo(A0_12132)
    local L1_12133
    L1_12133 = 0
    L1_12133 = _ENV[L1_12133]
    if not L1_12133 then
      return
    end
    L1_12133 = L1_12133 * L1_12133
    L1_12133 = A0_12132.TS
    L1_12133 = L1_12133.target
    if IsValidTarget(L1_12133) then
      UseItems(L1_12133)
      if A0_12132.Menu.Combo.useQ then
        A0_12132.Q:Cast(L1_12133)
      end
      if A0_12132.Menu.Combo.useW and GetDistance(L1_12133) > 525 then
        A0_12132.W:Cast()
      end
      if A0_12132.Menu.Combo.useE then
        A0_12132.E:Cast()
      end
    end
  end
  function __Kayle.Harass(A0_12134)
    local L1_12135
    L1_12135 = 0
    L1_12135 = _ENV[L1_12135]
    if not L1_12135 then
      return
    end
    L1_12135 = L1_12135 * L1_12135
    L1_12135 = PercentageMana
    L1_12135 = L1_12135()
    if L1_12135 >= A0_12134.Menu.Harass.Mana then
      L1_12135 = A0_12134.TS
      L1_12135 = L1_12135.target
      if ValidTarget(L1_12135) then
        if A0_12134.Menu.Harass.useQ then
          A0_12134.Q:Cast(L1_12135)
        end
        if A0_12134.Menu.Harass.useW and GetDistance(L1_12135) > 525 then
          A0_12134.W:Cast()
        end
        if A0_12134.Menu.Harass.useW then
          A0_12134.E:Cast()
        end
      end
    end
  end
  function __Kayle.Clear(A0_12136)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_12136.Menu.LaneClear.Mana then
      if A0_12136.Menu.LaneClear.useQ then
        A0_12136.Q:LaneClear()
      end
      if A0_12136.Menu.LaneClear.useE then
        A0_12136.E:LaneClear()
      end
    end
    if A0_12136.Menu.JungleClear.useQ then
      A0_12136.Q:JungleClear()
    end
    if A0_12136.Menu.JungleClear.useW then
      A0_12136.W:JungleClear()
    end
    if A0_12136.Menu.JungleClear.useE then
      A0_12136.E:JungleClear()
    end
  end
  function __Kayle.EvadeR(A0_12137, A1_12138)
    if not _ENV[0] then
      return
    end
    if A0_12137.R:IsReady() and IsValidTarget(A1_12138) then
      A0_12137.R:Cast()
    end
  end
  class("__Chogath")
  function __Chogath.__init(A0_12139)
    local L1_12140, L2_12141, L3_12142, L4_12143, L5_12144, L6_12145, L7_12146, L8_12147, L9_12148, L10_12149, L11_12150, L12_12151, L13_12152, L14_12153, L15_12154, L16_12155, L17_12156, L18_12157, L19_12158, L20_12159, L21_12160, L22_12161, L23_12162, L24_12163, L25_12164, L26_12165, L27_12166, L28_12167, L29_12168, L30_12169, L31_12170, L32_12171, L33_12172, L34_12173, L35_12174, L36_12175, L37_12176, L38_12177, L39_12178, L40_12179, L41_12180, L42_12181, L43_12182, L44_12183, L45_12184, L46_12185, L47_12186, L48_12187, L49_12188, L50_12189, L51_12190, L52_12191, L53_12192, L54_12193, L55_12194, L56_12195, L57_12196, L58_12197, L59_12198, L60_12199, L61_12200, L62_12201, L63_12202, L64_12203, L65_12204, L66_12205, L67_12206, L68_12207, L69_12208, L70_12209, L71_12210, L72_12211, L73_12212, L74_12213, L75_12214, L76_12215, L77_12216, L78_12217, L79_12218, L80_12219, L81_12220, L82_12221, L83_12222, L84_12223, L85_12224, L86_12225, L87_12226, L88_12227, L89_12228, L90_12229, L91_12230, L92_12231, L93_12232, L94_12233, L95_12234, L96_12235, L97_12236, L98_12237, L99_12238, L100_12239, L101_12240, L102_12241, L103_12242, L104_12243, L105_12244, L106_12245, L107_12246, L108_12247, L109_12248, L110_12249, L111_12250, L112_12251, L113_12252, L114_12253, L115_12254, L116_12255, L117_12256, L118_12257, L119_12258, L120_12259, L121_12260, L122_12261, L123_12262, L124_12263, L125_12264, L126_12265, L127_12266, L128_12267, L129_12268, L130_12269, L131_12270, L132_12271, L133_12272, L134_12273, L135_12274, L136_12275, L137_12276, L138_12277, L139_12278, L140_12279, L141_12280, L142_12281, L143_12282, L144_12283, L145_12284, L146_12285, L147_12286, L148_12287, L149_12288, L150_12289, L151_12290, L152_12291, L153_12292, L154_12293, L155_12294, L156_12295, L157_12296, L158_12297, L159_12298, L160_12299, L161_12300, L162_12301, L163_12302, L164_12303, L165_12304, L166_12305, L167_12306, L168_12307, L169_12308, L170_12309, L171_12310, L172_12311, L173_12312, L174_12313, L175_12314, L176_12315, L177_12316, L178_12317, L179_12318, L180_12319, L181_12320, L182_12321, L183_12322, L184_12323, L185_12324, L186_12325, L187_12326, L188_12327, L189_12328, L190_12329, L191_12330, L192_12331, L193_12332, L194_12333, L195_12334, L196_12335, L197_12336, L198_12337, L199_12338, L200_12339, L201_12340, L202_12341, L203_12342, L204_12343, L205_12344, L206_12345, L207_12346, L208_12347, L209_12348, L210_12349, L211_12350, L212_12351, L213_12352, L214_12353, L215_12354, L216_12355, L217_12356, L218_12357, L219_12358, L220_12359, L221_12360, L222_12361, L223_12362, L224_12363, L225_12364, L226_12365, L227_12366, L228_12367, L229_12368, L230_12369, L231_12370, L232_12371, L233_12372, L234_12373, L235_12374, L236_12375, L237_12376, L238_12377, L239_12378, L240_12379, L241_12380, L242_12381, L243_12382, L244_12383, L245_12384, L246_12385, L247_12386, L248_12387, L249_12388, L250_12389, L251_12390, L252_12391, L253_12392, L254_12393
    A0_12139.ScriptName = "Tasty Cho'Gath"
    A0_12139.Author = "Da Vinci"
    A0_12139.MenuLoaded = false
    A0_12139.Menu = nil
    A0_12139.TS = nil
  end
  function __Chogath.OnTick(A0_12394)
    if not _ENV[0] then
      return
    end
    if A0_12394.Menu == nil or A0_12394.TS == nil or not A0_12394.MenuLoaded then
      return
    end
    A0_12394.TS:update()
    A0_12394:KillSteal()
    if OrbwalkManager:IsCombo() then
      A0_12394:Combo()
    elseif OrbwalkManager:IsHarass() then
      A0_12394:Harass()
    elseif OrbwalkManager:IsClear() then
      A0_12394:Clear()
    elseif OrbwalkManager:IsLastHit() then
      A0_12394:LastHit()
    end
    if A0_12394.Menu.Keys.HarassToggle then
      A0_12394:Harass()
    end
  end
  function __Chogath.KillSteal(A0_12395)
    local L1_12396, L2_12397, L3_12398, L4_12399, L5_12400
    if not L1_12396 then
      return
    end
    L5_12400 = L2_12397()
    for L4_12399, L5_12400 in L1_12396(L2_12397, L3_12398, L4_12399, L5_12400, L2_12397()) do
      if ValidTarget(L5_12400, A0_12395.TS.range) and L5_12400.health > 0 and PercentageHealth(L5_12400) <= 30 then
        if A0_12395.Menu.KillSteal.useQ and A0_12395.Q:Damage(L5_12400) >= L5_12400.health then
          A0_12395.Q:Cast(L5_12400)
        end
        if A0_12395.Menu.KillSteal.useW and A0_12395.W:Damage(L5_12400) >= L5_12400.health then
          A0_12395.W:Cast(L5_12400)
        end
        if A0_12395.Menu.KillSteal.useR and A0_12395.R:Damage(L5_12400) >= L5_12400.health then
          A0_12395.R:Cast(L5_12400)
        end
        if A0_12395.Menu.KillSteal.useIgnite and A3_3:IsReady() and A3_3:Damage(L5_12400) >= L5_12400.health then
          A3_3:Cast(L5_12400)
        end
      end
    end
  end
  function __Chogath.Combo(A0_12401)
    local L1_12402
    L1_12402 = 0
    L1_12402 = _ENV[L1_12402]
    if not L1_12402 then
      return
    end
    L1_12402 = L1_12402 * L1_12402
    L1_12402 = A0_12401.TS
    L1_12402 = L1_12402.target
    if ValidTarget(L1_12402) then
      if A0_12401.Menu.Combo.useQ then
        A0_12401.Q:Cast(L1_12402)
      end
      if A0_12401.Menu.Combo.useW then
        A0_12401.W:Cast(L1_12402)
      end
      if A0_12401.Menu.Combo.useR then
        A0_12401.R:Cast(L1_12402)
      end
    end
  end
  function __Chogath.Harass(A0_12403)
    local L1_12404
    L1_12404 = 0
    L1_12404 = _ENV[L1_12404]
    if not L1_12404 then
      return
    end
    L1_12404 = L1_12404 * L1_12404
    L1_12404 = PercentageMana
    L1_12404 = L1_12404()
    if L1_12404 >= A0_12403.Menu.Harass.Mana then
      L1_12404 = A0_12403.TS
      L1_12404 = L1_12404.target
      if ValidTarget(L1_12404) then
        if A0_12403.Menu.Harass.useQ then
          A0_12403.Q:Cast(L1_12404)
        end
        if A0_12403.Menu.Harass.useW then
          A0_12403.W:Cast(L1_12404)
        end
      end
    end
  end
  function __Chogath.Clear(A0_12405)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_12405.Menu.LaneClear.Mana then
      if A0_12405.Menu.LaneClear.useQ then
        A0_12405.Q:LaneClear()
      end
      if A0_12405.Menu.LaneClear.useW then
        A0_12405.W:LaneClear()
      end
    end
    if A0_12405.Menu.JungleClear.useQ then
      A0_12405.Q:JungleClear()
    end
    if A0_12405.Menu.JungleClear.useW then
      A0_12405.W:JungleClear()
    end
  end
  function __Chogath.LastHit(A0_12406)
    if not _ENV[0] then
      return
    end
    if PercentageMana() >= A0_12406.Menu.LastHit.Mana then
      if A0_12406.Menu.LastHit.useQ then
        A0_12406.Q:LastHit()
      end
      if A0_12406.Menu.LastHit.useW then
        A0_12406.W:LastHit()
      end
    end
  end
  function RequireSimpleLib()
    local L0_12407, L1_12408, L2_12409, L3_12410, L4_12411, L5_12412, L6_12413, L7_12414, L8_12415, L9_12416, L10_12417, L11_12418, L12_12419, L13_12420
    L0_12407 = 0
    L0_12407 = _ENV[L0_12407]
    if not L0_12407 then
      return
    end
    L0_12407 = L0_12407 * L0_12407
    L0_12407 = FileExist
    L1_12408 = LIB_PATH
    L2_12409 = "SimpleLib.lua"
    L1_12408 = L1_12408 .. L2_12409
    L0_12407 = L0_12407(L1_12408)
    if L0_12407 then
      L0_12407 = FileExist
      L1_12408 = SCRIPT_PATH
      L2_12409 = "SimpleLib.lua"
      L1_12408 = L1_12408 .. L2_12409
      L0_12407 = L0_12407(L1_12408)
      if not L0_12407 then
        L0_12407 = require
        L1_12408 = "SimpleLib"
        L0_12407(L1_12408)
        L0_12407 = _G
        L0_12407 = L0_12407.SimpleLibVersion
        if L0_12407 == nil then
          L0_12407 = print
          L1_12408 = "Your SimpleLib file is wrong."
          L0_12407(L1_12408)
          L0_12407 = false
          return L0_12407
        end
        L0_12407 = _G
        L0_12407 = L0_12407.SimpleLibVersion
        if L0_12407 < 1.21 then
          L0_12407 = print
          L1_12408 = "You need the lastest version of SimpleLib."
          L0_12407(L1_12408)
          L0_12407 = false
          return L0_12407
        end
        L0_12407 = true
        return L0_12407
      end
    end
    L0_12407 = FileExist
    L1_12408 = LIB_PATH
    L2_12409 = "SimpleLib.lua"
    L1_12408 = L1_12408 .. L2_12409
    L0_12407 = L0_12407(L1_12408)
    if L0_12407 then
      L0_12407 = FileExist
      L1_12408 = SCRIPT_PATH
      L2_12409 = "SimpleLib.lua"
      L1_12408 = L1_12408 .. L2_12409
      L0_12407 = L0_12407(L1_12408)
      if L0_12407 then
        L0_12407 = print
        L1_12408 = "SimpleLib.lua should not be in Custom Script (Only on Common folder), delete it from there..."
        L0_12407(L1_12408)
        L0_12407 = false
        return L0_12407
      end
    end
    function L0_12407(A0_12421)
      local L1_12422
      L1_12422 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
      return (A0_12421:gsub(".", function(A0_12423)
        local L1_12424
        L1_12424 = ""
        for _FORV_6_ = 8, 1, -1 do
          L1_12424 = L1_12424 .. (A0_12423:byte() % 2 ^ _FORV_6_ - A0_12423:byte() % 2 ^ (_FORV_6_ - 1) > 0 and "1" or "0")
        end
        return L1_12424
      end) .. "0000"):gsub("%d%d%d?%d?%d?%d?", function(A0_12425)
        local L1_12426, L2_12427, L3_12428, L4_12429, L5_12430
        L1_12426 = #A0_12425
        if L1_12426 < 6 then
          L1_12426 = ""
          return L1_12426
        end
        L1_12426 = 0
        for L5_12430 = 1, 6 do
          L1_12426 = L1_12426 + (A0_12425:sub(L5_12430, L5_12430) == "1" and 2 ^ (6 - L5_12430) or 0)
        end
        L5_12430 = L1_12426 + 1
        return L2_12427(L3_12428, L4_12429, L5_12430)
      end) .. ({
        "",
        "==",
        "="
      })[#A0_12421 % 3 + 1]
    end
    L1_12408 = LIB_PATH
    L2_12409 = "SimpleLib.lua"
    L1_12408 = L1_12408 .. L2_12409
    L2_12409 = "/BoL/TCPUpdater/GetScript5.php?script="
    L3_12410 = L0_12407
    L4_12411 = "raw.githubusercontent.com/jachicao/BoL/master/SimpleLib.lua"
    L3_12410 = L3_12410(L4_12411)
    L4_12411 = "&rand="
    L5_12412 = math
    L5_12412 = L5_12412.random
    L6_12413 = 99999999
    L5_12412 = L5_12412(L6_12413)
    L2_12409 = L2_12409 .. L3_12410 .. L4_12411 .. L5_12412
    L3_12410 = false
    L4_12411, L5_12412, L6_12413 = nil, nil, nil
    L7_12414 = false
    L8_12415, L9_12416, L10_12417 = nil, nil, nil
    L11_12418 = false
    L12_12419 = ""
    L13_12420 = ""
    if not L4_12411 then
      L4_12411 = require("socket")
    else
      L5_12412:close()
      L5_12412, L6_12413 = nil, nil
      L7_12414 = false
    end
    L5_12412 = L4_12411.tcp()
    if not L5_12412 then
      print("Socket Error")
    else
      L5_12412:settimeout(0, "b")
      L5_12412:settimeout(99999999, "t")
      L5_12412:connect("sx-bol.eu", 80)
      L11_12418 = false
      L12_12419 = ""
    end
    AddTickCallback(function()
      local L0_12431, L1_12432, L2_12433, L3_12434, L4_12435, L5_12436, L6_12437, L7_12438, L8_12439
      L0_12431 = L3_12410
      if L0_12431 then
        return
      end
      L0_12431 = L5_12412
      L1_12432 = L0_12431
      L0_12431 = L0_12431.receive
      L1_12432 = L0_12431(L1_12432, L2_12433)
      L10_12417 = L2_12433
      L9_12416 = L1_12432
      L8_12415 = L0_12431
      L0_12431 = L9_12416
      if L0_12431 == "timeout" then
        L0_12431 = L11_12418
        if not L0_12431 then
          L0_12431 = true
          L11_12418 = L0_12431
          L0_12431 = print
          L1_12432 = "Downloading a library called SimpleLib. Please wait..."
          L0_12431(L1_12432)
          L0_12431 = L5_12412
          L1_12432 = L0_12431
          L0_12431 = L0_12431.send
          L0_12431(L1_12432, L2_12433)
        end
      end
      L0_12431 = L8_12415
      if not L0_12431 then
        L0_12431 = L10_12417
        L0_12431 = #L0_12431
      elseif L0_12431 > 0 then
        L0_12431 = L7_12414
        if not L0_12431 then
          L0_12431 = true
          L7_12414 = L0_12431
        end
      end
      L0_12431 = L12_12419
      L1_12432 = L8_12415
      L1_12432 = L1_12432 or L10_12417
      L0_12431 = L0_12431 .. L1_12432
      L12_12419 = L0_12431
      L0_12431 = L12_12419
      L1_12432 = L0_12431
      L0_12431 = L0_12431.find
      L0_12431 = L0_12431(L1_12432, L2_12433)
      if L0_12431 then
        L0_12431 = L6_12413
        if not L0_12431 then
          L0_12431 = tonumber
          L1_12432 = L12_12419
          L1_12432 = L1_12432.sub
          L5_12436 = "<si"
          L6_12437 = "ze>"
          L5_12436 = L5_12436 .. L6_12437
          L5_12436 = L4_12435
          L6_12437 = "</si"
          L7_12438 = "ze>"
          L6_12437 = L6_12437 .. L7_12438
          L8_12439 = L1_12432(L2_12433, L3_12434, L4_12435)
          L0_12431 = L0_12431(L1_12432, L2_12433, L3_12434, L4_12435, L5_12436, L6_12437, L7_12438, L8_12439, L1_12432(L2_12433, L3_12434, L4_12435))
          L6_12413 = L0_12431
        end
        L0_12431 = L12_12419
        L1_12432 = L0_12431
        L0_12431 = L0_12431.find
        L0_12431 = L0_12431(L1_12432, L2_12433)
        if L0_12431 then
          L0_12431 = L12_12419
          L1_12432 = L0_12431
          L0_12431 = L0_12431.find
          L1_12432 = L0_12431(L1_12432, L2_12433)
          L5_12436 = "ipt>"
          L5_12436 = L1_12432 + 1
          L6_12437 = L2_12433 or -1
        end
      end
      L0_12431 = L12_12419
      L1_12432 = L0_12431
      L0_12431 = L0_12431.find
      L0_12431 = L0_12431(L1_12432, L2_12433)
      if L0_12431 then
        L0_12431 = L12_12419
        L1_12432 = L0_12431
        L0_12431 = L0_12431.find
        L1_12432 = L0_12431(L1_12432, L2_12433)
        L5_12436 = -1
        L12_12419 = L2_12433
        L13_12420 = L2_12433
        L5_12436 = "\n"
        L8_12439 = L3_12434(L4_12435, L5_12436)
        for L5_12436, L6_12437 in L2_12433(L3_12434, L4_12435, L5_12436, L6_12437, L7_12438, L8_12439, L3_12434(L4_12435, L5_12436)) do
          L8_12439 = L6_12437
          L7_12438 = L6_12437.len
          L7_12438 = L7_12438(L8_12439)
          if L7_12438 > 5 then
            L7_12438 = L13_12420
            L8_12439 = L6_12437
            L7_12438 = L7_12438 .. L8_12439
            L13_12420 = L7_12438
          end
        end
        L5_12436 = "ript>"
        L5_12436 = L4_12435
        L6_12437 = "</scr"
        L7_12438 = "ipt>"
        L6_12437 = L6_12437 .. L7_12438
        L5_12436 = L4_12435(L5_12436, L6_12437)
        if not L3_12434 or not L4_12435 then
        else
          L6_12437 = L13_12420
          L7_12438 = L6_12437
          L6_12437 = L6_12437.sub
          L8_12439 = L3_12434 + 1
          L6_12437 = L6_12437(L7_12438, L8_12439, L4_12435 - 1)
          L8_12439 = L6_12437
          L7_12438 = L6_12437.gsub
          L7_12438 = L7_12438(L8_12439, "\r", "")
          L8_12439 = L7_12438.len
          L8_12439 = L8_12439(L7_12438)
          if L8_12439 ~= L6_12413 then
            return
          end
          L8_12439 = Base64Decode
          L8_12439 = L8_12439(L7_12438)
          if type(load(L8_12439)) ~= "function" then
          else
            io.open(L1_12408, "w+b"):write(L8_12439)
            io.open(L1_12408, "w+b"):close()
            print("Required library downloaded. Please reload with 2x F9.")
          end
        end
        L6_12437 = true
        L3_12410 = L6_12437
      end
    end)
    return false
  end
  DelayAction(function()
    local L0_12440, L1_12441, L2_12442, L3_12443, L4_12444, L5_12445, L6_12446, L7_12447, L8_12448, L9_12449, L10_12450, L11_12451, L12_12452, L13_12453, L14_12454, L15_12455, L16_12456, L17_12457, L18_12458, L19_12459, L20_12460, L21_12461, L22_12462, L23_12463, L24_12464
    L0_12440 = 0
    L0_12440 = _ENV[L0_12440]
    if not L0_12440 then
      return
    end
    L0_12440 = L0_12440 * L0_12440
    function L0_12440(A0_12465)
      local L1_12466
      L1_12466 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
      return (A0_12465:gsub(".", function(A0_12467)
        local L1_12468
        L1_12468 = ""
        for _FORV_6_ = 8, 1, -1 do
          L1_12468 = L1_12468 .. (A0_12467:byte() % 2 ^ _FORV_6_ - A0_12467:byte() % 2 ^ (_FORV_6_ - 1) > 0 and "1" or "0")
        end
        return L1_12468
      end) .. "0000"):gsub("%d%d%d?%d?%d?%d?", function(A0_12469)
        local L1_12470, L2_12471, L3_12472, L4_12473, L5_12474
        L1_12470 = #A0_12469
        if L1_12470 < 6 then
          L1_12470 = ""
          return L1_12470
        end
        L1_12470 = 0
        for L5_12474 = 1, 6 do
          L1_12470 = L1_12470 + (A0_12469:sub(L5_12474, L5_12474) == "1" and 2 ^ (6 - L5_12474) or 0)
        end
        L5_12474 = L1_12470 + 1
        return L2_12471(L3_12472, L4_12473, L5_12474)
      end) .. ({
        "",
        "==",
        "="
      })[#A0_12465 % 3 + 1]
    end
    L1_12441 = A1_1
    L2_12442 = true
    L3_12443 = nil
    L4_12444 = "raw.githubusercontent.com/LucasRPC/BoL-Scripts/master/version/ForbiddenScript.version"
    L5_12445 = "raw.githubusercontent.com/LucasRPC/BoL-Scripts/master/ForbiddenScript.lua"
    L6_12446 = SCRIPT_PATH
    L7_12447 = FILE_NAME
    L6_12446 = L6_12446 .. L7_12447
    L7_12447 = "/BoL/TCPUpdater/GetScript"
    if L2_12442 then
      L8_12448 = "5"
    else
      L8_12448 = L8_12448 or "6"
    end
    L9_12449 = ".php?script="
    L10_12450 = L0_12440
    L11_12451 = L4_12444
    L10_12450 = L10_12450(L11_12451)
    L11_12451 = "&rand="
    L12_12452 = math
    L12_12452 = L12_12452.random
    L13_12453 = 99999999
    L12_12452 = L12_12452(L13_12453)
    L7_12447 = L7_12447 .. L8_12448 .. L9_12449 .. L10_12450 .. L11_12451 .. L12_12452
    L8_12448 = "/BoL/TCPUpdater/GetScript"
    if L2_12442 then
      L9_12449 = "5"
    else
      L9_12449 = L9_12449 or "6"
    end
    L10_12450 = ".php?script="
    L11_12451 = L0_12440
    L12_12452 = L5_12445
    L11_12451 = L11_12451(L12_12452)
    L12_12452 = "&rand="
    L13_12453 = math
    L13_12453 = L13_12453.random
    L14_12454 = 99999999
    L13_12453 = L13_12453(L14_12454)
    L8_12448 = L8_12448 .. L9_12449 .. L10_12450 .. L11_12451 .. L12_12452 .. L13_12453
    L9_12449, L10_12450, L11_12451 = nil, nil, nil
    L12_12452 = false
    L13_12453 = ""
    L14_12454 = false
    L15_12455 = ""
    L16_12456 = false
    L17_12457, L18_12458, L19_12459 = nil, nil, nil
    L20_12460 = false
    L21_12461 = 0
    L22_12462 = nil
    L23_12463 = "/BoL/TCPUpdater/GetScript"
    if L2_12442 then
      L24_12464 = "5"
    else
      L24_12464 = L24_12464 or "6"
    end
    L23_12463 = L23_12463 .. L24_12464 .. ".php?script=" .. L0_12440(L7_12447) .. "&rand=" .. math.random(99999999)
    function L24_12464(A0_12475)
      if not L9_12449 then
        L9_12449 = require("socket")
      else
        L10_12450:close()
        L10_12450 = nil
        L3_12443 = nil
        L21_12461 = false
      end
      L10_12450 = L9_12449.tcp()
      if not L10_12450 then
        print("Socket Error")
      else
        L10_12450:settimeout(0, "b")
        L10_12450:settimeout(99999999, "t")
        L10_12450:connect(tostring("sx-bol.eu"), 80)
        L23_12463 = A0_12475
        L12_12452 = false
        L13_12453 = ""
      end
    end
    L24_12464(L7_12447)
    AddTickCallback(function()
      local L0_12476, L1_12477, L2_12478, L3_12479, L4_12480, L5_12481, L6_12482
      L0_12476 = L14_12454
      if L0_12476 then
        return
      end
      L0_12476 = L10_12450
      L1_12477 = L0_12476
      L0_12476 = L0_12476.receive
      L1_12477 = L0_12476(L1_12477, L2_12478)
      L19_12459 = L2_12478
      L18_12458 = L1_12477
      L17_12457 = L0_12476
      L0_12476 = L18_12458
      if L0_12476 == "timeout" then
        L0_12476 = L12_12452
        if not L0_12476 then
          L0_12476 = true
          L12_12452 = L0_12476
          L0_12476 = L10_12450
          L1_12477 = L0_12476
          L0_12476 = L0_12476.send
          L0_12476(L1_12477, L2_12478)
        end
      end
      L0_12476 = L17_12457
      if not L0_12476 then
        L0_12476 = L19_12459
        L0_12476 = #L0_12476
      elseif L0_12476 > 0 then
        L0_12476 = L21_12461
        if not L0_12476 then
          L0_12476 = true
          L21_12461 = L0_12476
        end
      end
      L0_12476 = L13_12453
      L1_12477 = L17_12457
      L1_12477 = L1_12477 or L19_12459
      L0_12476 = L0_12476 .. L1_12477
      L13_12453 = L0_12476
      L0_12476 = L13_12453
      L1_12477 = L0_12476
      L0_12476 = L0_12476.find
      L0_12476 = L0_12476(L1_12477, L2_12478)
      if L0_12476 then
        L0_12476 = L3_12443
        if not L0_12476 then
          L0_12476 = tonumber
          L1_12477 = L13_12453
          L1_12477 = L1_12477.sub
          L5_12481 = "<si"
          L6_12482 = "ze>"
          L5_12481 = L5_12481 .. L6_12482
          L5_12481 = L4_12480
          L6_12482 = "</si"
          L6_12482 = L6_12482 .. "ze>"
          L6_12482 = L1_12477(L2_12478, L3_12479, L4_12480)
          L0_12476 = L0_12476(L1_12477, L2_12478, L3_12479, L4_12480, L5_12481, L6_12482, L1_12477(L2_12478, L3_12479, L4_12480))
          L3_12443 = L0_12476
        end
        L0_12476 = L13_12453
        L1_12477 = L0_12476
        L0_12476 = L0_12476.find
        L0_12476 = L0_12476(L1_12477, L2_12478)
        if L0_12476 then
          L0_12476 = L13_12453
          L1_12477 = L0_12476
          L0_12476 = L0_12476.find
          L1_12477 = L0_12476(L1_12477, L2_12478)
          L5_12481 = "ipt>"
          L5_12481 = L1_12477 + 1
          L6_12482 = L2_12478 or -1
        end
      end
      L0_12476 = L13_12453
      L1_12477 = L0_12476
      L0_12476 = L0_12476.find
      L0_12476 = L0_12476(L1_12477, L2_12478)
      if L0_12476 then
        L0_12476 = L13_12453
        L1_12477 = L0_12476
        L0_12476 = L0_12476.find
        L1_12477 = L0_12476(L1_12477, L2_12478)
        L5_12481 = -1
        L13_12453 = L2_12478
        L15_12455 = L2_12478
        L5_12481 = "\n"
        L6_12482 = L3_12479(L4_12480, L5_12481)
        for L5_12481, L6_12482 in L2_12478(L3_12479, L4_12480, L5_12481, L6_12482, L3_12479(L4_12480, L5_12481)) do
          if L6_12482:len() > 5 then
            L15_12455 = L15_12455 .. L6_12482
          end
        end
        L5_12481 = "ipt>"
        L5_12481 = L4_12480
        L6_12482 = "</sc"
        L6_12482 = L6_12482 .. "ript>"
        L5_12481 = L4_12480(L5_12481, L6_12482)
        if not L3_12479 or not L4_12480 then
        else
          L6_12482 = Base64Decode
          L6_12482 = L6_12482(L13_12453:sub(L3_12479 + 1, L4_12480 - 1))
          L22_12462 = L6_12482
          L6_12482 = L22_12462
          if L6_12482 ~= nil then
            L6_12482 = tonumber
            L6_12482 = L6_12482(L22_12462)
            L22_12462 = L6_12482
            L6_12482 = L22_12462
            if L6_12482 ~= nil then
              L6_12482 = L1_12441
              if L6_12482 ~= nil then
                L6_12482 = type
                L6_12482 = L6_12482(L22_12462)
                if L6_12482 == "number" then
                  L6_12482 = type
                  L6_12482 = L6_12482(L1_12441)
                  if L6_12482 == "number" then
                    L6_12482 = L22_12462
                    if L6_12482 > L1_12441 then
                      L6_12482 = L24_12464
                      L6_12482(L8_12448)
                      L6_12482 = AddTickCallback
                      L6_12482(function()
                        local L0_12483, L1_12484, L2_12485, L3_12486, L4_12487, L5_12488, L6_12489, L7_12490, L8_12491
                        L0_12483 = L16_12456
                        if L0_12483 then
                          return
                        end
                        L0_12483 = L10_12450
                        L1_12484 = L0_12483
                        L0_12483 = L0_12483.receive
                        L1_12484 = L0_12483(L1_12484, L2_12485)
                        L19_12459 = L2_12485
                        L18_12458 = L1_12484
                        L17_12457 = L0_12483
                        L0_12483 = L18_12458
                        if L0_12483 == "timeout" then
                          L0_12483 = L12_12452
                          if not L0_12483 then
                            L0_12483 = true
                            L12_12452 = L0_12483
                            L0_12483 = L10_12450
                            L1_12484 = L0_12483
                            L0_12483 = L0_12483.send
                            L0_12483(L1_12484, L2_12485)
                          end
                        end
                        L0_12483 = L17_12457
                        if not L0_12483 then
                          L0_12483 = L19_12459
                          L0_12483 = #L0_12483
                        elseif L0_12483 > 0 then
                          L0_12483 = L21_12461
                          if not L0_12483 then
                            L0_12483 = true
                            L21_12461 = L0_12483
                          end
                        end
                        L0_12483 = L13_12453
                        L1_12484 = L17_12457
                        L1_12484 = L1_12484 or L19_12459
                        L0_12483 = L0_12483 .. L1_12484
                        L13_12453 = L0_12483
                        L0_12483 = L13_12453
                        L1_12484 = L0_12483
                        L0_12483 = L0_12483.find
                        L0_12483 = L0_12483(L1_12484, L2_12485)
                        if L0_12483 then
                          L0_12483 = L3_12443
                          if not L0_12483 then
                            L0_12483 = tonumber
                            L1_12484 = L13_12453
                            L1_12484 = L1_12484.sub
                            L5_12488 = "<si"
                            L6_12489 = "ze>"
                            L5_12488 = L5_12488 .. L6_12489
                            L5_12488 = L4_12487
                            L6_12489 = "</si"
                            L7_12490 = "ze>"
                            L6_12489 = L6_12489 .. L7_12490
                            L8_12491 = L1_12484(L2_12485, L3_12486, L4_12487)
                            L0_12483 = L0_12483(L1_12484, L2_12485, L3_12486, L4_12487, L5_12488, L6_12489, L7_12490, L8_12491, L1_12484(L2_12485, L3_12486, L4_12487))
                            L3_12443 = L0_12483
                          end
                          L0_12483 = L13_12453
                          L1_12484 = L0_12483
                          L0_12483 = L0_12483.find
                          L0_12483 = L0_12483(L1_12484, L2_12485)
                          if L0_12483 then
                            L0_12483 = L13_12453
                            L1_12484 = L0_12483
                            L0_12483 = L0_12483.find
                            L1_12484 = L0_12483(L1_12484, L2_12485)
                            L5_12488 = "ipt>"
                            L5_12488 = L1_12484 + 1
                            L6_12489 = L2_12485 or -1
                          end
                        end
                        L0_12483 = L13_12453
                        L1_12484 = L0_12483
                        L0_12483 = L0_12483.find
                        L0_12483 = L0_12483(L1_12484, L2_12485)
                        if L0_12483 then
                          L0_12483 = L13_12453
                          L1_12484 = L0_12483
                          L0_12483 = L0_12483.find
                          L1_12484 = L0_12483(L1_12484, L2_12485)
                          L5_12488 = -1
                          L13_12453 = L2_12485
                          L15_12455 = L2_12485
                          L5_12488 = "\n"
                          L8_12491 = L3_12486(L4_12487, L5_12488)
                          for L5_12488, L6_12489 in L2_12485(L3_12486, L4_12487, L5_12488, L6_12489, L7_12490, L8_12491, L3_12486(L4_12487, L5_12488)) do
                            L8_12491 = L6_12489
                            L7_12490 = L6_12489.len
                            L7_12490 = L7_12490(L8_12491)
                            if L7_12490 > 5 then
                              L7_12490 = L15_12455
                              L8_12491 = L6_12489
                              L7_12490 = L7_12490 .. L8_12491
                              L15_12455 = L7_12490
                            end
                          end
                          L5_12488 = "ript>"
                          L5_12488 = L4_12487
                          L6_12489 = "</scr"
                          L7_12490 = "ipt>"
                          L6_12489 = L6_12489 .. L7_12490
                          L5_12488 = L4_12487(L5_12488, L6_12489)
                          if not L3_12486 or not L4_12487 then
                          else
                            L6_12489 = L15_12455
                            L7_12490 = L6_12489
                            L6_12489 = L6_12489.sub
                            L8_12491 = L3_12486 + 1
                            L6_12489 = L6_12489(L7_12490, L8_12491, L4_12487 - 1)
                            L8_12491 = L6_12489
                            L7_12490 = L6_12489.gsub
                            L7_12490 = L7_12490(L8_12491, "\r", "")
                            L8_12491 = L7_12490.len
                            L8_12491 = L8_12491(L7_12490)
                            if L8_12491 ~= L3_12443 then
                              return
                            end
                            L8_12491 = Base64Decode
                            L8_12491 = L8_12491(L7_12490)
                            if type(load(L8_12491)) ~= "function" then
                            else
                              io.open(L6_12446, "w+b"):write(L8_12491)
                              io.open(L6_12446, "w+b"):close()
                            end
                          end
                          L6_12489 = true
                          L16_12456 = L6_12489
                        end
                      end)
                    end
                  end
                end
              end
            end
          else
          end
        end
        L6_12482 = true
        L14_12454 = L6_12482
      end
    end)
  end, 30)
  assert(load(Base64Decode("G0x1YVIAAQQEBAgAGZMNChoKAAAAAAAAAAAAAQIKAAAABgBAAEFAAAAdQAABBkBAAGUAAAAKQACBBkBAAGVAAAAKQICBHwCAAAQAAAAEBgAAAGNsYXNzAAQNAAAAU2NyaXB0U3RhdHVzAAQHAAAAX19pbml0AAQLAAAAU2VuZFVwZGF0ZQACAAAAAgAAAAgAAAACAAotAAAAhkBAAMaAQAAGwUAABwFBAkFBAQAdgQABRsFAAEcBwQKBgQEAXYEAAYbBQACHAUEDwcEBAJ2BAAHGwUAAxwHBAwECAgDdgQABBsJAAAcCQQRBQgIAHYIAARYBAgLdAAABnYAAAAqAAIAKQACFhgBDAMHAAgCdgAABCoCAhQqAw4aGAEQAx8BCAMfAwwHdAIAAnYAAAAqAgIeMQEQAAYEEAJ1AgAGGwEQA5QAAAJ1AAAEfAIAAFAAAAAQFAAAAaHdpZAAEDQAAAEJhc2U2NEVuY29kZQAECQAAAHRvc3RyaW5nAAQDAAAAb3MABAcAAABnZXRlbnYABBUAAABQUk9DRVNTT1JfSURFTlRJRklFUgAECQAAAFVTRVJOQU1FAAQNAAAAQ09NUFVURVJOQU1FAAQQAAAAUFJPQ0VTU09SX0xFVkVMAAQTAAAAUFJPQ0VTU09SX1JFVklTSU9OAAQEAAAAS2V5AAQHAAAAc29ja2V0AAQIAAAAcmVxdWlyZQAECgAAAGdhbWVTdGF0ZQAABAQAAAB0Y3AABAcAAABhc3NlcnQABAsAAABTZW5kVXBkYXRlAAMAAAAAAADwPwQUAAAAQWRkQnVnc3BsYXRDYWxsYmFjawABAAAACAAAAAgAAAAAAAMFAAAABQAAAAwAQACBQAAAHUCAAR8AgAACAAAABAsAAABTZW5kVXBkYXRlAAMAAAAAAAAAQAAAAAABAAAAAQAQAAAAQG9iZnVzY2F0ZWQubHVhAAUAAAAIAAAACAAAAAgAAAAIAAAACAAAAAAAAAABAAAABQAAAHNlbGYAAQAAAAAAEAAAAEBvYmZ1c2NhdGVkLmx1YQAtAAAAAwAAAAMAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABgAAAAYAAAAGAAAABgAAAAUAAAADAAAAAwAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAIAAAACAAAAAgAAAAIAAAAAgAAAAUAAABzZWxmAAAAAAAtAAAAAgAAAGEAAAAAAC0AAAABAAAABQAAAF9FTlYACQAAAA4AAAACAA0XAAAAhwBAAIxAQAEBgQAAQcEAAJ1AAAKHAEAAjABBAQFBAQBHgUEAgcEBAMcBQgABwgEAQAKAAIHCAQDGQkIAx4LCBQHDAgAWAQMCnUCAAYcAQACMAEMBnUAAAR8AgAANAAAABAQAAAB0Y3AABAgAAABjb25uZWN0AAQRAAAAc2NyaXB0c3RhdHVzLm5ldAADAAAAAAAAVEAEBQAAAHNlbmQABAsAAABHRVQgL3N5bmMtAAQEAAAAS2V5AAQCAAAALQAEBQAAAGh3aWQABAcAAABteUhlcm8ABAkAAABjaGFyTmFtZQAEJgAAACBIVFRQLzEuMA0KSG9zdDogc2NyaXB0c3RhdHVzLm5ldA0KDQoABAYAAABjbG9zZQAAAAAAAQAAAAAAEAAAAEBvYmZ1c2NhdGVkLmx1YQAXAAAACgAAAAoAAAAKAAAACgAAAAoAAAALAAAACwAAAAsAAAALAAAADAAAAAwAAAANAAAADQAAAA0AAAAOAAAADgAAAA4AAAAOAAAACwAAAA4AAAAOAAAADgAAAA4AAAACAAAABQAAAHNlbGYAAAAAABcAAAACAAAAYQAAAAAAFwAAAAEAAAAFAAAAX0VOVgABAAAAAQAQAAAAQG9iZnVzY2F0ZWQubHVhAAoAAAABAAAAAQAAAAEAAAACAAAACAAAAAIAAAAJAAAADgAAAAkAAAAOAAAAAAAAAAEAAAAFAAAAX0VOVgA="), nil, "bt", _ENV))()
  ScriptStatus("SFIGGLHKMNH")
end
